Bundle (s9e\TextFormatter\Tests\Bundle)
 [x] The default implementation for getJS() returns an empty string
 [x] parse() creates a parser, parses the input and returns the output
 [x] parse() reuses the same parser on consecutive calls
 [x] parse() executes static::$beforeParse before calling the parser's parse() method
 [x] parse() executes static::$afterParse after calling the parser's parse() method
 [x] render() creates a renderer, renders the input and returns the result
 [x] render() reuses the same renderer on consecutive calls
 [x] render() calls setParameters() with its second argument
 [x] render() executes static::$beforeRender before calling the renderer's render() method
 [x] render() executes static::$afterRender after calling the renderer's render() method
 [x] unparse() takes the XML representation and returns the original text
 [x] unparse() executes static::$beforeUnparse before calling the parser's unparse() method
 [x] unparse() executes static::$afterUnparse after calling the parser's unparse() method
 [x] reset() removes the cached parser and renderer

Fatdown (s9e\TextFormatter\Tests\Bundles\Fatdown)
 [x] getCachedParser() returns an instance of s9e\TextFormatter\Parser
 [x] getCachedParser() returns the same instance of s9e\TextFormatter\Parser
 [x] getParser() returns a non-empty string
 [x] getParser() returns an instance of s9e\TextFormatter\Parser
 [x] getParser() returns a new instance of s9e\TextFormatter\Parser
 [x] getCachedRenderer() returns an instance of s9e\TextFormatter\Renderer
 [x] getCachedRenderer() returns the same instance of s9e\TextFormatter\Renderer
 [x] getRenderer() returns an instance of s9e\TextFormatter\Renderer
 [x] getRenderer() returns a new instance of s9e\TextFormatter\Renderer
 [x] The renderer can be un/serialized
 [x] Rendering tests (Quick enabled) with data set #0
 [x] Rendering tests (Quick enabled) with data set #1
 [x] Rendering tests (Quick enabled) with data set #2
 [x] Rendering tests (Quick enabled) with data set #3
 [x] Rendering tests (Quick enabled) with data set #4
 [x] Rendering tests (Quick enabled) with data set #5
 [x] Rendering tests (Quick enabled) with data set #6
 [x] Rendering tests (Quick enabled) with data set #7
 [x] Rendering tests (Quick enabled) with data set #8
 [x] Rendering tests (Quick enabled) with data set #9
 [x] Rendering tests (Quick enabled) with data set #10
 [x] Rendering tests (Quick enabled) with data set #11
 [x] Rendering tests (Quick enabled) with data set #12
 [x] Rendering tests (Quick enabled) with data set #13
 [x] Rendering tests (Quick enabled) with data set #14
 [x] Rendering tests (Quick enabled) with data set #15
 [x] Rendering tests (Quick enabled) with data set #16
 [x] Rendering tests (Quick disabled) with data set #0
 [x] Rendering tests (Quick disabled) with data set #1
 [x] Rendering tests (Quick disabled) with data set #2
 [x] Rendering tests (Quick disabled) with data set #3
 [x] Rendering tests (Quick disabled) with data set #4
 [x] Rendering tests (Quick disabled) with data set #5
 [x] Rendering tests (Quick disabled) with data set #6
 [x] Rendering tests (Quick disabled) with data set #7
 [x] Rendering tests (Quick disabled) with data set #8
 [x] Rendering tests (Quick disabled) with data set #9
 [x] Rendering tests (Quick disabled) with data set #10
 [x] Rendering tests (Quick disabled) with data set #11
 [x] Rendering tests (Quick disabled) with data set #12
 [x] Rendering tests (Quick disabled) with data set #13
 [x] Rendering tests (Quick disabled) with data set #14
 [x] Rendering tests (Quick disabled) with data set #15
 [x] Rendering tests (Quick disabled) with data set #16

Forum (s9e\TextFormatter\Tests\Bundles\Forum)
 [x] getCachedParser() returns an instance of s9e\TextFormatter\Parser
 [x] getCachedParser() returns the same instance of s9e\TextFormatter\Parser
 [x] getParser() returns a non-empty string
 [x] getParser() returns an instance of s9e\TextFormatter\Parser
 [x] getParser() returns a new instance of s9e\TextFormatter\Parser
 [x] getCachedRenderer() returns an instance of s9e\TextFormatter\Renderer
 [x] getCachedRenderer() returns the same instance of s9e\TextFormatter\Renderer
 [x] getRenderer() returns an instance of s9e\TextFormatter\Renderer
 [x] getRenderer() returns a new instance of s9e\TextFormatter\Renderer
 [x] The renderer can be un/serialized
 [x] Rendering tests (Quick enabled) with data set #0
 [x] Rendering tests (Quick enabled) with data set #1
 [x] Rendering tests (Quick enabled) with data set #2
 [x] Rendering tests (Quick enabled) with data set #3
 [x] Rendering tests (Quick enabled) with data set #4
 [x] Rendering tests (Quick enabled) with data set #5
 [x] Rendering tests (Quick enabled) with data set #6
 [x] Rendering tests (Quick enabled) with data set #7
 [x] Rendering tests (Quick enabled) with data set #8
 [x] Rendering tests (Quick enabled) with data set #9
 [x] Rendering tests (Quick enabled) with data set #10
 [x] Rendering tests (Quick enabled) with data set #11
 [x] Rendering tests (Quick enabled) with data set #12
 [x] Rendering tests (Quick enabled) with data set #13
 [x] Rendering tests (Quick enabled) with data set #14
 [x] Rendering tests (Quick enabled) with data set #15
 [x] Rendering tests (Quick enabled) with data set #16
 [x] Rendering tests (Quick enabled) with data set #17
 [x] Rendering tests (Quick enabled) with data set #18
 [x] Rendering tests (Quick enabled) with data set #19
 [x] Rendering tests (Quick enabled) with data set #20
 [x] Rendering tests (Quick enabled) with data set #21
 [x] Rendering tests (Quick enabled) with data set #22
 [x] Rendering tests (Quick enabled) with data set #23
 [x] Rendering tests (Quick enabled) with data set #24
 [x] Rendering tests (Quick enabled) with data set #25
 [x] Rendering tests (Quick enabled) with data set #26
 [x] Rendering tests (Quick enabled) with data set #27
 [x] Rendering tests (Quick enabled) with data set #28
 [x] Rendering tests (Quick disabled) with data set #0
 [x] Rendering tests (Quick disabled) with data set #1
 [x] Rendering tests (Quick disabled) with data set #2
 [x] Rendering tests (Quick disabled) with data set #3
 [x] Rendering tests (Quick disabled) with data set #4
 [x] Rendering tests (Quick disabled) with data set #5
 [x] Rendering tests (Quick disabled) with data set #6
 [x] Rendering tests (Quick disabled) with data set #7
 [x] Rendering tests (Quick disabled) with data set #8
 [x] Rendering tests (Quick disabled) with data set #9
 [x] Rendering tests (Quick disabled) with data set #10
 [x] Rendering tests (Quick disabled) with data set #11
 [x] Rendering tests (Quick disabled) with data set #12
 [x] Rendering tests (Quick disabled) with data set #13
 [x] Rendering tests (Quick disabled) with data set #14
 [x] Rendering tests (Quick disabled) with data set #15
 [x] Rendering tests (Quick disabled) with data set #16
 [x] Rendering tests (Quick disabled) with data set #17
 [x] Rendering tests (Quick disabled) with data set #18
 [x] Rendering tests (Quick disabled) with data set #19
 [x] Rendering tests (Quick disabled) with data set #20
 [x] Rendering tests (Quick disabled) with data set #21
 [x] Rendering tests (Quick disabled) with data set #22
 [x] Rendering tests (Quick disabled) with data set #23
 [x] Rendering tests (Quick disabled) with data set #24
 [x] Rendering tests (Quick disabled) with data set #25
 [x] Rendering tests (Quick disabled) with data set #26
 [x] Rendering tests (Quick disabled) with data set #27
 [x] Rendering tests (Quick disabled) with data set #28

Media Pack (s9e\TextFormatter\Tests\Bundles\MediaPack)
 [x] getCachedParser() returns an instance of s9e\TextFormatter\Parser
 [x] getCachedParser() returns the same instance of s9e\TextFormatter\Parser
 [x] getParser() returns a non-empty string
 [x] getParser() returns an instance of s9e\TextFormatter\Parser
 [x] getParser() returns a new instance of s9e\TextFormatter\Parser
 [x] getCachedRenderer() returns an instance of s9e\TextFormatter\Renderer
 [x] getCachedRenderer() returns the same instance of s9e\TextFormatter\Renderer
 [x] getRenderer() returns an instance of s9e\TextFormatter\Renderer
 [x] getRenderer() returns a new instance of s9e\TextFormatter\Renderer
 [x] The renderer can be un/serialized
 [x] Rendering tests (Quick enabled) with data set #0
 [x] Rendering tests (Quick enabled) with data set #1
 [x] Rendering tests (Quick disabled) with data set #0
 [x] Rendering tests (Quick disabled) with data set #1

Bundle Generator (s9e\TextFormatter\Tests\Configurator\BundleGenerator)
 [x] generate() returns the bundle's PHP source
 [x] generate() accepts namespaced class names
 [x] generate() does not create a JS parser if JavaScript is not enabled
 [x] generate() creates a JS parser if JavaScript is enabled
 [x] The bundle file contains the header set in $configurator->phpHeader
 [x] A custom serializer can be set in $bundleGenerator->serializer
 [x] A custom unserializer can be set in $bundleGenerator->unserializer
 [x] If the renderer is an instance of the PHP renderer, its source is automatically loaded if the path to its file is known
 [x] Does not attempt to load the renderer's source if autoInclude is false
 [x] (before|after)(Parser|Render|Unparse) events are added to the bundle
 [x] The parserSetup callback is added to the source
 [x] The rendererSetup callback is added to the source
 [x] exportCallback() with data set #0
 [x] exportCallback() with data set #1
 [x] exportCallback() with data set #2
 [x] exportCallback() with data set #3
 [x] exportCallback() with data set #4
 [x] exportCallback() with data set #5
 [x] exportCallback() with data set #6
 [x] exportCallback() with data set #7
 [x] exportCallback() with data set #8
 [x] exportObject() with data set #0
 [x] exportObject() with data set #1

Bundle (s9e\TextFormatter\Tests\Configurator\Bundle)
 [x] getConfigurator() returns a configured instance of Configurator
 [x] getOptions() returns an empty array

Fatdown (s9e\TextFormatter\Tests\Configurator\Bundles\Fatdown)
 [x] Features

Forum (s9e\TextFormatter\Tests\Configurator\Bundles\Forum)
 [x] Features

Media Pack (s9e\TextFormatter\Tests\Configurator\Bundles\MediaPack)
 [x] Features
 [x] Does not create BBCodes by default
 [x] Creates a MEDIA BBCode if the BBCodes plugin is loaded

Attribute Collection (s9e\TextFormatter\Tests\Configurator\Collections\AttributeCollection)
 [x] add() returns an instance of s9e\TextFormatter\Configurator\Items\Attribute
 [x] add() normalizes the attribute name
 [x] delete() normalizes the attribute name
 [x] exists() normalizes the attribute name
 [x] get() normalizes the attribute name
 [x] set() normalizes the attribute name
 [x] Replaces duplicates by default
 [x] Throws an meaningful exception message when creating an Attribute that already exists
 [x] Throws an exception when accessing an Attribute that does not exist

Attribute Filter Chain (s9e\TextFormatter\Tests\Configurator\Collections\AttributeFilterChain)
 [x] append() throws a RuntimeException on invalid callbacks
 [x] prepend() throws a RuntimeException on invalid callbacks
 [x] append() throws an InvalidArgumentException on uncallable callbacks
 [x] prepend() throws an InvalidArgumentException on uncallable callbacks
 [x] PHP string callbacks are normalized to an instance of AttributeFilter
 [x] PHP array callbacks are normalized to an instance of AttributeFilter
 [x] Default filters such as "#int" are normalized to an instance of the corresponding AttributeFilter
 [x] Default filters accept positional constructor arguments
 [x] Default filters accept named constructor arguments
 [x] Instances of AttributeFilter are added as-is
 [x] Automatically parses callback parameters

Attribute Filter Collection (s9e\TextFormatter\Tests\Configurator\Collections\AttributeFilterCollection)
 [x] Filter names that start with # are normalized to lowercase
 [x] set() accepts instances of AttributeFilter as-is
 [x] set() accepts a valid callback and returns an instance of AttributeFilter
 [x] set() throws an exception if value is not a valid callback or an instance of AttributeFilter
 [x] get() automatically loads built-in filters if no filter was set
 [x] get() does not overwrite custom filters with built-in filters
 [x] get() automatically creates filters whose name is a valid PHP callback if no filter was set
 [x] get() does not overwrite custom filters with auto-generated callback filters
 [x] get() throws an exception if the filter name is neither callable not starts with # and is entirely composed of letters and digits
 [x] get() throws an exception on unknown filter
 [x] get() returns a clone of the filter, not the original instance
 [x] getDefaultFilter('range') returns a filter with no range set
 [x] getDefaultFilter('range', [1, 5]) returns a filter with range 1...5
 [x] getDefaultFilter('range', ['max' => 5, 'min' => 1]) returns a filter with range 1...5

Attribute List (s9e\TextFormatter\Tests\Configurator\Collections\AttributeList)
 [x] Attribute names are normalized for storage
 [x] Attribute names are normalized during retrieval
 [x] asConfig() returns a deduplicated list of attribute names
 [x] asConfig() returns a list of attribute names in alphabetical order

Attribute Preprocessor Collection (s9e\TextFormatter\Tests\Configurator\Collections\AttributePreprocessorCollection)
 [x] add() returns an instance of s9e\TextFormatter\Configurator\Items\AttributePreprocessor
 [x] asConfig() returns a list of [attrName, Regexp instance, map] arrays
 [x] Is iterable with foreach
 [x] Uses the name of the source attribute as key when iterating
 [x] merge() accepts a 2D array of regexps
 [x] merge() accepts a 2D array of AttributePreprocessor instances
 [x] merge() accepts an instance of AttributePreprocessorCollection to copy its content
 [x] merge() throws an exception when passed a non-array, non-AttributProcessorCollection
 [x] merge() throws an exception when passed a one-dimensional array

Collection (s9e\TextFormatter\Tests\Configurator\Collections\Collection)
 [x] Collection is countable
 [x] Collection is iterable with foreach
 [x] clear() empties the collection
 [x] asConfig() returns the items as an array

Hostname List (s9e\TextFormatter\Tests\Configurator\Collections\HostnameList)
 [x] asConfig() returns null if the collection is empty
 [x] asConfig() returns a Regexp
 [x] asConfig() returns a regexp that matches its hostnames
 [x] IDNs are punycoded if idn_to_ascii() is available
 [x] add('*.example.org') matches 'www.example.org'
 [x] add('example.org') does not match 'www.example.org'
 [x] add('example.*') matches 'example.org'
 [x] add('example') does not match 'example.org'

Minifier List (s9e\TextFormatter\Tests\Configurator\Collections\MinifierList)
 [x] add() normalizes minifier names to instances of s9e\TextFormatter\Configurator\JavaScript\Minifiers if applicable
 [x] add() throws an exception when the value is neither a Minifier instance nor a known minifier
 [x] add() throws an exception when the value is a boolean
 [x] add() accepts an array
 [x] add() accepts an array that contains the minifier's name followed by any number of arguments to be passed to the constructor

Normalized Collection (s9e\TextFormatter\Tests\Configurator\Collections\NormalizedCollection)
 [x] set() calls normalizeKey()
 [x] set() calls normalizeValue()
 [x] add() calls normalizeKey()
 [x] add() calls normalizeValue()
 [x] add() can be called without a second parameter
 [x] add() throws a RuntimeException if the item already exists
 [x] exists() returns TRUE if the item exists
 [x] exists() returns FALSE if the item does not exist
 [x] exists() calls normalizeKey()
 [x] exists() ignores InvalidArgumentException from normalizeKey()
 [x] get() returns an item by name
 [x] get() calls normalizeKey()
 [x] get() throws a RuntimeException if the item does not exist
 [x] delete() removes an item by name
 [x] delete() calls the item's normalizeKey() method
 [x] delete() ignores InvalidArgumentException from normalizeKey()
 [x] isset($collection['foo']) maps to $collection->exists('foo')
 [x] $collection['foo'] maps to $collection->get('foo')
 [x] $collection['foo'] = 42 maps to $collection->set('foo', 42)
 [x] unset($collection['foo']) maps to $collection->delete('foo')
 [x] contains() returns true if the given value is present in the collection
 [x] contains() returns false if the given value is not present in the collection
 [x] contains() checks for equality, not identity
 [x] indexOf() returns the key if the given value is present in the collection
 [x] indexOf() returns false if the given value is not present in the collection
 [x] indexOf() checks for equality, not identity
 [x] onDuplicate() can be called with no value
 [x] onDuplicate() returns 'error' by default
 [x] onDuplicate() returns the previous value
 [x] onDuplicate('unknownvalue') throws an exception
 [x] add() has no effect on duplicates if the onDuplicate action is "ignore"
 [x] add() returns the original element when trying to add a duplicate and the onDuplicate action is "ignore"
 [x] add() replaces the original element if the onDuplicate action is "replace"
 [x] add() throws a RuntimeException on duplicate elements if the onDuplicate action is "error"
 [x] asConfig() returns the elements in lexical order

Normalized List (s9e\TextFormatter\Tests\Configurator\Collections\NormalizedList)
 [x] append() adds the value at the end of the list
 [x] $normalizedList[] = 'foo' maps to $normalizedList->append('foo')
 [x] prepend() adds the value at the beginning of the list
 [x] insert() inserts the value at given offset
 [x] insert() can insert value that is an array
 [x] Negative offsets count from the end of the list
 [x] insert() throws an exception if the offset is out of bounds
 [x] $normalizedList[0] = 'foo' replaces the first value of the list if it exists
 [x] $normalizedList[0] = 'foo' appends to the list if it's empty
 [x] $normalizedList[1] = 'foo' throws an InvalidArgumentException if the list is empty
 [x] $normalizedList['foo'] = 'bar' throws an InvalidArgumentException
 [x] Deleting a value by key reorders the list to remove gaps
 [x] add() adds given value at the end of the list
 [x] remove() removes given value from the collection
 [x] remove() removes all items matching given value
 [x] remove() returns the number of items removed
 [x] remove() reorders the list to remove gaps

Plugin Collection (s9e\TextFormatter\Tests\Configurator\Collections\PluginCollection)
 [x] load() can load a stock plugin
 [x] load() throws an exception if the stock plugin does not exist
 [x] Accepts an object that implements ConfiguratorBase
 [x] Accepts a string that is the name of a class that implements ConfiguratorBase
 [x] Throws an exception if the value is neither an instance of or the name of a class that implements ConfiguratorBase
 [x] Throws an exception if the plugin name is not entirely composed of letters, numbers and underscores
 [x] Throws an exception if the plugin name does not start with an uppercase letter
 [x] asConfig() does not return an entry for plugins whose asConfig() returns NULL
 [x] asConfig() returns an entry for plugins whose asConfig() returns an empty array
 [x] asConfig() adds regexpLimit to the plugin's configuration if it's not specified and the plugin has a regexp
 [x] asConfig() removes regexpLimit from the plugin's configuration if it does not have a regexp
 [x] asConfig() adds quickMatch to the plugin's configuration if available
 [x] asConfig() omits a plugin's quickMatch if it's false
 [x] asConfig() removes className from the plugin's configuration if it's using its default value
 [x] asConfig() preserves className from the plugin's configuration if it's using a custom value
 [x] finalize() calls every plugin's finalize() method

Rules Generator List (s9e\TextFormatter\Tests\Configurator\Collections\RulesGeneratorList)
 [x] add() normalizes a string into an instance of a class of the same name in s9e\TextFormatter\Configurator\RulesGenerators
 [x] add() adds BooleanRulesGenerator instances as-is
 [x] add() adds TargetedRulesGenerator instances as-is
 [x] add() throws an exception on invalid values

Ruleset (s9e\TextFormatter\Tests\Configurator\Collections\Ruleset)
 [x] Setting an unknown rule throws an exception
 [x] isset($ruleset['allowChild']) tests whether any allowChild rules exist
 [x] $ruleset['allowChild'] returns the allowChild rules if they exist
 [x] Trying to set rules via array access throws a RuntimeException
 [x] unset($ruleset['allowChild']) removes all allowChild rules but doesn't touch the rest
 [x] clear() removes all rules
 [x] remove('allowChild') removes only 'allowChild' rules
 [x] remove('denyChild', 'IMG') removes all denyChild rules targeting IMG
 [x] remove('denyChild', 'IMG') unsets the denyChild list in the ruleset if there is no denyChild rules left
 [x] remove('denyChild', 'IMG') rearranges keys to remove gaps
 [x] remove('denyChild', 'img') normalizes tag names
 [x] remove('defaultChildRule') throws an InvalidArgumentException
 [x] remove('defaultDescendantRule') throws an InvalidArgumentException
 [x] allowChild() throws an exception on invalid tag name
 [x] allowChild() normalizes tag names
 [x] allowChild() is chainable
 [x] allowDescendant() throws an exception on invalid tag name
 [x] allowDescendant() normalizes tag names
 [x] allowDescendant() is chainable
 [x] autoClose() accepts a boolean
 [x] autoClose() throws an exception if its argument is not a boolean
 [x] autoClose() is chainable
 [x] autoReopen() accepts a boolean
 [x] autoReopen() throws an exception if its argument is not a boolean
 [x] autoReopen() is chainable
 [x] breakParagraph() accepts a boolean
 [x] breakParagraph() throws an exception if its argument is not a boolean
 [x] breakParagraph() is chainable
 [x] closeAncestor() throws an exception on invalid tag name
 [x] closeAncestor() normalizes tag names
 [x] closeParent() normalizes tag names
 [x] closeParent() is chainable
 [x] createChild() throws an exception on invalid tag name
 [x] createChild() normalizes tag names
 [x] createChild() is chainable
 [x] createParagraphs() accepts a boolean
 [x] createParagraphs() throws an exception if its argument is not a boolean
 [x] createParagraphs() is chainable
 [x] ignoreTags() accepts a boolean
 [x] ignoreTags() throws an exception if its argument is not a boolean
 [x] ignoreTags() is chainable
 [x] denyChild() throws an exception on invalid tag name
 [x] denyChild() normalizes tag names
 [x] denyChild() is chainable
 [x] denyDescendant() throws an exception on invalid tag name
 [x] denyDescendant() normalizes tag names
 [x] denyDescendant() is chainable
 [x] disableAutoLineBreaks() accepts a boolean
 [x] disableAutoLineBreaks() throws an exception if its argument is not a boolean
 [x] disableAutoLineBreaks() is chainable
 [x] enableAutoLineBreaks() accepts a boolean
 [x] enableAutoLineBreaks() throws an exception if its argument is not a boolean
 [x] enableAutoLineBreaks() is chainable
 [x] fosterParent() throws an exception on invalid tag name
 [x] fosterParent() normalizes tag names
 [x] fosterParent() is chainable
 [x] ignoreText() accepts a boolean
 [x] ignoreText() throws an exception if its argument is not a boolean
 [x] ignoreText() is chainable
 [x] isTransparent() accepts a boolean
 [x] isTransparent() throws an exception if its argument is not a boolean
 [x] isTransparent() is chainable
 [x] ignoreSurroundingWhitespace() accepts a boolean
 [x] ignoreSurroundingWhitespace() throws an exception if its argument is not a boolean
 [x] ignoreSurroundingWhitespace() is chainable
 [x] preventLineBreaks() accepts a boolean
 [x] preventLineBreaks() throws an exception if its argument is not a boolean
 [x] preventLineBreaks() is chainable
 [x] requireAncestor() throws an exception on invalid tag name
 [x] requireAncestor() normalizes tag names
 [x] requireAncestor() is chainable
 [x] requireParent() throws an exception on invalid tag name
 [x] requireParent() normalizes tag names
 [x] requireParent() is chainable
 [x] suspendAutoLineBreaks() accepts a boolean
 [x] suspendAutoLineBreaks() throws an exception if its argument is not a boolean
 [x] suspendAutoLineBreaks() is chainable
 [x] trimFirstLine() accepts a boolean
 [x] trimFirstLine() throws an exception if its argument is not a boolean
 [x] trimFirstLine() is chainable
 [x] merge() accepts a 2D array of rules
 [x] merge() correctly copies the isTransparent setting from an array
 [x] merge() accepts an instance of Ruleset to copy its content
 [x] merge() correctly copies the isTransparent setting from an instance of Ruleset
 [x] merge() throws an InvalidArgumentException if its argument is not an array or an instance of Ruleset
 [x] merge() overwrites boolean rules by default
 [x] merge() does not overwrite boolean rules if its second argument is FALSE
 [x] asConfig() does not return rules that are not used during parsing
 [x] asConfig() uses target names as keys for closeAncestor
 [x] asConfig() uses target names as keys for closeParent
 [x] asConfig() uses target names as keys for requireAncestor
 [x] asConfig() packs boolean rules in a value named "flags"
 [x] asConfig() can pack multiple boolean rules in a value named "flags"

Scheme List (s9e\TextFormatter\Tests\Configurator\Collections\SchemeList)
 [x] asConfig() returns an instance of Regexp
 [x] asConfig() returns a regexp that matches all the allowed schemes in the default variant
 [x] asConfig() creates a case-insensitive regexp that matches the schemes in the collection
 [x] add('*invalid*') throws an exception
 [x] add() normalizes schemes to lowercase

Tag Collection (s9e\TextFormatter\Tests\Configurator\Collections\TagCollection)
 [x] add() returns an instance of s9e\TextFormatter\Configurator\Items\Tag
 [x] add() normalizes the tag name
 [x] delete() normalizes the tag name
 [x] exists() normalizes the tag name
 [x] get() normalizes the tag name
 [x] set() normalizes the tag name
 [x] Replaces duplicates by default
 [x] Throws an meaningful exception message when creating a Tag that already exists
 [x] Throws an exception when accessing a Tag that does not exist

Tag Filter Chain (s9e\TextFormatter\Tests\Configurator\Collections\TagFilterChain)
 [x] append() throws a RuntimeException on invalid callbacks
 [x] prepend() throws a RuntimeException on invalid callbacks
 [x] append() throws an InvalidArgumentException on uncallable callbacks
 [x] prepend() throws an InvalidArgumentException on uncallable callbacks
 [x] PHP string callbacks are normalized to an instance of TagFilter
 [x] PHP array callbacks are normalized to an instance of TagFilter
 [x] Instances of TagFilter are added as-is
 [x] containsCallback('s9e\\TextFormatter\\Parser\\FilterProcessing::filterAttributes') returns true on default tags
 [x] containsCallback('s9e\\TextFormatter\\Parser\\FilterProcessing::filterAttributes') returns false on empty chains

Tag List (s9e\TextFormatter\Tests\Configurator\Collections\TagList)
 [x] Tag names are normalized for storage
 [x] Tag names are normalized during retrieval
 [x] asConfig() returns a deduplicated list of tag names
 [x] asConfig() returns a list of tag names in alphabetical order

Template Check List (s9e\TextFormatter\Tests\Configurator\Collections\TemplateCheckList)
 [x] append() normalizes a string into an instance of a class of the same name in s9e\TextFormatter\Configurator\TemplateChecks
 [x] append() adds instances of s9e\TextFormatter\Configurator\TemplateCheck as-is

Template Normalization List (s9e\TextFormatter\Tests\Configurator\Collections\TemplateNormalizationList)
 [x] append() normalizes a callback into an instance of s9e\TextFormatter\Configurator\TemplateNormalizations\Custom
 [x] append() normalizes a string into an instance of a class of the same name in s9e\TextFormatter\Configurator\TemplateNormalizations
 [x] append() adds instances of s9e\TextFormatter\Configurator\TemplateNormalization as-is

Template Parameter Collection (s9e\TextFormatter\Tests\Configurator\Collections\TemplateParameterCollection)
 [x] add('foo') adds parameter 'foo' with an empty value
 [x] add('foo', 1) adds parameter 'foo' with value '1'
 [x] add('foo bar') throws an exception

Unsafe Template Exception (s9e\TextFormatter\Tests\Configurator\UnsafeTemplateException)
 [x] getNode() returns the stored node
 [x] setNode() sets the stored node
 [x] highlightNode() returns the template's source formatted and with the stored node highlighted with data set #0
 [x] highlightNode() returns the template's source formatted and with the stored node highlighted with data set #1
 [x] highlightNode() returns the template's source formatted and with the stored node highlighted with data set #2

AVTHelper (s9e\TextFormatter\Tests\Configurator\Helpers\AVTHelper)
 [x] parse() tests with data set #0
 [x] parse() tests with data set #1
 [x] parse() tests with data set #2
 [x] parse() tests with data set #3
 [x] parse() tests with data set #4
 [x] parse() tests with data set #5
 [x] parse() tests with data set #6
 [x] parse() tests with data set #7
 [x] parse() tests with data set #8
 [x] parse() tests with data set #9
 [x] parse() tests with data set #10
 [x] parse() tests with data set #11
 [x] serialize() tests with data set #0
 [x] serialize() tests with data set #1
 [x] serialize() tests with data set #2
 [x] serialize() tests with data set #3
 [x] serialize() tests with data set #4
 [x] serialize() tests with data set #5
 [x] replace() tests with data set #0
 [x] replace() tests with data set #1
 [x] replace() tests with data set #2
 [x] toXSL() tests with data set #0
 [x] toXSL() tests with data set #1
 [x] toXSL() tests with data set #2
 [x] toXSL() tests with data set #3
 [x] toXSL() tests with data set #4
 [x] toXSL() tests with data set #5
 [x] toXSL() tests with data set #6
 [x] toXSL() tests with data set #7
 [x] toXSL() tests with data set #8

Config Helper (s9e\TextFormatter\Tests\Configurator\Helpers\ConfigHelper)
 [x] filterConfig() filters for the right target
 [x] filterConfig() recurses into deep arrays
 [x] filterConfig() recurses with the correct target
 [x] filterConfig() ignores instances of FilterableConfigValue that return NULL
 [x] filterConfig() preserves instances of Dictionary with an array if the variant is JS
 [x] generateQuickMatchFromList() returns the longest common substring of a list of strings
 [x] generateQuickMatchFromList() returns a string even if it contains only digit characters
 [x] generateQuickMatchFromList() returns FALSE if no common substring is found
 [x] generateQuickMatchFromList() compares strings as bytes and returns a binary string
 [x] toArray() works with deep arrays
 [x] toArray() calls asConfig() for objects in deep arrays that implement ConfigProvider
 [x] toArray() throws an exception for objects in deep arrays that are not Traversable and do not implement ConfigProvider
 [x] toArray() omits empty arrays from values
 [x] toArray() preserves empty arrays if its second argument is TRUE
 [x] toArray() preserves empty arrays in deep arrays if its second argument is TRUE
 [x] toArray() omits NULL values
 [x] toArray() omits NULL values from asConfig() calls
 [x] toArray() preserves NULL values if its third argument is TRUE
 [x] toArray() preserves NULL values in deep arrays if its third argument is TRUE
 [x] optimizeArray() reduces the size of a serialized config

Context Safeness (s9e\TextFormatter\Tests\Configurator\Helpers\ContextSafeness)
 [x] getDisallowedCharactersAsURL() returns a list of strings
 [x] getDisallowedCharactersInCSS() returns a list of strings
 [x] getDisallowedCharactersInJS() returns a list of strings

Element Inspector (s9e\TextFormatter\Tests\Configurator\Helpers\ElementInspector)
 [x] Test cases with data set #0
 [x] Test cases with data set #1
 [x] Test cases with data set #2
 [x] Test cases with data set #3
 [x] Test cases with data set #4
 [x] Test cases with data set #5
 [x] Test cases with data set #6
 [x] Test cases with data set #7
 [x] Test cases with data set #8
 [x] Test cases with data set #9
 [x] Test cases with data set #10
 [x] Test cases with data set #11
 [x] Test cases with data set #12
 [x] Test cases with data set #13
 [x] Test cases with data set #14
 [x] Test cases with data set #15
 [x] Test cases with data set #16
 [x] Test cases with data set #17
 [x] Test cases with data set #18
 [x] Test cases with data set #19
 [x] Test cases with data set #20
 [x] Test cases with data set #21
 [x] Test cases with data set #22
 [x] Test cases with data set #23
 [x] Test cases with data set #24
 [x] Test cases with data set #25
 [x] Test cases with data set #26
 [x] Test cases with data set #27

Filter Helper (s9e\TextFormatter\Tests\Configurator\Helpers\FilterHelper)
 [x] isAllowed() tests with data set #0
 [x] isAllowed() tests with data set #1
 [x] isAllowed() tests with data set #2
 [x] isAllowed() tests with data set #3
 [x] isAllowed() tests with data set #4
 [x] isAllowed() tests with data set #5
 [x] parse() tests with data set #0
 [x] parse() tests with data set #1
 [x] parse() tests with data set #2
 [x] parse() tests with data set #3
 [x] parse() tests with data set #4

Filter Syntax Matcher (s9e\TextFormatter\Tests\Configurator\Helpers\FilterSyntaxMatcher)
 [x] parse() tests with data set #0
 [x] parse() tests with data set #1
 [x] parse() tests with data set #2
 [x] parse() tests with data set #3
 [x] parse() tests with data set #4
 [x] parse() tests with data set #5
 [x] parse() tests with data set #6
 [x] parse() tests with data set #7
 [x] parse() tests with data set #8
 [x] parse() tests with data set #9
 [x] parse() tests with data set #10
 [x] parse() tests with data set #11
 [x] parse() tests with data set #12
 [x] parse() tests with data set #13
 [x] parse() tests with data set #14
 [x] parse() tests with data set #15
 [x] parse() tests with data set #16
 [x] parse() tests with data set #17
 [x] parse() tests with data set #18
 [x] parse() tests with data set #19
 [x] parse() tests with data set #20
 [x] parse() tests with data set #21
 [x] parse() tests with data set #22
 [x] parse() tests with data set #23
 [x] parse() tests with data set #24
 [x] parse() tests with data set #25
 [x] parse() tests with data set #26
 [x] parse() tests with data set #27
 [x] parse() tests with data set #28
 [x] parse() tests with data set #29
 [x] parse() tests with data set #30
 [x] parse() tests with data set #31
 [x] parse() tests with data set #32
 [x] parse() tests with data set #33
 [x] parse() tests with data set #34
 [x] parse() tests with data set #35
 [x] parse() tests with data set #36
 [x] parse() tests with data set #37

Node Locator (s9e\TextFormatter\Tests\Configurator\Helpers\NodeLocator)
 [x] getObjectParamsByRegexp() tests with data set #0
 [x] getObjectParamsByRegexp() tests with data set #1
 [x] getObjectParamsByRegexp() tests with data set #2
 [x] getObjectParamsByRegexp() tests with data set #3
 [x] getObjectParamsByRegexp() tests with data set #4
 [x] getObjectParamsByRegexp() tests with data set #5
 [x] getObjectParamsByRegexp() tests with data set #6
 [x] getObjectParamsByRegexp() tests with data set #7
 [x] getCSSNodes() tests with data set #0
 [x] getCSSNodes() tests with data set #1
 [x] getCSSNodes() tests with data set #2
 [x] getCSSNodes() tests with data set #3
 [x] getCSSNodes() tests with data set #4
 [x] getCSSNodes() tests with data set #5
 [x] getCSSNodes() tests with data set #6
 [x] getCSSNodes() tests with data set #7
 [x] getCSSNodes() tests with data set #8
 [x] getCSSNodes() tests with data set #9
 [x] getJSNodes() tests with data set #0
 [x] getJSNodes() tests with data set #1
 [x] getJSNodes() tests with data set #2
 [x] getJSNodes() tests with data set #3
 [x] getJSNodes() tests with data set #4
 [x] getJSNodes() tests with data set #5
 [x] getJSNodes() tests with data set #6
 [x] getJSNodes() tests with data set #7
 [x] getJSNodes() tests with data set #8
 [x] getJSNodes() tests with data set #9
 [x] getJSNodes() tests with data set #10
 [x] getURLNodes() tests with data set #0
 [x] getURLNodes() tests with data set #1
 [x] getURLNodes() tests with data set #2
 [x] getURLNodes() tests with data set #3
 [x] getURLNodes() tests with data set #4
 [x] getURLNodes() tests with data set #5
 [x] getURLNodes() tests with data set #6
 [x] getURLNodes() tests with data set #7
 [x] getURLNodes() tests with data set #8
 [x] getURLNodes() tests with data set #9
 [x] getURLNodes() tests with data set #10
 [x] getURLNodes() tests with data set #11
 [x] getURLNodes() tests with data set #12
 [x] getURLNodes() tests with data set #13
 [x] getURLNodes() tests with data set #14
 [x] getURLNodes() tests with data set #15
 [x] getURLNodes() tests with data set #16
 [x] getURLNodes() tests with data set #17
 [x] getURLNodes() tests with data set #18
 [x] getURLNodes() tests with data set #19
 [x] getURLNodes() tests with data set #20
 [x] getURLNodes() tests with data set #21
 [x] getElementsByRegexp() can return elements created via <xsl:copy-of/>

Regexp Builder (s9e\TextFormatter\Tests\Configurator\Helpers\RegexpBuilder)
 [x] fromList(['foo']) returns 'foo'
 [x] fromList(['foo', 'foo']) returns 'foo'
 [x] fromList(['FOO', 'foo']) returns '(?:FOO|foo)'
 [x] fromList(['FOO', 'foo'], ["caseInsensitive" => true]) returns 'foo'
 [x] fromList(['a']) returns 'a'
 [x] fromList(['a', 'a']) returns 'a'
 [x] fromList(['/']) returns '\\/'
 [x] fromList(['/'], ["delimiter" => "#"]) returns '/'
 [x] fromList(['#'], ["delimiter" => "#"]) returns '\\#'
 [x] fromList(['apple', 'april']) returns 'ap(?:ple|ril)'
 [x] fromList(['bar', 'baz']) returns 'ba[rz]'
 [x] fromList(['foo', 'fool']) returns 'fool?'
 [x] fromList(['ax', 'axed']) returns 'ax(?:ed)?'
 [x] fromList(['!', '#', '$', '(', ')', '*', '+', '-', '.', '/', ':', '<', '=', '>', '?', '[', '\\', ']', '^', '{', '|', '}']) returns '[!#$(-+\\--\\/:<-?[-\\^{-}]'
 [x] fromList([':)', ':(', ':]', ':[', ':|', ':/', ':\\']) returns ':[()\\/[-\\]|]'
 [x] fromList(['xy', '^y'], ["specialChars" => ["^" => "^"]]) returns '(?:^|x)y'
 [x] fromList(['xy', 'x$'], ["specialChars" => ["$" => "$"]]) returns 'x(?:$|y)'
 [x] fromList(['foo', 'bar']) returns '(?:bar|foo)'
 [x] fromList(['a', 'b']) returns '[ab]'
 [x] fromList(['♠', '♣', '♥', '♦']) returns '[♠♣♥♦]'
 [x] fromList(['lock', 'sock']) returns '[ls]ock'
 [x] fromList(['boast', 'boost']) returns 'bo[ao]st'
 [x] fromList(['pest', 'pst']) returns 'pe?st'
 [x] fromList(['boast', 'boost', 'bost']) returns 'bo[ao]?st'
 [x] fromList(['boost', 'best']) returns 'b(?:e|oo)st'
 [x] fromList(['boost', 'bst']) returns 'b(?:oo)?st'
 [x] fromList(['best', 'boost', 'bust']) returns 'b(?:[eu]|oo)st'
 [x] fromList(['boost', 'bst', 'cool']) returns '(?:b(?:oo)?st|cool)'
 [x] fromList(['boost', 'bst', 'cost']) returns '(?:b(?:oo)?|co)st'
 [x] fromList(['aax', 'aay', 'aax', 'aay']) returns 'aa[xy]'
 [x] fromList(['aaax', 'aaay', 'baax', 'baay']) returns '[ab]aa[xy]'
 [x] fromList(['aaax', 'aaay', 'bbaax', 'bbaay']) returns '(?:a|bb)aa[xy]'
 [x] fromList(['aaax', 'aaay', 'aax', 'aay']) returns 'aaa?[xy]'
 [x] fromList(['abx', 'aby', 'cdx', 'cdy']) returns '(?:ab|cd)[xy]'
 [x] fromList(['axx', 'ayy', 'bbxx', 'bbyy']) returns '(?:a|bb)(?:xx|yy)'
 [x] fromList(['axx', 'ayy', 'azz', 'bbxx', 'bbyy', 'c']) returns '(?:a(?:xx|yy|zz)|bb(?:xx|yy)|c)'
 [x] fromList(['ac', 'af', 'bbc', 'bbf', 'c']) returns '(?:a[cf]|bb[cf]|c)'
 [x] fromList(['^example.org$', '.example.org$', '^localhost$', '.localhost$'], ["specialChars" => ["^" => "^", "$" => "$"]]) returns '(?:\\.|^)(?:example\\.org|localhost)$'
 [x] fromList(['xixix', 'xoxox']) returns 'x(?:ixi|oxo)x'
 [x] fromList(['xixix', 'xixox', 'xoxox', 'xoxix']) returns 'x[io]x[io]x'
 [x] fromList(['afoo', 'abar', 'bbfoo', 'bbbar', 'a', 'bb']) returns '(?:a|bb)(?:bar|foo)?'
 [x] fromList(['ax', 'ay', 'bx', 'by']) returns '[ab][xy]'
 [x] fromList(['ax', 'ay', 'bx', 'by', 'c']) returns '(?:[ab][xy]|c)'
 [x] fromList(['ax', 'ay', 'bx', 'by', 'x', 'y']) returns '[ab]?[xy]'
 [x] fromList(['03', '04', '13', '14', '3', '4']) returns '[01]?[34]'
 [x] fromList(['ax', 'ay', 'bbx', 'bby', 'c']) returns '(?:a[xy]|bb[xy]|c)'
 [x] fromList(['ax', 'ay', 'bx', 'by', 'c', 'ddx', 'ddy']) returns '(?:[ab][xy]|c|dd[xy])'
 [x] fromList(['']) returns ''
 [x] fromList(['', '']) returns ''
 [x] fromList([]) returns ''
 [x] fromList(['ad', 'bd'], ["specialChars" => ["d" => "\\d"]]) returns '[ab]\\d'
 [x] fromList(['a', 'ax', 'ad', 'd', 'dx', 'dd'], ["specialChars" => ["d" => "\\d"]]) returns '[a\\d][\\dx]?'
 [x] fromList(['foo', 'bar', 'y', 'z']) returns '(?:[yz]|bar|foo)'
 [x] fromList(['foo', 'bar', 'baz', 'y', 'z']) returns '(?:[yz]|ba[rz]|foo)'
 [x] fromList(['a', 'aacc', 'aadd', 'bbcc', 'bbdd']) returns '(?:a(?:a(?:cc|dd))?|bb(?:cc|dd))'
 [x] fromList(['aa', 'bb', 'aacc', 'aadd', 'bbcc', 'bbdd']) returns '(?:aa|bb)(?:cc|dd)?'
 [x] fromList(['aa', 'bb', 'aaccxx', 'aaddxx', 'bbccxx', 'bbddxx', 'aaccyy', 'aaddyy', 'bbccyy', 'bbddyy']) returns '(?:aa|bb)(?:(?:cc|dd)(?:xx|yy))?'
 [x] fromList(['m.', 'mb'], ["specialChars" => ["." => ".", "b" => "\\b"]]) returns 'm(?:.|\\b)'
 [x] fromList(['m.', 'mB'], ["specialChars" => ["." => ".", "B" => "\\B"]]) returns 'm(?:.|\\B)'
 [x] fromList(['m.', 'mA'], ["specialChars" => ["." => ".", "A" => "\\A"]]) returns 'm(?:.|\\A)'
 [x] fromList(['m.', 'mZ'], ["specialChars" => ["." => ".", "Z" => "\\Z"]]) returns 'm(?:.|\\Z)'
 [x] fromList(['m.', 'mz'], ["specialChars" => ["." => ".", "z" => "\\z"]]) returns 'm(?:.|\\z)'
 [x] fromList(['m.', 'mG'], ["specialChars" => ["." => ".", "G" => "\\G"]]) returns 'm(?:.|\\G)'
 [x] fromList(['m.', 'mQ'], ["specialChars" => ["." => ".", "Q" => "\\Q"]]) returns 'm(?:.|\\Q)'
 [x] fromList(['m.', 'mE'], ["specialChars" => ["." => ".", "E" => "\\E"]]) returns 'm(?:.|\\E)'
 [x] fromList(['m.', 'mK'], ["specialChars" => ["." => ".", "K" => "\\K"]]) returns 'm(?:.|\\K)'
 [x] fromList(['h$', 'h.'], ["specialChars" => ["." => ".", "$" => "$"]]) returns 'h(?:$|.)'
 [x] fromList([':X', ':D', ':P', ':P']) returns ':[DPX]'
 [x] fromList([':X', ':D', ':P', ':p'], ["caseInsensitive" => true]) returns ':[dpx]'
 [x] fromList(['¼', '½']) returns '[¼½]'
 [x] fromList(['¼', '½'], ["unicode" => true]) returns '[¼½]'
 [x] fromList(['¼', '½'], ["unicode" => false]) returns "\xC2[\xBC\xBD]"
 [x] fromList() throws a InvalidArgumentException if any word is not legal UTF-8

Regexp Parser (s9e\TextFormatter\Tests\Configurator\Helpers\RegexpParser)
 [x] parse() can parse plain regexps
 [x] parse() throws a RuntimeException if delimiters can't be parsed
 [x] parse() parses pattern modifiers
 [x] parse() parses character classes
 [x] parse() parses character classes with quantifiers
 [x] parse() parses character classes with quantifiers and greediness operator
 [x] parse() parses character classes that end with an escaped ]
 [x] parse() throws a RuntimeException if a character class is not properly closed
 [x] parse() correctly parses escaped brackets
 [x] parse() correctly parses escaped parentheses
 [x] parse() parses non-capturing subpatterns
 [x] parse() parses non-capturing subpatterns with atomic grouping
 [x] parse() parses non-capturing subpatterns with (possessive) quantifier
 [x] parse() parses non-capturing subpatterns with (ungreedy) quantifier
 [x] parse() parses non-capturing subpatterns with options
 [x] parse() parses option settings
 [x] parse() parses named subpatterns using the (?<name>) syntax
 [x] parse() parses named subpatterns using the (?P<name>) syntax
 [x] parse() parses named subpatterns using the (?'name') syntax
 [x] parse() parses capturing subpatterns
 [x] parse() throws a RuntimeException if an unmatched right parenthesis is found
 [x] parse() throws a RuntimeException if an unmatched left parenthesis is found
 [x] parse() throws a RuntimeException on unsupported subpatterns
 [x] parse() parses lookahead assertions
 [x] parse() parses negative lookahead assertions
 [x] parse() parses lookbehind assertions
 [x] parse() parses negative lookbehind assertions
 [x] parse() parses escaped right parentheses
 [x] getAllowedCharacterRegexp() works with data set #0
 [x] getAllowedCharacterRegexp() works with data set #1
 [x] getAllowedCharacterRegexp() works with data set #2
 [x] getAllowedCharacterRegexp() works with data set #3
 [x] getAllowedCharacterRegexp() works with data set #4
 [x] getAllowedCharacterRegexp() works with data set #5
 [x] getAllowedCharacterRegexp() works with data set #6
 [x] getAllowedCharacterRegexp() works with data set #7
 [x] getAllowedCharacterRegexp() works with data set #8
 [x] getAllowedCharacterRegexp() works with data set #9
 [x] getAllowedCharacterRegexp() works with data set #10
 [x] getAllowedCharacterRegexp() works with data set #11
 [x] getAllowedCharacterRegexp() works with data set #12
 [x] getAllowedCharacterRegexp() works with data set #13
 [x] getAllowedCharacterRegexp() works with data set #14
 [x] getAllowedCharacterRegexp() works with data set #15
 [x] getAllowedCharacterRegexp() works with data set #16
 [x] getAllowedCharacterRegexp() works with data set #17
 [x] getAllowedCharacterRegexp() works with data set #18
 [x] getAllowedCharacterRegexp() works with data set #19
 [x] getAllowedCharacterRegexp() works with data set #20
 [x] getAllowedCharacterRegexp() works with data set #21
 [x] getAllowedCharacterRegexp() works with data set #22
 [x] getAllowedCharacterRegexp() works with data set #23
 [x] getAllowedCharacterRegexp() works with data set #24
 [x] getAllowedCharacterRegexp() works with data set #25
 [x] getAllowedCharacterRegexp() works with data set #26
 [x] getAllowedCharacterRegexp() works with data set #27
 [x] getAllowedCharacterRegexp() works with data set #28
 [x] getAllowedCharacterRegexp() works with data set #29
 [x] getAllowedCharacterRegexp() works with data set #30
 [x] getAllowedCharacterRegexp() works with data set #31
 [x] getAllowedCharacterRegexp() works with data set #32
 [x] getAllowedCharacterRegexp() works with data set #33
 [x] getAllowedCharacterRegexp() works with data set #34
 [x] getAllowedCharacterRegexp() works with data set #35
 [x] getAllowedCharacterRegexp() works with data set #36
 [x] getAllowedCharacterRegexp() works with data set #37
 [x] getAllowedCharacterRegexp() works with data set #38
 [x] getAllowedCharacterRegexp() works with data set #39
 [x] getAllowedCharacterRegexp() works with data set #40
 [x] getAllowedCharacterRegexp() works with data set #41
 [x] getAllowedCharacterRegexp() works with data set #42
 [x] getAllowedCharacterRegexp() works with data set #43
 [x] getCaptureNames() works with data set #0
 [x] getCaptureNames() works with data set #1
 [x] getCaptureNames() works with data set #2

Rules Helper (s9e\TextFormatter\Tests\Configurator\Helpers\RulesHelper)
 [x] Works with a single tag
 [x] If no rule is defined, the default is to deny children and descendants
 [x] Works with multiple tags
 [x] denyChild overrides allowChild
 [x] denyDescendant does not override allowChild
 [x] allowDescendant does not override denyChild
 [x] denyDescendant overrides allowDescendant
 [x] ignoreTags(true) overrides everything
 [x] ignoreTags(false) has no effect
 [x] Tags with a requireParent rule are not allowed at the root
 [x] Tags that aren't allowed anywhere are omitted from the return array
 [x] Tags that are allowed in a closed dependency loop are omitted from the return array
 [x] Rules targeting inexistent tags do not interfere
 [x] Bitfields are compressed by making tags that are targeted by the same permissions share the same bit number

Template Helper (s9e\TextFormatter\Tests\Configurator\Helpers\TemplateHelper)
 [x] getParametersFromXSL() tests with data set #0
 [x] getParametersFromXSL() tests with data set #1
 [x] getParametersFromXSL() tests with data set #2
 [x] getParametersFromXSL() tests with data set #3
 [x] getParametersFromXSL() tests with data set #4
 [x] getParametersFromXSL() tests with data set #5
 [x] getParametersFromXSL() tests with data set #6
 [x] getParametersFromXSL() tests with data set #7
 [x] getParametersFromXSL() tests with data set #8
 [x] highlightNode() tests with data set #0
 [x] highlightNode() tests with data set #1
 [x] highlightNode() tests with data set #2
 [x] highlightNode() tests with data set #3
 [x] highlightNode() tests with data set #4
 [x] highlightNode() tests with data set #5
 [x] highlightNode() tests with data set #6
 [x] highlightNode() tests with data set #7
 [x] highlightNode() tests with data set #8
 [x] highlightNode() tests with data set #9
 [x] highlightNode() tests with data set #10
 [x] replaceHomogeneousTemplates() tests with data set #0
 [x] replaceHomogeneousTemplates() tests with data set #1
 [x] replaceHomogeneousTemplates() tests with data set #2
 [x] replaceHomogeneousTemplates() tests with data set #3
 [x] replaceHomogeneousTemplates() tests with data set #4
 [x] replaceHomogeneousTemplates() tests with data set #5

Template Inspector (s9e\TextFormatter\Tests\Configurator\Helpers\TemplateInspector)
 [x] evaluate() returns the return value of an XPath expression
 [x] Test cases with data set #0
 [x] Test cases with data set #1
 [x] Test cases with data set #2
 [x] Test cases with data set #3
 [x] Test cases with data set #4
 [x] Test cases with data set #5
 [x] Test cases with data set #6
 [x] Test cases with data set #7
 [x] Test cases with data set #8
 [x] Test cases with data set #9
 [x] Test cases with data set #10
 [x] Test cases with data set #11
 [x] Test cases with data set #12
 [x] Test cases with data set #13
 [x] Test cases with data set #14
 [x] Test cases with data set #15
 [x] Test cases with data set #16
 [x] Test cases with data set #17
 [x] Test cases with data set #18
 [x] Test cases with data set #19
 [x] Test cases with data set #20
 [x] Test cases with data set #21
 [x] Test cases with data set #22
 [x] Test cases with data set #23
 [x] Test cases with data set #24
 [x] Test cases with data set #25
 [x] Test cases with data set #26
 [x] Test cases with data set #27
 [x] Test cases with data set #28
 [x] Test cases with data set #29
 [x] Test cases with data set #30
 [x] Test cases with data set #31
 [x] Test cases with data set #32
 [x] Test cases with data set #33
 [x] Test cases with data set #34
 [x] Test cases with data set #35
 [x] Test cases with data set #36
 [x] Test cases with data set #37
 [x] Test cases with data set #38
 [x] Test cases with data set #39
 [x] Test cases with data set #40
 [x] Test cases with data set #41
 [x] Test cases with data set #42
 [x] Test cases with data set #43
 [x] Test cases with data set #44
 [x] Test cases with data set #45
 [x] Test cases with data set #46
 [x] Test cases with data set #47
 [x] Test cases with data set #48
 [x] Test cases with data set #49
 [x] Test cases with data set #50
 [x] Test cases with data set #51
 [x] Test cases with data set #52
 [x] Test cases with data set #53
 [x] Test cases with data set #54
 [x] Test cases with data set #55
 [x] Test cases with data set #56
 [x] Test cases with data set #57
 [x] Test cases with data set #58
 [x] Test cases with data set #59
 [x] Test cases with data set #60
 [x] Test cases with data set #61
 [x] Test cases with data set #62
 [x] Test cases with data set #63
 [x] Test cases with data set #64
 [x] Test cases with data set #65
 [x] Test cases with data set #66
 [x] Test cases with data set #67
 [x] Test cases with data set #68
 [x] Test cases with data set #69
 [x] Test cases with data set #70
 [x] Test cases with data set #71
 [x] Test cases with data set #72
 [x] Test cases with data set #73
 [x] Test cases with data set #74
 [x] Test cases with data set #75
 [x] Test cases with data set #76
 [x] Test cases with data set #77
 [x] Test cases with data set #78
 [x] Test cases with data set #79
 [x] Test cases with data set #80
 [x] Test cases with data set #81
 [x] Test cases with data set #82
 [x] Test cases with data set #83
 [x] Test cases with data set #84
 [x] Test cases with data set #85
 [x] Test cases with data set #86
 [x] Test cases with data set #87
 [x] Test cases with data set #88
 [x] Test cases with data set #89
 [x] Test cases with data set #90
 [x] Test cases with data set #91
 [x] Test cases with data set #92
 [x] Test cases with data set #93
 [x] Test cases with data set #94
 [x] Test cases with data set #95
 [x] Test cases with data set #96
 [x] Test cases with data set #97

Template Loader (s9e\TextFormatter\Tests\Configurator\Helpers\TemplateLoader)
 [x] load() can load 'foo'
 [x] save() correctly handles 'foo'
 [x] load() can load '<xsl:value-of select="@foo"/>'
 [x] load() removes redundant namespace declarations
 [x] save() correctly handles '<xsl:value-of select="@foo"/>'
 [x] save() correctly handles an empty string
 [x] save() removes redundant declarations for the xsl namespace
 [x] load() can load '<ul><li>one<li>two</ul>'
 [x] load() can load '<script>0<1 && 1>0 && alert(1)</script>'
 [x] load() can load '<ul><li>one<li>two</ul>'
 [x] load() accepts unescaped ampersands
 [x] load() converts HTML entities
 [x] load() converts HTML5 entities in XSLT templates
 [x] load() converts HTML5 entities in HTML templates
 [x] load() does not break numeric character references
 [x] load() removes attributes with an invalid name
 [x] load() removes attributes with an invalid namespace in XML
 [x] load() removes attributes with an invalid namespace in HTML
 [x] load() replaces CDATA sections in XML
 [x] load() replaces CDATA sections in HTML
 [x] save() correctly handles '<ul><li>one<li>two</ul>'
 [x] load() throws an exception on malformed XSL
 [x] load() reads HTML as UTF-8
 [x] load() does not load entities

Template Modifier (s9e\TextFormatter\Tests\Configurator\Helpers\TemplateModifier)
 [x] replaceTokens() tests with data set #0
 [x] replaceTokens() tests with data set #1
 [x] replaceTokens() tests with data set #2
 [x] replaceTokens() tests with data set #3
 [x] replaceTokens() tests with data set #4
 [x] replaceTokens() tests with data set #5
 [x] replaceTokens() tests with data set #6
 [x] replaceTokens() tests with data set #7
 [x] replaceTokens() tests with data set #8
 [x] replaceTokens() tests with data set #9
 [x] replaceTokens() tests with data set #10
 [x] replaceTokens() tests with data set #11
 [x] replaceTokens() tests with data set #12
 [x] replaceTokens() tests with data set #13
 [x] replaceTokens() tests with data set #14

Template Parser (s9e\TextFormatter\Tests\Configurator\Helpers\TemplateParser)
 [x] parse() tests with data set #0
 [x] parse() tests with data set #1
 [x] parse() tests with data set #2
 [x] parse() tests with data set #3
 [x] parse() tests with data set #4
 [x] parse() tests with data set #5
 [x] parse() tests with data set #6
 [x] parse() tests with data set #7
 [x] parse() tests with data set #8
 [x] parse() tests with data set #9
 [x] parse() tests with data set #10
 [x] parse() tests with data set #11
 [x] parse() tests with data set #12
 [x] parse() tests with data set #13
 [x] parse() tests with data set #14
 [x] parse() tests with data set #15
 [x] parse() tests with data set #16
 [x] parse() tests with data set #17
 [x] parse() tests with data set #18
 [x] parse() tests with data set #19
 [x] parse() tests with data set #20
 [x] parse() tests with data set #21
 [x] parse() tests with data set #22
 [x] parse() tests with data set #23
 [x] parse() tests with data set #24
 [x] parse() tests with data set #25
 [x] parse() tests with data set #26
 [x] parse() tests with data set #27
 [x] parse() tests with data set #28
 [x] parse() tests with data set #29
 [x] parse() tests with data set #30
 [x] parse() tests with data set #31
 [x] parse() tests with data set #32
 [x] parse() tests with data set #33
 [x] parse() tests with data set #34
 [x] parse() tests with data set #35
 [x] parse() tests with data set #36
 [x] parse() tests with data set #37
 [x] parse() tests with data set #38
 [x] parse() tests with data set #39
 [x] parse() tests with data set #40
 [x] parse() tests with data set #41
 [x] parse() tests with data set #42
 [x] parse() tests with data set #43
 [x] parse() tests with data set #44
 [x] parse() tests with data set #45
 [x] parse() tests with data set #46
 [x] parse() tests with data set #47
 [x] parse() tests with data set #48
 [x] parse() tests with data set #49
 [x] parse() tests with data set #50
 [x] parse() tests with data set #51
 [x] parse() tests with data set #52
 [x] parse() tests with data set #53
 [x] parse() tests with data set #54
 [x] parse() tests with data set #55
 [x] parse() tests with data set #56
 [x] parse() tests with data set #57
 [x] parse() tests with data set #58
 [x] parse() tests with data set #59
 [x] parse() tests with data set #60
 [x] parse() tests with data set #61
 [x] parse() tests with data set #62
 [x] parse() tests with data set #63
 [x] parse() tests with data set #64
 [x] parse() tests with data set #65
 [x] parse() tests with data set #66
 [x] parse() tests with data set #67
 [x] parse() throws an exception if it encounters a processing instruction in the stylesheet
 [x] parse() throws an exception if it encounters an unsupported XSL element
 [x] parse() throws an exception if it encounters an unsupported <xsl:copy/> expression

XPath Helper (s9e\TextFormatter\Tests\Configurator\Helpers\XPathHelper)
 [x] getVariables() tests with data set #0
 [x] getVariables() tests with data set #1
 [x] getVariables() tests with data set #2
 [x] getVariables() tests with data set #3
 [x] isExpressionNumeric() tests with data set #0
 [x] isExpressionNumeric() tests with data set #1
 [x] isExpressionNumeric() tests with data set #2
 [x] isExpressionNumeric() tests with data set #3
 [x] isExpressionNumeric() tests with data set #4
 [x] isExpressionNumeric() tests with data set #5
 [x] isExpressionNumeric() tests with data set #6
 [x] isExpressionNumeric() tests with data set #7
 [x] isExpressionNumeric() tests with data set #8
 [x] isExpressionNumeric() tests with data set #9
 [x] isExpressionNumeric() tests with data set #10
 [x] isExpressionNumeric() tests with data set #11
 [x] isExpressionNumeric() tests with data set #12
 [x] isExpressionNumeric() tests with data set #13
 [x] isExpressionNumeric() tests with data set #14
 [x] isExpressionNumeric() tests with data set #15
 [x] isExpressionNumeric() tests with data set #16
 [x] isExpressionNumeric() tests with data set #17
 [x] isExpressionNumeric() tests with data set #18
 [x] isExpressionNumeric() tests with data set #19
 [x] isExpressionNumeric() tests with data set #20
 [x] minify() tests with data set #0
 [x] minify() tests with data set #1
 [x] minify() tests with data set #2
 [x] minify() tests with data set #3
 [x] minify() tests with data set #4
 [x] minify() tests with data set #5
 [x] minify() tests with data set #6
 [x] minify() tests with data set #7
 [x] minify() tests with data set #8
 [x] minify() tests with data set #9
 [x] minify() tests with data set #10
 [x] minify() tests with data set #11
 [x] minify() tests with data set #12
 [x] minify() tests with data set #13
 [x] minify() tests with data set #14
 [x] minify() tests with data set #15
 [x] minify() tests with data set #16
 [x] minify() tests with data set #17
 [x] minify() tests with data set #18
 [x] minify() tests with data set #19
 [x] minify() tests with data set #20
 [x] minify() tests with data set #21
 [x] minify() tests with data set #22
 [x] minify() tests with data set #23
 [x] minify() tests with data set #24
 [x] minify() tests with data set #25
 [x] minify() tests with data set #26
 [x] minify() tests with data set #27
 [x] minify() tests with data set #28
 [x] Parse equality expr with data set #0
 [x] Parse equality expr with data set #1
 [x] Parse equality expr with data set #2
 [x] Parse equality expr with data set #3
 [x] Parse equality expr with data set #4
 [x] Parse equality expr with data set #5
 [x] Parse equality expr with data set #6
 [x] Parse equality expr with data set #7
 [x] encodeStrings() works
 [x] decodeStrings() works

Attribute Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilter)
 [x] Sets the filter's signature to ['attrValue' => null]
 [x] isSafeInCSS() returns FALSE by default
 [x] isSafeInCSS() returns TRUE if markAsSafeInCSS() is called
 [x] isSafeInJS() returns FALSE by default
 [x] isSafeInJS() returns TRUE if markAsSafeInCSS() is called
 [x] isSafeInJS() returns TRUE if the callback is 'rawurlencode'
 [x] isSafeInJS() returns TRUE if the callback is 'strtotime'
 [x] isSafeInJS() returns TRUE if the callback is 'urlencode'
 [x] isSafeAsURL() returns FALSE by default
 [x] isSafeAsURL() returns TRUE if markAsSafeAsURL() is called

Alnum Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\AlnumFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is safe in CSS
 [x] Is safe in URL

Choice Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\ChoiceFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] __construct() forwards its arguments to setValues()
 [x] setValues() creates a regexp that matches all given values (case-insensitive) and calls setRegexp()
 [x] setValues() creates a case-sensitive regexp if its second argument is TRUE
 [x] setValues() creates a Unicode-aware regexp if any values are non-ASCII
 [x] setValues() throws an exception if its second argument is not a boolean

Color Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\ColorFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is safe in CSS

Email Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\EmailFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\EmailFilter::filter()

False Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\FalseFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\FalseFilter::filter()

Float Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\FloatFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NumericFilter::filterFloat()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL

Fontfamily Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\FontfamilyFilter)
 [x] Is safe as URL
 [x] Is safe in CSS
 [x] Is not safe in JS

Hashmap Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\HashmapFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\HashmapFilter::filter()
 [x] __construct() forwards its arguments to setMap()
 [x] asConfig() throws an exception if the 'map' var is missing
 [x] asConfig() returns an array
 [x] Creates a sparse map by default
 [x] Creates a strict map if the second argument is TRUE
 [x] Throws an exception if the second argument is not a boolean
 [x] Values identical to their key are optimized away if the map is sparse
 [x] Values identical to their key are preserved if the map is strict
 [x] isSafeInCSS() returns false if the map is not strict
 [x] isSafeInCSS() returns true if the map is strict
 [x] isSafeInCSS() returns false if a value in the map contains a parenthesis
 [x] isSafeInCSS() returns false if a value in the map contains a colon
 [x] isSafeInCSS() returns false if a value in the map contains a semicolon
 [x] isSafeInJS() returns false if the map is not strict
 [x] isSafeInJS() returns true if the map is strict
 [x] isSafeInJS() returns false if a value in the map contains a parenthesis
 [x] isSafeInJS() returns false if a value in the map contains a single quote
 [x] isSafeInJS() returns false if a value in the map contains a double quote
 [x] isSafeInJS() returns false if a value in the map contains \r or \n
 [x] isSafeInJS() returns false if a value in the map contains U+2028
 [x] isSafeInJS() returns false if a value in the map contains U+2029
 [x] Changing the map's content resets the filter's safeness
 [x] Changing the map's strictness resets the filter's safeness

Identifier Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\IdentifierFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is safe in CSS
 [x] Is safe in URL

Int Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\IntFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NumericFilter::filterInt()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL

Ip Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\IpFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NetworkFilter::filterIp()

Ipport Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\IpportFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NetworkFilter::filterIpport()

Ipv4Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\Ipv4Filter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NetworkFilter::filterIpv4()

Ipv6Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\Ipv6Filter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NetworkFilter::filterIpv6()

Map Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\MapFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\MapFilter::filter()
 [x] __construct() forwards its arguments to setMap()
 [x] asConfig() throws an exception if the 'map' var is missing
 [x] asConfig() returns an array
 [x] setMap() creates case-insensitive regexps by default
 [x] setMap() creates case-sensitive regexps if its second argument is TRUE
 [x] setMap() appends a catch-all regexp that maps to FALSE if its third argument is TRUE
 [x] setMap() uses the pattern modifier 'u' if a regexp is not entirely ASCII
 [x] setMap() throws an exception if the second argument is not a boolean
 [x] setMap() throws an exception if the third argument is not a boolean
 [x] isSafeInCSS() returns false if the map is not strict
 [x] isSafeInCSS() returns true if the map is strict
 [x] isSafeInCSS() returns false if a safe map is replaced with an unsafe map state
 [x] isSafeInCSS() returns false if a value in the map contains a parenthesis
 [x] isSafeInCSS() returns false if a value in the map contains a colon
 [x] isSafeInCSS() returns false if a value in the map contains a semicolon
 [x] isSafeInJS() returns false if the map is not strict
 [x] isSafeInJS() returns true if the map is strict
 [x] isSafeInJS() returns false if a safe map is replaced with an unsafe map state
 [x] isSafeInJS() returns false if a value in the map contains a parenthesis
 [x] isSafeInJS() returns false if a value in the map contains a single quote
 [x] isSafeInJS() returns false if a value in the map contains a double quote
 [x] isSafeInJS() returns false if a value in the map contains \r or \n
 [x] isSafeInJS() returns false if a value in the map contains U+2028
 [x] isSafeInJS() returns false if a value in the map contains U+2029

Number Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\NumberFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL

Range Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\RangeFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NumericFilter::filterRange()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL
 [x] __construct() forwards its arguments to setRange()
 [x] asConfig() throws an exception if the 'min' var is missing
 [x] asConfig() throws an exception if the 'max' var is missing
 [x] asConfig() returns an array
 [x] setRange() sets the 'min' and 'max' vars
 [x] setRange() throws an exception if the first argument is not a number
 [x] setRange() throws an exception if the second argument is not a number
 [x] setRange() throws an exception if the min value is greater than the max value

Regexp Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\RegexpFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is not safe as URL
 [x] Is safe as URL if the regexp is /^[a-z]$/
 [x] Is safe as URL if the regexp is /^foo:(.*)/
 [x] Is not safe as URL if the regexp is /^foo:(.*)/m
 [x] Is safe as URL if the regexp is /^https?:(.*)/
 [x] Is safe as URL if the regexp is /^(https?:.*)/
 [x] Is safe as URL if the regexp is /^(?:https?:.*)/
 [x] Is not safe as URL if the regexp is /^javascript:(.*)/
 [x] Is not safe as URL if the regexp is /^javascriptx?:(.*)/
 [x] Is not safe as URL if the regexp allows a colon to be used
 [x] Is not safe as URL if the regexp is invalid
 [x] Is not safe as URL if the regexp can't be parsed
 [x] Is safe in CSS if the regexp is /^(?:left|right|center)$/
 [x] Is safe in CSS if the regexp is /^[a-z]$/
 [x] Is not safe in CSS if the regexp is /^[A-z]$/ because it would allow backslashes
 [x] Is not safe in CSS if the regexp is invalid
 [x] Is not safe in CSS if no regexp is set
 [x] Is safe in JS if the regexp is /^\d+$/D
 [x] Is safe in JS if the regexp is /^[0-9]+$/D
 [x] Is safe in JS if the regexp is /^(?:[0-9]+)$/D
 [x] Is safe in JS if the regexp is /^\w++$/D
 [x] Is not safe in JS if the regexp is /^\W++$/D
 [x] Is not safe in JS if the regexp is /^\d+/D
 [x] Is not safe in JS if the regexp is /\d+$/D
 [x] Is not safe in JS if the regexp is /^\d+$/
 [x] Is not safe in JS if the regexp is /^\d+$/Dm
 [x] __construct() forwards its arguments to setRegexp()
 [x] getRegexp() returns the filter's regexp
 [x] setRegexp() sets the filter's regexp
 [x] setRegexp() throws an exception if the regexp is invalid
 [x] asConfig() returns an array
 [x] asConfig() throws an exception if the 'regexp' var is missing
 [x] asConfig() creates a Regexp instance
 [x] Changing the regexp resets the filter's safeness
 [x] Template safeness can be set manually

Simpletext Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\SimpletextFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is safe in CSS

Timestamp Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\TimestampFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\RegexpFilter::filter()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL

Uint Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\UintFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\NumericFilter::filterUint()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL

Url Filter (s9e\TextFormatter\Tests\Configurator\Items\AttributeFilters\UrlFilter)
 [x] Callback is s9e\TextFormatter\Parser\AttributeFilters\UrlFilter::filter()
 [x] Is safe in CSS
 [x] Is safe in JS
 [x] Is safe in URL

Attribute Preprocessor (s9e\TextFormatter\Tests\Configurator\Items\AttributePreprocessor)
 [x] __construct() throws an InvalidArgumentException if the regexp is not valid
 [x] getAttributes() returns an array where keys are the name of the named subpatterns/attributes and values is the regexp that exactly matches them
 [x] getAttributes() preserves the original's regexp "i", "s" and "u" flags
 [x] getRegexp() returns the regexp associated with this attribute preprocessor

Attribute (s9e\TextFormatter\Tests\Configurator\Items\Attribute)
 [x] An array of options can be passed to the constructor
 [x] $attr->filterChain can be assigned an array
 [x] asConfig() correctly produces a config array
 [x] isSafeAsURL() returns FALSE by default
 [x] isSafeAsURL() returns TRUE if any filter is safe in context
 [x] markAsSafeAsURL() unconditionally marks the attribute as safe in context
 [x] isSafeInCSS() returns FALSE by default
 [x] isSafeInCSS() returns TRUE if any filter is safe in context
 [x] markAsSafeInCSS() unconditionally marks the attribute as safe in context
 [x] isSafeInJS() returns FALSE by default
 [x] isSafeInJS() returns TRUE if any filter is safe in context
 [x] markAsSafeInJS() unconditionally marks the attribute as safe in context

Programmable Callback (s9e\TextFormatter\Tests\Configurator\Items\ProgrammableCallback)
 [x] __construct() throws an InvalidArgumentException if its argument is not callable
 [x] An array of variables can be set with setVars() or retrieved with getVars()
 [x] setVars() is chainable
 [x] A single variable can be set with setVar() without overwriting other variables
 [x] setVars() is chainable
 [x] addParameterByValue() adds a parameter as a value with no name
 [x] addParameterByValue() is chainable
 [x] addParameterByName() adds a parameter as a name with no value
 [x] addParameterByName() throws an exception when the same parameter is added twice
 [x] addParameterByName() is chainable
 [x] resetParameters() removes all parameters
 [x] resetParameters() is chainable
 [x] Callback '\\strtotime' is normalized to 'strtotime'
 [x] Callback ['foo','bar'] is normalized to 'foo::bar'
 [x] Callback ['\\foo','bar'] is normalized to 'foo::bar'
 [x] getCallback() returns the callback
 [x] getJS() returns 'returnFalse' by default
 [x] getJS() returns a JavaScript source for known functions
 [x] getJS() returns NULL if no JS was set and the callback is a function that is not found in Configurator/JavaScript/functions/
 [x] setJS() accepts a string and normalizes it to an instance of Code
 [x] setJS() accepts an instance of Code
 [x] setJS() is chainable
 [x] asConfig() returns an array containing the callback
 [x] asConfig() replaces the by-name parameters by the values stored in vars if available
 [x] asConfig() returns the callback's JavaScript as a Code object if available
 [x] asConfig() replaces values that implement ConfigProvider with their config value
 [x] asConfig() recurses into params via ConfigHelper::toArray() to convert structures to arrays
 [x] asConfig() preserves NULL values and empty arrays in the callback's parameters

Regexp (s9e\TextFormatter\Tests\Configurator\Items\Regexp)
 [x] __construct() throws an InvalidArgumentException if the regexp is not valid
 [x] Can be cast as a string
 [x] getJS() returns the regexp as a string
 [x] setJS() can set a custom regexp
 [x] Is a config provider
 [x] Returns itself as config
 [x] The JS regexp has a global flag if isGlobal is true
 [x] getNamedCaptures() returns an array where keys are the name of the named captures and values are regexps that exactly match them
 [x] getNamedCaptures() puts the expression in a non-capturing subpattern if it contains any alternations
 [x] getNamedCaptures() preserves the original's regexp "i", "s" and "u" flags
 [x] getCaptureNames() returns the names of all captures
 [x] filterConfig('PHP') returns the regexp as a string
 [x] filterConfig('JS') returns a Code object

Tag Filter (s9e\TextFormatter\Tests\Configurator\Items\TagFilter)
 [x] Sets the filter's signature to ['tag' => null]

Tag (s9e\TextFormatter\Tests\Configurator\Items\Tag)
 [x] An array of options can be passed to the constructor
 [x] $tag->attributePreprocessors can be assigned a 2D array of regexps
 [x] $tag->attributePreprocessors can be assigned an instance of AttributePreprocessorCollection to copy its content
 [x] Setting $tag->attributePreprocessors clears previous attributePreprocessors
 [x] $tag->nestingLimit accepts '10' and casts it as an integer
 [x] $tag->nestingLimit rejects non-numbers
 [x] $tag->nestingLimit rejects numbers less than 1
 [x] $tag->rules can be assigned a 2D array of rules
 [x] $tag->rules can be assigned an instance of Ruleset to copy its content
 [x] Setting $tag->rules clears previous rules
 [x] $tag->tagLimit accepts '10' and casts it as an integer
 [x] $tag->tagLimit rejects non-numbers
 [x] $tag->tagLimit rejects numbers less than 1
 [x] $tag->template = 'foo' set the tag's template to an instance of Template
 [x] $tag->template returns the tag's template
 [x] isset($tag->template) is supported
 [x] unset($tag->template) is supported
 [x] asConfig() produces a config array, omitting properties that are not needed during parsing such as template
 [x] $tag->filterChain starts with FilterProcessing::executeAttributePreprocessors by default
 [x] $tag->filterChain contains FilterProcessing::filterAttributes by default
 [x] asConfig() omits 'FilterProcessing::executeAttributePreprocessors' from the returned filterChain if no attribute preprocessor is defined
 [x] asConfig() does not modify the tag's filterChain itself

Template Document (s9e\TextFormatter\Tests\Configurator\Items\TemplateDocument)
 [x] saveChanges() updates the document's original template

Template (s9e\TextFormatter\Tests\Configurator\Items\Template)
 [x] When cast as string, returns the template's content
 [x] getParameters() returns the list of parameters used in this template
 [x] asDOM() returns the template as a DOMDocument
 [x] getCSSNodes() returns all nodes that normally contain CSS
 [x] getJSNodes() returns all nodes that normally contain JS
 [x] getURLNodes() returns all nodes that normally contain a URL
 [x] isNormalized() returns false by default
 [x] isNormalized() returns true if normalize() was called
 [x] isNormalized(true) sets it to true
 [x] isNormalized(false) sets it to false
 [x] getInspector() returns an instance of TemplateInspector based on this template's content
 [x] normalize() resets the cached instance of TemplateInspector
 [x] replaceTokens() performs regexp-based replacements on the template's content
 [x] replaceTokens() resets the cached instance of TemplateInspector
 [x] replaceTokens() resets isNormalized
 [x] Unknown methods such as isBlock() and isPassthrough() are forwarded to this template's TemplateInspector instance
 [x] setContent() updates the template's content

Callback Generator (s9e\TextFormatter\Tests\Configurator\CallbackGenerator)
 [x] replaceCallbacks() tests with data set #0
 [x] replaceCallbacks() tests with data set #1
 [x] replaceCallbacks() tests with data set #2
 [x] replaceCallbacks() tests with data set #3
 [x] replaceCallbacks() tests with data set #4
 [x] replaceCallbacks() tests with data set #5
 [x] replaceCallbacks() tests with data set #6

Code (s9e\TextFormatter\Tests\Configurator\JavaScript\Code)
 [x] Can be cast as a string
 [x] __toString() always returns a string
 [x] filterConfig('PHP') returns null
 [x] filterConfig('PHP') returns the Code instance

Config Optimizer (s9e\TextFormatter\Tests\Configurator\ConfigOptimizer)
 [x] reset() clears the stored objects
 [x] OptimizeObject tests with data set #0
 [x] OptimizeObject tests with data set #1
 [x] OptimizeObject tests with data set #2
 [x] OptimizeObject tests with data set #3
 [x] OptimizeObject tests with data set #4
 [x] OptimizeObject tests with data set #5
 [x] OptimizeObject tests with data set #6

Config Value (s9e\TextFormatter\Tests\Configurator\JavaScript\ConfigValue)
 [x] getUseCount() returns 0 by default
 [x] getValue() returns the original value
 [x] getVarName() returns the assigned variable name
 [x] incrementUseCount() increments the use count by 1
 [x] deduplicate() doesn't do anything if the use count is 1
 [x] deduplicate() marks the value as deduplicated if the use count is 2
 [x] deduplicate() sets the use counter of the instance to 1
 [x] deduplicate() decrements the use counter of config values contained in the instance
 [x] deduplicate() decrements the use counter of config values contained in the instance

Dictionary (s9e\TextFormatter\Tests\Configurator\Dictionary)
 [x] filterConfig('PHP') returns an array
 [x] filterConfig('JS') returns an equal but different instance of Dictionary
 [x] filterConfig('JS') filters the dictionary's content

Encoder (s9e\TextFormatter\Tests\Configurator\Encoder)
 [x] encode() tests with data set #0
 [x] encode() tests with data set #1
 [x] encode() tests with data set #2
 [x] encode() tests with data set #3
 [x] encode() tests with data set #4
 [x] encode() tests with data set #5
 [x] encode() tests with data set #6
 [x] encode() tests with data set #7
 [x] encode() tests with data set #8
 [x] encode() tests with data set #9
 [x] encode() tests with data set #10
 [x] encode() tests with data set #11
 [x] encode() tests with data set #12
 [x] encode() tests with data set #13
 [x] encode() tests with data set #14
 [x] encode() tests with data set #15
 [x] encode() tests with data set #16
 [x] encode() tests with data set #17
 [x] encode() tests with data set #18
 [x] encode() does not quote legal property names
 [x] encode() quotes illegal property names
 [x] encode() throws an exception on unsupported types
 [x] encode() throws an exception on unsupported objects
 [x] encode() properly encodes deduplicated config values

Function Cache (s9e\TextFormatter\Tests\Configurator\FunctionCache)
 [x] Add from x s l with data set #0
 [x] Add from x s l with data set #1
 [x] Add from x s l with data set #2
 [x] Add from x s l with data set #3
 [x] Add from x s l with data set #4
 [x] Add from x s l with data set #5
 [x] Add from x s l with data set #6

Function Provider (s9e\TextFormatter\Tests\Configurator\JavaScript\FunctionProvider)
 [x] get() will return the source from cache if available
 [x] get() will return the source from the filesystem if applicable
 [x] get() will throw an exception if the function can't be sourced

Hasher (s9e\TextFormatter\Tests\Configurator\JavaScript\Hasher)
 [x] quickHash() matches hash() output with data set #0
 [x] quickHash() matches hash() output with data set #1
 [x] quickHash() matches hash() output with data set #2
 [x] quickHash() matches hash() output with data set #3
 [x] quickHash() throws an exception on invalid UTF-8

Hint Generator (s9e\TextFormatter\Tests\Configurator\HintGenerator)
 [x] HINT.attributeDefaultValue=0 by default
 [x] HINT.attributeDefaultValue=1 if any attribute has a defaultValue
 [x] HINT.closeAncestor=0 by default
 [x] HINT.closeAncestor=1 if any tag has a closeAncestor rule
 [x] HINT.closeParent=0 by default
 [x] HINT.closeParent=1 if any tag has a closeParent rule
 [x] HINT.createChild=0 by default
 [x] HINT.createChild=1 if any tag has a createChild rule
 [x] HINT.fosterParent=0 by default
 [x] HINT.fosterParent=1 if any tag has a fosterParent rule
 [x] HINT.namespaces=0 by default
 [x] HINT.namespaces=1 if any tag has a namespaces rule
 [x] HINT.onRender=0 by default
 [x] HINT.onRender=1 if "data-s9e-livepreview-onrender" appears in the stylesheet
 [x] HINT.ignoreAttrs=0 by default
 [x] HINT.ignoreAttrs=1 if "data-s9e-livepreview-ignore-attrs" appears in the stylesheet
 [x] HINT.hash=0 by default
 [x] HINT.hash=1 if "data-s9e-livepreview-hash" appears in the stylesheet
 [x] HINT.requireAncestor=0 by default
 [x] HINT.requireAncestor=1 if any tag has a requireAncestor rule
 [x] HINT.RULE_AUTO_CLOSE=0 by default
 [x] HINT.RULE_AUTO_CLOSE=1 if any tag has an autoClose rule
 [x] HINT.RULE_AUTO_REOPEN=0 by default
 [x] HINT.RULE_AUTO_REOPEN=1 if any tag has an autoReopen rule
 [x] HINT.RULE_BREAK_PARAGRAPH=0 by default
 [x] HINT.RULE_BREAK_PARAGRAPH=1 if any tag has a breakParagraph rule
 [x] HINT.RULE_CREATE_PARAGRAPHS=0 by default
 [x] HINT.RULE_CREATE_PARAGRAPHS=1 if any tag has a createParagraphs rule
 [x] HINT.RULE_CREATE_PARAGRAPHS=1 if the root rules have a createParagraphs rule
 [x] HINT.RULE_IGNORE_TEXT=0 by default
 [x] HINT.RULE_IGNORE_TEXT=1 if any tag has an ignoreText rule
 [x] HINT.RULE_IGNORE_TEXT=1 if the root rules have a createParagraphs rule
 [x] HINT.RULE_IGNORE_WHITESPACE=0 by default
 [x] HINT.RULE_IGNORE_WHITESPACE=1 if any tag has an ignoreSurroundingWhitespace rule
 [x] HINT.RULE_IS_TRANSPARENT=0 by default
 [x] HINT.RULE_IS_TRANSPARENT=1 if any tag has an isTransparent rule
 [x] HINT.RULE_TRIM_FIRST_LINE=0 by default
 [x] HINT.RULE_TRIM_FIRST_LINE=1 if any tag has an trimFirstLine rule
 [x] HINT.regexp=0 by default
 [x] HINT.regexp=1 if a plugin has a regexp
 [x] HINT.regexpLimit=0 by default
 [x] HINT.regexpLimit=1 if a plugin has a regexpLimit
 [x] Contains hints from plugins

Minifier (s9e\TextFormatter\Tests\Configurator\JavaScript\Minifier)
 [x] get() forwards the call to minify() and returns its result
 [x] Caching is disabled if cacheDir is not set
 [x] Caching is enabled if cacheDir is set
 [x] get() returns the cached result if applicable
 [x] get() rethrows exception thrown during minification by default
 [x] get() discards exceptions thrown during minification and instead returns the original source if keepGoing is TRUE
 [x] getCacheDifferentiator() returns a default constant

Closure Compiler Application (s9e\TextFormatter\Tests\Configurator\JavaScript\Minifiers\ClosureCompilerApplication)
 [x] Constructor accepts a command
 [x] Throws an exception if the JavaScript is invalid
 [x] Allows caching
 [x] The cache key depends on the compilation level
 [x] The cache key depends on the extra options
 [x] The cache key depends on the command
 [x] The cache key depends on whether the default externs are excluded
 [x] If the default externs are excluded, the custom externs are baked into the cache key
 [x] Works
 [x] minify() throws an exception if an error occurs during minification
 [x] Replaces the default externs with custom externs if compilationLevel is ADVANCED_OPTIMIZATIONS and excludeDefaultExterns is true

Closure Compiler Service (s9e\TextFormatter\Tests\Configurator\JavaScript\Minifiers\ClosureCompilerService)
 [x] Compilation level is ADVANCED_OPTIMIZATIONS by default
 [x] Excludes default externs by default
 [x] Includes our custom externs by default
 [x] Allows caching
 [x] The cache key depends on the compilation level
 [x] The cache key depends on whether the default externs are excluded
 [x] If the default externs are excluded, the custom externs are baked into the cache key
 [x] Throws an exception in case of a request failure
 [x] Throws an exception if the response isn't valid JSON
 [x] Throws an exception in case of a server error
 [x] Throws an exception in case of a compilation error

First Available (s9e\TextFormatter\Tests\Configurator\JavaScript\Minifiers\FirstAvailable)
 [x] Constructor accepts any number of known minifiers
 [x] getCacheDifferentiator() is constant
 [x] minify() returns the result of the first minification if applicable
 [x] minify() returns the result of the second minification if the first throws an exception
 [x] minify() throws an exception if no minifier is set
 [x] minify() throws an exception if no minifier success

Matthias Mullie Minify (s9e\TextFormatter\Tests\Configurator\JavaScript\Minifiers\MatthiasMullieMinify)
 [x] minify() works

Noop (s9e\TextFormatter\Tests\Configurator\JavaScript\Minifiers\Noop)
 [x] minify() returns its first argument
 [x] getCacheDifferentiator() is constant

Regexp Convertor (s9e\TextFormatter\Tests\Configurator\JavaScript\RegexpConvertor)
 [x] toJS() can convert plain regexps
 [x] toJS() escapes forward slashes
 [x] toJS() does not double-escape forward slashes that are already escaped
 [x] toJS() does not "eat" backslashes while escaping forward slashes
 [x] toJS() can convert regexps with the "i" modifier
 [x] toJS() can convert regexps with capturing subpatterns
 [x] toJS() can convert regexps with non-capturing subpatterns
 [x] toJS() can convert regexps with non-capturing subpatterns with a quantifier
 [x] toJS() converts greedy quantifiers to normal quantifiers in non-capturing subpatterns
 [x] toJS() throws a RuntimeException on options (?i)
 [x] toJS() removes option (?J)
 [x] toJS() throws a RuntimeException on subpattern options (?i:)
 [x] toJS() can convert regexps with character classes with a quantifier
 [x] toJS() converts greedy quantifiers to normal quantifiers in character classes
 [x] toJS() replaces \pL with the full character range in character classes
 [x] toJS() replaces \p{L} with the full character range in character classes
 [x] toJS() replaces \pL outside of character classes with a character class containing the full character range
 [x] toJS() replaces \p{L} outside of character classes with a character class containing the full character range
 [x] toJS() replaces \p{^L} with a character class equivalent to \PL
 [x] toJS() replaces \P{^L} with a character class equivalent to \pL
 [x] toJS() replaces \PZl with the opposite character range of \pZl
 [x] toJS() can convert regexps with lookahead assertions
 [x] toJS() can convert regexps with negative lookahead assertions
 [x] toJS() throws a RuntimeException on lookbehind assertions
 [x] toJS() throws a RuntimeException on negative lookbehind assertions
 [x] toJS() converts . to [\s\S] outside of character classes if the "s" modifier is set
 [x] toJS() does not convert . to [\s\S] if the "s" modifier is not set
 [x] toJS() does not convert . inside of character classes
 [x] toJS() converts named captures into normal captures
 [x] toJS() correctly converts /(?:foo)(?<z>bar)/ to /(?:foo)(bar)/
 [x] toJS() converts atomic groups to non-capturing groups
 [x] toJS('//') returns /(?:)/
 [x] toJS('/x/') returns /x/
 [x] toJS('/x/', true) returns /x/g
 [x] toJS() converts literal ASCII line terminators \r and \n
 [x] toJS() converts literal Unicode line terminators \u2028 and \u2029
 [x] toJS() escapes backslashes that precede literal line terminators
 [x] toJS() replaces \x{27bf} with \u27bf
 [x] toJS() replaces \x{27BF} with \u27BF
 [x] toJS() replaces \\\x{27BF} with \\\u27BF
 [x] toJS() preserves \\x{27BF}

Stylesheet Compressor (s9e\TextFormatter\Tests\Configurator\StylesheetCompressor)
 [x] encode() tests with data set #0
 [x] encode() tests with data set #1
 [x] encode() tests with data set #2
 [x] encode() tests with data set #3
 [x] encode() tests with data set #4
 [x] encode() tests with data set #5
 [x] encode() tests with data set #6

Java Script (s9e\TextFormatter\Tests\Configurator\JavaScript)
 [x] getMinifier() returns an instance of Noop by default
 [x] setMinifier() accepts the name of a minifier type and returns an instance
 [x] setMinifier() accepts the name of a minifier type plus any number of arguments passed to the minifier's constructor
 [x] setMinifier() accepts an object that implements Minifier
 [x] setMinifier() returns the new instance
 [x] getParser() calls the minifier and returns its result
 [x] getParser() optionally accepts a config array as argument
 [x] A plugin's quickMatch value is preserved if it's valid UTF-8
 [x] A plugin's quickMatch value is discarded if it contains no valid UTF-8
 [x] If a plugin's quickMatch value contains bad UTF-8, only the first consecutive valid characters are kept
 [x] A plugin with no JS parser does not appear in the source
 [x] getParser() throws an exception if it encounters a value that cannot be encoded into JavaScript
 [x] Built-in attribute filters are converted
 [x] An attribute filter that uses a built-in filter as callback is converted
 [x] An attribute filter with no JS representation unconditionally returns false
 [x] The name of a registered vars is expressed in quotes
 [x] "cacheDir" is removed from registered vars
 [x] "className" is removed from the plugins' config
 [x] Callbacks use the bracket syntax to access registered vars
 [x] The normal Logger is present by default
 [x] The null Logger is use if getLogger() is not exported
 [x] Callbacks correctly encode values
 [x] Tag config is wholly deduplicated
 [x] The public API is created if anything is exported
 [x] The public API is not created if nothing is exported
 [x] Exports' order is consistent
 [x] Preserves live preview attributes
 [x] Prefills the function cache
 [x] Does not prefill the function cache with dynamic code

Abstract Recursive Matcher (s9e\TextFormatter\Tests\Configurator\RecursiveParser\AbstractRecursiveMatcher)
 [x] recurse($str) calls $parser->parse($str) and returns its "value" element

Caching Recursive Parser (s9e\TextFormatter\Tests\Configurator\RecursiveParser\CachingRecursiveParser)
 [x] Returns cached result if available
 [x] Resets cache when setMatchers() is called

Recursive Parser (s9e\TextFormatter\Tests\Configurator\RecursiveParser)
 [x] Throws an exception if the input cannot be matched
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3

Branch Output Optimizer (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\BranchOutputOptimizer)
 [x] optimize() tests with data set #0
 [x] optimize() tests with data set #1
 [x] optimize() tests with data set #2
 [x] optimize() tests with data set #3
 [x] optimize() tests with data set #4
 [x] optimize() tests with data set #5
 [x] optimize() tests with data set #6
 [x] optimize() tests with data set #7
 [x] optimize() tests with data set #8
 [x] optimize() tests with data set #9
 [x] optimize() tests with data set #10
 [x] optimize() tests with data set #11

Control Structures Optimizer (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\ControlStructuresOptimizer)
 [x] optimize() tests with data set #0
 [x] optimize() tests with data set #1
 [x] optimize() tests with data set #2
 [x] optimize() tests with data set #3
 [x] optimize() tests with data set #4
 [x] optimize() tests with data set #5
 [x] optimize() tests with data set #6
 [x] optimize() tests with data set #7
 [x] optimize() tests with data set #8
 [x] optimize() tests with data set #9
 [x] optimize() tests with data set #10
 [x] optimize() tests with data set #11
 [x] optimize() tests with data set #12
 [x] optimize() tests with data set #13
 [x] optimize() tests with data set #14
 [x] optimize() tests with data set #15
 [x] optimize() tests with data set #16
 [x] optimize() tests with data set #17
 [x] optimize() tests with data set #18
 [x] optimize() tests with data set #19
 [x] optimize() tests with data set #20
 [x] optimize() tests with data set #21
 [x] optimize() tests with data set #22
 [x] optimize() tests with data set #23
 [x] optimize() tests with data set #24
 [x] optimize() tests with data set #25
 [x] optimize() tests with data set #26
 [x] optimize() tests with data set #27

Optimizer (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\Optimizer)
 [x] optimize() tests with data set #0
 [x] optimize() tests with data set #1
 [x] optimize() tests with data set #2
 [x] optimize() tests with data set #3
 [x] optimize() tests with data set #4
 [x] optimize() tests with data set #5
 [x] optimize() tests with data set #6
 [x] optimize() tests with data set #7
 [x] optimize() tests with data set #8
 [x] optimize() tests with data set #9
 [x] optimize() tests with data set #10
 [x] optimize() tests with data set #11
 [x] optimize() tests with data set #12

Quick (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\Quick)
 [x] The quick renderer can handle unknown tags
 [x] The quick renderer can handle unknown self-closing tags
 [x] The quick renderer can handle comments
 [x] The quick renderer can handle processing instructions
 [x] Rendering with data set #0
 [x] Rendering with data set #1
 [x] Rendering with data set #2
 [x] Rendering with data set #3
 [x] Rendering with data set #4
 [x] Rendering with data set #5
 [x] Rendering with data set #6
 [x] Rendering with data set #7
 [x] Rendering with data set #8
 [x] Rendering with data set #9
 [x] Rendering with data set #10
 [x] Rendering with data set #11
 [x] Rendering with data set #12
 [x] Rendering with data set #13
 [x] Rendering with data set #14
 [x] Rendering with data set #15
 [x] Rendering with data set #16
 [x] Rendering with data set #17
 [x] Rendering with data set #18
 [x] Rendering with data set #19
 [x] Rendering with data set #20
 [x] Rendering with data set #21
 [x] Rendering with data set #22
 [x] Rendering with data set #23
 [x] Rendering strategy with data set #0
 [x] Rendering strategy with data set #1
 [x] Rendering strategy with data set #2
 [x] Rendering strategy with data set #3
 [x] Rendering strategy with data set #4
 [x] Rendering strategy with data set #5
 [x] Rendering strategy with data set #6
 [x] Rendering strategy with data set #7
 [x] Rendering strategy with data set #8
 [x] Rendering strategy with data set #9
 [x] Rendering strategy with data set #10
 [x] Rendering strategy with data set #11
 [x] Rendering strategy with data set #12
 [x] Rendering strategy with data set #13
 [x] Rendering strategy with data set #14
 [x] Rendering strategy with data set #15
 [x] Rendering strategy with data set #16
 [x] Rendering strategy with data set #17
 [x] Rendering strategy with data set #18
 [x] Rendering strategy with data set #19
 [x] Rendering strategy with data set #20
 [x] Rendering strategy with data set #21
 [x] Rendering strategy with data set #22
 [x] Rendering strategy with data set #23
 [x] Rendering strategy with data set #24
 [x] Rendering strategy with data set #25
 [x] Rendering strategy with data set #26
 [x] Rendering strategy with data set #27
 [x] Rendering strategy with data set #28
 [x] Rendering strategy with data set #29
 [x] Rendering strategy with data set #30
 [x] Source with data set #0
 [x] Source with data set #1
 [x] Source with data set #2
 [x] Source with data set #3
 [x] Source with data set #4
 [x] Source with data set #5
 [x] Source with data set #6
 [x] Source with data set #7
 [x] Source with data set #8
 [x] Source with data set #9
 [x] Source with data set #10
 [x] Source with data set #11
 [x] Source with data set #12
 [x] Source with data set #13
 [x] Source with data set #14
 [x] Source with data set #15
 [x] Source with data set #16
 [x] Source with data set #17
 [x] Source with data set #18
 [x] Source with data set #19
 [x] Source with data set #20
 [x] Source with data set #21
 [x] Source with data set #22
 [x] Source with data set #23
 [x] Source with data set #24
 [x] Source with data set #25
 [x] Source with data set #26
 [x] Source with data set #27
 [x] Source with data set #28
 [x] Renders plain text
 [x] Renders multi-line text
 [x] Renders rich text
 [x] Ignores locale
 [x] getParameter() returns the default value of a parameter
 [x] getParameter() returns the set value of a parameter
 [x] getParameter() returns an empty string for undefined parameters
 [x] getParameters() returns the values of all parameters, defined and set
 [x] setParameter() sets the value of a parameter
 [x] setParameters() sets the values of any number of parameters in an associative array
 [x] setParameter() accepts values that contain both types of quotes
 [x] Custom parameters are properly saved and restored after serialization
 [x] DTDs in the XML representation cause an exception to be thrown
 [x] Comments in the XML representation cause an exception to be thrown
 [x] Processing instructions in the XML representation cause an exception to be thrown
 [x] Is not vulnerable to XXE
 [x] Renders plain text with SMP character
 [x] Renders rich text with SMP character
 [x] Renders rich text with SMP character encoded as hex
 [x] Does not decode special chars in a plain text with a SMP character
 [x] Does not decode special chars in a rich text with a SMP character
 [x] Does not decode special chars encoded as numeric entities in a plain text with a SMP character
 [x] Does not decode special chars encoded as numeric entities in a rich text with a SMP character
 [x] Uses double quotes for attribute values

Serializer (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\Serializer)
 [x] serialize() tests with data set #0
 [x] serialize() tests with data set #1
 [x] serialize() tests with data set #2
 [x] serialize() tests with data set #3
 [x] serialize() tests with data set #4
 [x] serialize() tests with data set #5
 [x] serialize() tests with data set #6
 [x] serialize() tests with data set #7
 [x] serialize() tests with data set #8
 [x] serialize() ignores text nodes in source tree

Switch Statement (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\SwitchStatement)
 [x] generate() tests with data set #0
 [x] generate() tests with data set #1
 [x] generate() tests with data set #2
 [x] generate() tests with data set #3

Boolean Functions (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\BooleanFunctions)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7

Boolean Operators (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\BooleanOperators)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3

Comparisons (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\Comparisons)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7
 [x]  with data set #8
 [x]  with data set #9
 [x]  with data set #10
 [x]  with data set #11

Core (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\Core)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7
 [x]  with data set #8
 [x]  with data set #9
 [x]  with data set #10
 [x]  with data set #11
 [x]  with data set #12
 [x]  with data set #13
 [x]  with data set #14

Math (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\Math)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7
 [x]  with data set #8
 [x]  with data set #9
 [x]  with data set #10
 [x]  with data set #11
 [x]  with data set #12
 [x]  with data set #13

Multi Byte String Manipulation (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\MultiByteStringManipulation)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7
 [x]  with data set #8
 [x]  with data set #9

PHP80Functions (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\PHP80Functions)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6

Single Byte String Functions (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\SingleByteStringFunctions)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7
 [x]  with data set #8
 [x]  with data set #9

Single Byte String Manipulation (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor\Convertors\SingleByteStringManipulation)
 [x]  with data set #0
 [x]  with data set #1
 [x]  with data set #2
 [x]  with data set #3
 [x]  with data set #4
 [x]  with data set #5
 [x]  with data set #6
 [x]  with data set #7
 [x]  with data set #8
 [x]  with data set #9

XPath Convertor (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP\XPathConvertor)
 [x] The constructor accepts an instance of RecursiveParser
 [x] PHP features can be toggled before first use with data set #0
 [x] PHP features can be toggled before first use with data set #1
 [x] PHP features can be toggled before first use with data set #2
 [x] PHP features can be toggled before first use with data set #3
 [x] convertXPath() tests with data set #0
 [x] convertXPath() tests with data set #1
 [x] convertXPath() tests with data set #2
 [x] convertXPath() tests with data set #3
 [x] convertXPath() tests with data set #4
 [x] convertXPath() tests with data set #5
 [x] convertXPath() tests with data set #6
 [x] convertXPath() tests with data set #7
 [x] convertXPath() tests with data set #8
 [x] convertXPath() tests with data set #9
 [x] convertXPath() tests with data set #10
 [x] convertXPath() tests with data set #11
 [x] convertXPath() tests with data set #12
 [x] convertXPath() tests with data set #13
 [x] convertXPath() tests with data set #14
 [x] convertXPath() tests with data set #15
 [x] convertXPath() tests with data set #16
 [x] convertXPath() tests with data set #17
 [x] convertXPath() tests with data set #18
 [x] convertXPath() tests with data set #19
 [x] convertXPath() tests with data set #20
 [x] convertXPath() tests with data set #21
 [x] convertXPath() tests with data set #22
 [x] convertXPath() tests with data set #23
 [x] convertXPath() tests with data set #24
 [x] convertXPath() tests with data set #25
 [x] convertXPath() tests with data set #26
 [x] convertXPath() tests with data set #27
 [x] convertXPath() tests with data set #28
 [x] convertXPath() tests with data set #29
 [x] convertXPath() tests with data set #30
 [x] convertXPath() tests with data set #31
 [x] convertXPath() tests with data set #32
 [x] convertXPath() tests with data set #33
 [x] convertXPath() tests with data set #34
 [x] convertCondition() tests with data set #0
 [x] convertCondition() tests with data set #1
 [x] convertCondition() tests with data set #2
 [x] convertCondition() tests with data set #3
 [x] convertCondition() tests with data set #4
 [x] convertCondition() tests with data set #5
 [x] convertCondition() tests with data set #6
 [x] convertCondition() tests with data set #7
 [x] convertCondition() tests with data set #8
 [x] convertCondition() tests with data set #9
 [x] convertCondition() tests with data set #10
 [x] convertCondition() tests with data set #11
 [x] convertCondition() tests with data set #12
 [x] convertCondition() tests with data set #13
 [x] convertCondition() tests with data set #14
 [x] convertCondition() tests with data set #15
 [x] convertCondition() tests with data set #16
 [x] convertCondition() tests with data set #17
 [x] convertCondition() tests with data set #18
 [x] convertCondition() tests with data set #19
 [x] convertCondition() tests with data set #20
 [x] convertCondition() tests with data set #21
 [x] convertCondition() tests with data set #22
 [x] convertCondition() tests with data set #23
 [x] convertCondition() tests with data set #24
 [x] convertCondition() tests with data set #25
 [x] convertCondition() tests with data set #26
 [x] convertCondition() tests with data set #27
 [x] convertCondition() tests with data set #28
 [x] convertCondition() tests with data set #29
 [x] convertCondition() tests with data set #30
 [x] convertCondition() tests with data set #31
 [x] convertCondition() tests with data set #32
 [x] convertCondition() tests with data set #33
 [x] convertCondition() tests with data set #34
 [x] convertCondition() tests with data set #35

PHP (s9e\TextFormatter\Tests\Configurator\RendererGenerators\PHP)
 [x] Returns an instance of Renderer
 [x] getRenderer() can be called multiple times with the same rendering configuration
 [x] If no class name is set, a class name is generated based on the renderer's source
 [x] The prefix used for generated class names can be changed in $rendererGenerator->defaultClassPrefix
 [x] The class name can be set in $rendererGenerator->className
 [x] The class name can be namespaced
 [x] The file's first docblock can be set in $rendererGenerator->phpHeader
 [x] If $rendererGenerator->filepath is set, the renderer is saved to this file
 [x] A path to a cache dir can be passed to the constructor
 [x] Uses the system's temporary files dir if no cache dir is passed to the constructor
 [x] If $rendererGenerator->filepath is not set, and $rendererGenerator->cacheDir is set, the renderer is saved to the cache dir using the renderer's class name + '.php' as file name
 [x] When saving the renderer to the cache dir, backslashes in the class name are replaced with underscores
 [x] If $rendererGenerator->filepath and $rendererGenerator->cacheDir are set, the renderer is saved to $rendererGenerator->filepath
 [x] The name of the class of the last generated renderer is available in $rendererGenerator->lastClassName
 [x] The name of the file of the last saved renderer is available in $rendererGenerator->lastFilepath
 [x] Ignores comments
 [x] Throws an exception if a template contains a processing instruction
 [x] Throws an exception when encountering unsupported XSL elements
 [x] Throws an exception on <xsl:copy-of/> that does not copy an attribute
 [x] Matches the reference rendering in edge cases with data set #0
 [x] Matches the reference rendering in edge cases with data set #1
 [x] Matches the reference rendering in edge cases with data set #2
 [x] Matches the reference rendering in edge cases with data set #3
 [x] Matches the reference rendering in edge cases with data set #4
 [x] Matches the reference rendering in edge cases with data set #5
 [x] Matches the reference rendering in edge cases with data set #6
 [x] Matches the reference rendering in edge cases with data set #7
 [x] Matches the reference rendering in edge cases with data set #8
 [x] Matches the reference rendering in edge cases with data set #9
 [x] Matches the reference rendering in edge cases with data set #10
 [x] Matches the reference rendering in edge cases with data set #11
 [x] Matches the reference rendering in edge cases with data set #12
 [x] Matches the reference rendering in edge cases with data set #13
 [x] Matches the reference rendering in edge cases with data set #14
 [x] Matches the reference rendering in edge cases with data set #15
 [x] Matches the reference rendering in edge cases with data set #16
 [x] Matches the reference rendering in edge cases with data set #17
 [x] Matches the reference rendering in edge cases with data set #18
 [x] Matches the reference rendering in edge cases with data set #19
 [x] Matches the reference rendering in edge cases with data set #20
 [x] Matches the reference rendering in edge cases with data set #21
 [x] Matches the reference rendering in edge cases with data set #22
 [x] Matches the reference rendering in edge cases with data set #23
 [x] Matches the reference rendering in edge cases with data set #24
 [x] Matches the reference rendering in edge cases with data set #25
 [x] Matches the reference rendering in edge cases with data set #26
 [x] Matches the reference rendering in edge cases with data set #27
 [x] Matches the reference rendering in edge cases with data set #28
 [x] Matches the reference rendering in edge cases with data set #29
 [x] Matches the reference rendering in edge cases with data set #30
 [x] Matches the reference rendering in edge cases with data set #31
 [x] Matches the reference rendering in edge cases with data set #32
 [x] Matches the reference rendering in edge cases with data set #33
 [x] Matches the reference rendering in edge cases with data set #34
 [x] Matches the reference rendering in edge cases with data set #35
 [x] Matches the reference rendering in edge cases with data set #36
 [x] Matches the reference rendering in edge cases with data set #37
 [x] Matches the reference rendering in edge cases with data set #38
 [x] Matches the reference rendering in edge cases with data set #39
 [x] Matches the reference rendering in edge cases with data set #40
 [x] Matches the reference rendering in edge cases with data set #41
 [x] Matches the reference rendering in edge cases with data set #42
 [x] Matches the reference rendering in edge cases with data set #43
 [x] Matches the reference rendering in edge cases with data set #44
 [x] Matches the reference rendering in edge cases with data set #45
 [x] Matches the reference rendering in edge cases with data set #46
 [x] Matches the reference rendering in edge cases with data set #47
 [x] Matches the reference rendering in edge cases with data set #48
 [x] Matches the reference rendering in edge cases with data set #49
 [x] Matches the reference rendering in edge cases with data set #50
 [x] Matches the reference rendering in edge cases with data set #51
 [x] Matches the reference rendering in edge cases with data set #52
 [x] Matches the reference rendering in edge cases with data set #53
 [x] Matches the reference rendering in edge cases with data set #54
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #0
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #1
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #2
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #3
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #4
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #5
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #6
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #7
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #8
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #9
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #10
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #11
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #12
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #13
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #14
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #15
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #16
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #17
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #18
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #19
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #20
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #21
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #22
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #23
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #24
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #25
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #26
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #27
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #28
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #29
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #30
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #31
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #32
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #33
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #34
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #35
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #36
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #37
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #38
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #39
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #40
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #41
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #42
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #43
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #44
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #45
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #46
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #47
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #48
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #49
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #50
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #51
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #52
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #53
 [x] Matches the reference rendering in edge cases (quick renderer) with data set #54
 [x] XPath expressions are inlined as PHP whenever possible with data set #0
 [x] XPath expressions are inlined as PHP whenever possible with data set #1
 [x] XPath expressions are inlined as PHP whenever possible with data set #2
 [x] XPath expressions are inlined as PHP whenever possible with data set #3
 [x] XPath expressions are inlined as PHP whenever possible with data set #4
 [x] XPath expressions are inlined as PHP whenever possible with data set #5
 [x] XPath expressions are inlined as PHP whenever possible with data set #6
 [x] XPath expressions are inlined as PHP whenever possible with data set #7
 [x] XPath expressions are inlined as PHP whenever possible with data set #8
 [x] XPath expressions are inlined as PHP whenever possible with data set #9
 [x] XPath expressions are inlined as PHP whenever possible with data set #10
 [x] XPath expressions are inlined as PHP whenever possible with data set #11
 [x] Calls the optimizer's optimize() method if applicable
 [x] Can run without an optimizer
 [x] Calls the control structures optimizer's optimize() method if applicable
 [x] Can run without a control structures optimizer
 [x] Code optimization tests with data set #0
 [x] Code optimization tests with data set #1
 [x] Code optimization tests with data set #2
 [x] Code optimization tests with data set #3
 [x] Code optimization tests with data set #4
 [x] Code optimization tests with data set #5
 [x] Code optimization tests with data set #6
 [x] Code optimization tests with data set #7
 [x] Code optimization tests with data set #8
 [x] Code optimization tests with data set #9
 [x] Code optimization tests with data set #10
 [x] Code optimization tests with data set #11
 [x] Code optimization tests with data set #12
 [x] Code optimization tests with data set #13
 [x] Code optimization tests with data set #14
 [x] Code optimization tests with data set #15
 [x] HTML rendering with data set #0
 [x] HTML rendering with data set #1
 [x] HTML rendering with data set #2
 [x] HTML rendering with data set #3
 [x] HTML rendering with data set #4
 [x] HTML rendering with data set #5
 [x] HTML rendering with data set #6
 [x] HTML rendering with data set #7
 [x] HTML rendering with data set #8
 [x] HTML rendering with data set #9
 [x] HTML rendering with data set #10
 [x] HTML rendering with data set #11
 [x] HTML rendering with data set #12
 [x] HTML rendering with data set #13
 [x] HTML rendering with data set #14
 [x] HTML rendering with data set #15
 [x] HTML rendering with data set #16
 [x] HTML rendering with data set #17
 [x] HTML rendering with data set #18
 [x] HTML rendering with data set #19
 [x] HTML rendering with data set #20
 [x] HTML rendering with data set #21
 [x] HTML rendering with data set #22
 [x] HTML rendering with data set #23
 [x] HTML rendering with data set #24
 [x] HTML rendering with data set #25
 [x] HTML rendering with data set #26
 [x] HTML rendering with data set #27
 [x] HTML rendering with data set #28
 [x] HTML rendering with data set #29
 [x] HTML rendering with data set #30
 [x] HTML rendering with data set #31
 [x] HTML rendering with data set #32
 [x] HTML rendering with data set #33
 [x] HTML rendering with data set #34
 [x] HTML rendering with data set #35
 [x] Rendering of void and empty elements in HTML with data set #0
 [x] Rendering of void and empty elements in HTML with data set #1
 [x] Rendering of void and empty elements in HTML with data set #2
 [x] Rendering of void and empty elements in HTML with data set #3
 [x] Rendering of void and empty elements in HTML with data set #4
 [x] Rendering of void and empty elements in HTML with data set #5
 [x] Rendering of void and empty elements in HTML with data set #6
 [x] Rendering of void and empty elements in HTML with data set #7
 [x] Rendering of void and empty elements in HTML with data set #8
 [x] Rendering of void and empty elements in HTML with data set #9
 [x] Rendering of void and empty elements in HTML with data set #10
 [x] Rendering of void and empty elements in HTML with data set #11
 [x] Rendering of void and empty elements in HTML with data set #12
 [x] Rendering of void and empty elements in HTML with data set #13
 [x] Rendering of void and empty elements in HTML with data set #14
 [x] Rendering of void and empty elements in HTML with data set #15
 [x] Tests from plugins with data set #0
 [x] Tests from plugins with data set #1
 [x] Tests from plugins with data set #2
 [x] Tests from plugins with data set #3
 [x] Tests from plugins with data set #4
 [x] Tests from plugins with data set #5
 [x] Tests from plugins with data set #6
 [x] Tests from plugins with data set #7
 [x] Tests from plugins with data set #8
 [x] Tests from plugins with data set #9
 [x] Tests from plugins with data set #10
 [x] Tests from plugins with data set #11
 [x] Tests from plugins with data set #12
 [x] Tests from plugins with data set #13
 [x] Tests from plugins with data set #14
 [x] Tests from plugins with data set #15
 [x] Tests from plugins with data set #16
 [x] Tests from plugins with data set #17
 [x] Tests from plugins with data set #18
 [x] Tests from plugins with data set #19
 [x] Tests from plugins with data set #20
 [x] Tests from plugins with data set #21
 [x] Tests from plugins with data set #22
 [x] Tests from plugins with data set #23
 [x] Tests from plugins with data set #24
 [x] Tests from plugins with data set #25
 [x] Tests from plugins with data set #26
 [x] Tests from plugins with data set #27
 [x] Tests from plugins with data set #28
 [x] Tests from plugins with data set #29
 [x] Tests from plugins with data set #30
 [x] Tests from plugins with data set #31
 [x] Tests from plugins with data set #32
 [x] Tests from plugins with data set #33
 [x] Tests from plugins with data set #34
 [x] Tests from plugins with data set #35
 [x] Tests from plugins with data set #36
 [x] Tests from plugins with data set #37
 [x] Tests from plugins with data set #38
 [x] Tests from plugins with data set #39
 [x] Tests from plugins with data set #40
 [x] Tests from plugins with data set #41
 [x] Tests from plugins with data set #42
 [x] Tests from plugins with data set #43
 [x] Tests from plugins with data set #44
 [x] Tests from plugins with data set #45
 [x] Tests from plugins with data set #46
 [x] Tests from plugins with data set #47
 [x] Tests from plugins with data set #48
 [x] Tests from plugins with data set #49
 [x] Tests from plugins with data set #50
 [x] Tests from plugins with data set #51
 [x] Tests from plugins with data set #52
 [x] Tests from plugins with data set #53
 [x] Tests from plugins with data set #54
 [x] Tests from plugins with data set #55
 [x] Tests from plugins with data set #56
 [x] Tests from plugins with data set #57
 [x] Tests from plugins with data set #58
 [x] Tests from plugins with data set #59
 [x] Tests from plugins with data set #60
 [x] Tests from plugins with data set #61
 [x] Tests from plugins with data set #62
 [x] Tests from plugins with data set #63
 [x] Tests from plugins with data set #64
 [x] Tests from plugins with data set #65
 [x] Tests from plugins with data set #66
 [x] Tests from plugins with data set #67
 [x] Tests from plugins with data set #68
 [x] Tests from plugins with data set #69
 [x] Tests from plugins with data set #70
 [x] Tests from plugins with data set #71
 [x] Tests from plugins with data set #72
 [x] Tests from plugins with data set #73
 [x] Tests from plugins with data set #74
 [x] Tests from plugins with data set #75
 [x] Tests from plugins with data set #76
 [x] Tests from plugins with data set #77
 [x] Tests from plugins with data set #78
 [x] Tests from plugins with data set #79
 [x] Tests from plugins with data set #80
 [x] Tests from plugins with data set #81
 [x] Tests from plugins with data set #82
 [x] Tests from plugins with data set #83
 [x] Tests from plugins with data set #84
 [x] Tests from plugins with data set #85
 [x] Tests from plugins with data set #86
 [x] Tests from plugins with data set #87
 [x] Tests from plugins with data set #88
 [x] Tests from plugins with data set #89
 [x] Tests from plugins with data set #90
 [x] Tests from plugins with data set #91
 [x] Tests from plugins with data set #92
 [x] Tests from plugins with data set #93
 [x] Tests from plugins with data set #94
 [x] Tests from plugins with data set #95
 [x] Tests from plugins with data set #96
 [x] Tests from plugins with data set #97
 [x] Tests from plugins with data set #98
 [x] Tests from plugins with data set #99
 [x] Tests from plugins with data set #100
 [x] Tests from plugins with data set #101
 [x] Tests from plugins with data set #102
 [x] Tests from plugins with data set #103
 [x] Tests from plugins with data set #104
 [x] Tests from plugins with data set #105
 [x] Tests from plugins with data set #106
 [x] Tests from plugins with data set #107
 [x] Tests from plugins with data set #108
 [x] Tests from plugins with data set #109
 [x] Tests from plugins with data set #110
 [x] Tests from plugins with data set #111
 [x] Tests from plugins with data set #112
 [x] Tests from plugins with data set #113
 [x] Tests from plugins with data set #114
 [x] Tests from plugins with data set #115
 [x] Tests from plugins with data set #116
 [x] Tests from plugins with data set #117
 [x] Tests from plugins with data set #118
 [x] Tests from plugins with data set #119
 [x] Tests from plugins with data set #120
 [x] Tests from plugins with data set #121
 [x] Tests from plugins with data set #122
 [x] Tests from plugins with data set #123
 [x] Tests from plugins with data set #124
 [x] Tests from plugins with data set #125
 [x] Tests from plugins with data set #126
 [x] Tests from plugins with data set #127
 [x] Tests from plugins with data set #128
 [x] Tests from plugins with data set #129
 [x] Tests from plugins with data set #130
 [x] Tests from plugins with data set #131
 [x] Tests from plugins with data set #132
 [x] Tests from plugins with data set #133
 [x] Tests from plugins with data set #134
 [x] Tests from plugins with data set #135
 [x] Tests from plugins with data set #136
 [x] Tests from plugins with data set #137
 [x] Tests from plugins with data set #138
 [x] Tests from plugins with data set #139
 [x] Tests from plugins with data set #140
 [x] Tests from plugins with data set #141
 [x] Tests from plugins with data set #142
 [x] Tests from plugins with data set #143
 [x] Tests from plugins with data set #144
 [x] Tests from plugins with data set #145
 [x] Tests from plugins with data set #146
 [x] Tests from plugins with data set #147
 [x] Tests from plugins with data set #148
 [x] Tests from plugins with data set #149
 [x] Tests from plugins with data set #150
 [x] Tests from plugins with data set #151
 [x] Tests from plugins with data set #152
 [x] Tests from plugins with data set #153
 [x] Tests from plugins with data set #154
 [x] Tests from plugins with data set #155
 [x] Tests from plugins with data set #156
 [x] Tests from plugins with data set #157
 [x] Tests from plugins with data set #158
 [x] Tests from plugins with data set #159
 [x] Tests from plugins with data set #160
 [x] Tests from plugins with data set #161
 [x] Tests from plugins with data set #162
 [x] Tests from plugins with data set #163
 [x] Tests from plugins with data set #164
 [x] Tests from plugins with data set #165
 [x] Tests from plugins with data set #166
 [x] Tests from plugins with data set #167
 [x] Tests from plugins with data set #168
 [x] Tests from plugins with data set #169
 [x] Tests from plugins with data set #170
 [x] Tests from plugins with data set #171
 [x] Tests from plugins with data set #172
 [x] Tests from plugins with data set #173
 [x] Tests from plugins with data set #174
 [x] Tests from plugins with data set #175
 [x] Tests from plugins with data set #176
 [x] Tests from plugins with data set #177
 [x] Tests from plugins with data set #178
 [x] Tests from plugins with data set #179
 [x] Tests from plugins with data set #180
 [x] Tests from plugins with data set #181
 [x] Tests from plugins with data set #182
 [x] Tests from plugins with data set #183
 [x] Tests from plugins with data set #184
 [x] Tests from plugins with data set #185
 [x] Tests from plugins with data set #186
 [x] Tests from plugins with data set #187
 [x] Tests from plugins with data set #188
 [x] Tests from plugins with data set #189
 [x] Tests from plugins with data set #190
 [x] Tests from plugins with data set #191
 [x] Tests from plugins with data set #192
 [x] Tests from plugins with data set #193
 [x] Tests from plugins with data set #194
 [x] Tests from plugins with data set #195
 [x] Tests from plugins with data set #196
 [x] Tests from plugins with data set #197
 [x] Tests from plugins with data set #198
 [x] Tests from plugins with data set #199
 [x] Tests from plugins with data set #200
 [x] Tests from plugins with data set #201
 [x] Tests from plugins with data set #202
 [x] Tests from plugins with data set #203
 [x] Tests from plugins with data set #204
 [x] Tests from plugins with data set #205
 [x] Tests from plugins with data set #206
 [x] Tests from plugins with data set #207
 [x] Tests from plugins with data set #208
 [x] Tests from plugins with data set #209
 [x] Tests from plugins with data set #210
 [x] Tests from plugins with data set #211
 [x] Tests from plugins with data set #212
 [x] Tests from plugins with data set #213
 [x] Tests from plugins with data set #214
 [x] Tests from plugins with data set #215
 [x] Tests from plugins with data set #216
 [x] Tests from plugins with data set #217
 [x] Tests from plugins with data set #218
 [x] Tests from plugins with data set #219
 [x] Tests from plugins with data set #220
 [x] Tests from plugins with data set #221
 [x] Tests from plugins with data set #222
 [x] Tests from plugins with data set #223
 [x] Tests from plugins with data set #224
 [x] Tests from plugins with data set #225
 [x] Tests from plugins with data set #226
 [x] Tests from plugins with data set #227
 [x] Tests from plugins with data set #228
 [x] Tests from plugins with data set #229
 [x] Tests from plugins with data set #230
 [x] Tests from plugins with data set #231
 [x] Tests from plugins with data set #232
 [x] Tests from plugins with data set #233
 [x] Tests from plugins with data set #234
 [x] Tests from plugins with data set #235
 [x] Tests from plugins with data set #236
 [x] Tests from plugins with data set #237
 [x] Tests from plugins with data set #238
 [x] Tests from plugins with data set #239
 [x] Tests from plugins with data set #240
 [x] Tests from plugins with data set #241
 [x] Tests from plugins with data set #242
 [x] Tests from plugins with data set #243
 [x] Tests from plugins with data set #244
 [x] Tests from plugins with data set #245
 [x] Tests from plugins with data set #246
 [x] Tests from plugins with data set #247
 [x] Tests from plugins with data set #248
 [x] Tests from plugins with data set #249
 [x] Tests from plugins with data set #250
 [x] Tests from plugins with data set #251
 [x] Tests from plugins with data set #252
 [x] Tests from plugins with data set #253
 [x] Tests from plugins with data set #254
 [x] Tests from plugins with data set #255
 [x] Tests from plugins with data set #256
 [x] Tests from plugins with data set #257
 [x] Tests from plugins with data set #258
 [x] Tests from plugins with data set #259
 [x] Tests from plugins with data set #260
 [x] Tests from plugins with data set #261
 [x] Tests from plugins with data set #262
 [x] Tests from plugins with data set #263
 [x] Tests from plugins with data set #264
 [x] Tests from plugins with data set #265
 [x] Tests from plugins with data set #266
 [x] Tests from plugins with data set #267
 [x] Tests from plugins with data set #268
 [x] Tests from plugins with data set #269
 [x] Tests from plugins with data set #270
 [x] Tests from plugins with data set #271
 [x] Tests from plugins with data set #272
 [x] Tests from plugins with data set #273
 [x] Tests from plugins with data set #274
 [x] Tests from plugins with data set #275
 [x] Tests from plugins with data set #276
 [x] Tests from plugins with data set #277
 [x] Tests from plugins with data set #278
 [x] Tests from plugins with data set #279
 [x] Tests from plugins with data set #280
 [x] Tests from plugins with data set #281
 [x] Tests from plugins with data set #282
 [x] Tests from plugins with data set #283
 [x] Tests from plugins with data set #284
 [x] Tests from plugins with data set #285
 [x] Tests from plugins with data set #286
 [x] Tests from plugins with data set #287
 [x] Tests from plugins with data set #288
 [x] Tests from plugins with data set #289
 [x] Tests from plugins with data set #290
 [x] Tests from plugins with data set #291
 [x] Tests from plugins with data set #292
 [x] Tests from plugins with data set #293
 [x] Tests from plugins with data set #294
 [x] Tests from plugins with data set #295
 [x] Tests from plugins with data set #296
 [x] Tests from plugins with data set #297
 [x] Tests from plugins with data set #298
 [x] Tests from plugins with data set #299
 [x] Tests from plugins with data set #300
 [x] Tests from plugins with data set #301
 [x] Tests from plugins with data set #302
 [x] Tests from plugins with data set #303
 [x] Tests from plugins (Quick renderer) with data set #0
 [x] Tests from plugins (Quick renderer) with data set #1
 [x] Tests from plugins (Quick renderer) with data set #2
 [x] Tests from plugins (Quick renderer) with data set #3
 [x] Tests from plugins (Quick renderer) with data set #4
 [x] Tests from plugins (Quick renderer) with data set #5
 [x] Tests from plugins (Quick renderer) with data set #6
 [x] Tests from plugins (Quick renderer) with data set #7
 [x] Tests from plugins (Quick renderer) with data set #8
 [x] Tests from plugins (Quick renderer) with data set #9
 [x] Tests from plugins (Quick renderer) with data set #10
 [x] Tests from plugins (Quick renderer) with data set #11
 [x] Tests from plugins (Quick renderer) with data set #12
 [x] Tests from plugins (Quick renderer) with data set #13
 [x] Tests from plugins (Quick renderer) with data set #14
 [x] Tests from plugins (Quick renderer) with data set #15
 [x] Tests from plugins (Quick renderer) with data set #16
 [x] Tests from plugins (Quick renderer) with data set #17
 [x] Tests from plugins (Quick renderer) with data set #18
 [x] Tests from plugins (Quick renderer) with data set #19
 [x] Tests from plugins (Quick renderer) with data set #20
 [x] Tests from plugins (Quick renderer) with data set #21
 [x] Tests from plugins (Quick renderer) with data set #22
 [x] Tests from plugins (Quick renderer) with data set #23
 [x] Tests from plugins (Quick renderer) with data set #24
 [x] Tests from plugins (Quick renderer) with data set #25
 [x] Tests from plugins (Quick renderer) with data set #26
 [x] Tests from plugins (Quick renderer) with data set #27
 [x] Tests from plugins (Quick renderer) with data set #28
 [x] Tests from plugins (Quick renderer) with data set #29
 [x] Tests from plugins (Quick renderer) with data set #30
 [x] Tests from plugins (Quick renderer) with data set #31
 [x] Tests from plugins (Quick renderer) with data set #32
 [x] Tests from plugins (Quick renderer) with data set #33
 [x] Tests from plugins (Quick renderer) with data set #34
 [x] Tests from plugins (Quick renderer) with data set #35
 [x] Tests from plugins (Quick renderer) with data set #36
 [x] Tests from plugins (Quick renderer) with data set #37
 [x] Tests from plugins (Quick renderer) with data set #38
 [x] Tests from plugins (Quick renderer) with data set #39
 [x] Tests from plugins (Quick renderer) with data set #40
 [x] Tests from plugins (Quick renderer) with data set #41
 [x] Tests from plugins (Quick renderer) with data set #42
 [x] Tests from plugins (Quick renderer) with data set #43
 [x] Tests from plugins (Quick renderer) with data set #44
 [x] Tests from plugins (Quick renderer) with data set #45
 [x] Tests from plugins (Quick renderer) with data set #46
 [x] Tests from plugins (Quick renderer) with data set #47
 [x] Tests from plugins (Quick renderer) with data set #48
 [x] Tests from plugins (Quick renderer) with data set #49
 [x] Tests from plugins (Quick renderer) with data set #50
 [x] Tests from plugins (Quick renderer) with data set #51
 [x] Tests from plugins (Quick renderer) with data set #52
 [x] Tests from plugins (Quick renderer) with data set #53
 [x] Tests from plugins (Quick renderer) with data set #54
 [x] Tests from plugins (Quick renderer) with data set #55
 [x] Tests from plugins (Quick renderer) with data set #56
 [x] Tests from plugins (Quick renderer) with data set #57
 [x] Tests from plugins (Quick renderer) with data set #58
 [x] Tests from plugins (Quick renderer) with data set #59
 [x] Tests from plugins (Quick renderer) with data set #60
 [x] Tests from plugins (Quick renderer) with data set #61
 [x] Tests from plugins (Quick renderer) with data set #62
 [x] Tests from plugins (Quick renderer) with data set #63
 [x] Tests from plugins (Quick renderer) with data set #64
 [x] Tests from plugins (Quick renderer) with data set #65
 [x] Tests from plugins (Quick renderer) with data set #66
 [x] Tests from plugins (Quick renderer) with data set #67
 [x] Tests from plugins (Quick renderer) with data set #68
 [x] Tests from plugins (Quick renderer) with data set #69
 [x] Tests from plugins (Quick renderer) with data set #70
 [x] Tests from plugins (Quick renderer) with data set #71
 [x] Tests from plugins (Quick renderer) with data set #72
 [x] Tests from plugins (Quick renderer) with data set #73
 [x] Tests from plugins (Quick renderer) with data set #74
 [x] Tests from plugins (Quick renderer) with data set #75
 [x] Tests from plugins (Quick renderer) with data set #76
 [x] Tests from plugins (Quick renderer) with data set #77
 [x] Tests from plugins (Quick renderer) with data set #78
 [x] Tests from plugins (Quick renderer) with data set #79
 [x] Tests from plugins (Quick renderer) with data set #80
 [x] Tests from plugins (Quick renderer) with data set #81
 [x] Tests from plugins (Quick renderer) with data set #82
 [x] Tests from plugins (Quick renderer) with data set #83
 [x] Tests from plugins (Quick renderer) with data set #84
 [x] Tests from plugins (Quick renderer) with data set #85
 [x] Tests from plugins (Quick renderer) with data set #86
 [x] Tests from plugins (Quick renderer) with data set #87
 [x] Tests from plugins (Quick renderer) with data set #88
 [x] Tests from plugins (Quick renderer) with data set #89
 [x] Tests from plugins (Quick renderer) with data set #90
 [x] Tests from plugins (Quick renderer) with data set #91
 [x] Tests from plugins (Quick renderer) with data set #92
 [x] Tests from plugins (Quick renderer) with data set #93
 [x] Tests from plugins (Quick renderer) with data set #94
 [x] Tests from plugins (Quick renderer) with data set #95
 [x] Tests from plugins (Quick renderer) with data set #96
 [x] Tests from plugins (Quick renderer) with data set #97
 [x] Tests from plugins (Quick renderer) with data set #98
 [x] Tests from plugins (Quick renderer) with data set #99
 [x] Tests from plugins (Quick renderer) with data set #100
 [x] Tests from plugins (Quick renderer) with data set #101
 [x] Tests from plugins (Quick renderer) with data set #102
 [x] Tests from plugins (Quick renderer) with data set #103
 [x] Tests from plugins (Quick renderer) with data set #104
 [x] Tests from plugins (Quick renderer) with data set #105
 [x] Tests from plugins (Quick renderer) with data set #106
 [x] Tests from plugins (Quick renderer) with data set #107
 [x] Tests from plugins (Quick renderer) with data set #108
 [x] Tests from plugins (Quick renderer) with data set #109
 [x] Tests from plugins (Quick renderer) with data set #110
 [x] Tests from plugins (Quick renderer) with data set #111
 [x] Tests from plugins (Quick renderer) with data set #112
 [x] Tests from plugins (Quick renderer) with data set #113
 [x] Tests from plugins (Quick renderer) with data set #114
 [x] Tests from plugins (Quick renderer) with data set #115
 [x] Tests from plugins (Quick renderer) with data set #116
 [x] Tests from plugins (Quick renderer) with data set #117
 [x] Tests from plugins (Quick renderer) with data set #118
 [x] Tests from plugins (Quick renderer) with data set #119
 [x] Tests from plugins (Quick renderer) with data set #120
 [x] Tests from plugins (Quick renderer) with data set #121
 [x] Tests from plugins (Quick renderer) with data set #122
 [x] Tests from plugins (Quick renderer) with data set #123
 [x] Tests from plugins (Quick renderer) with data set #124
 [x] Tests from plugins (Quick renderer) with data set #125
 [x] Tests from plugins (Quick renderer) with data set #126
 [x] Tests from plugins (Quick renderer) with data set #127
 [x] Tests from plugins (Quick renderer) with data set #128
 [x] Tests from plugins (Quick renderer) with data set #129
 [x] Tests from plugins (Quick renderer) with data set #130
 [x] Tests from plugins (Quick renderer) with data set #131
 [x] Tests from plugins (Quick renderer) with data set #132
 [x] Tests from plugins (Quick renderer) with data set #133
 [x] Tests from plugins (Quick renderer) with data set #134
 [x] Tests from plugins (Quick renderer) with data set #135
 [x] Tests from plugins (Quick renderer) with data set #136
 [x] Tests from plugins (Quick renderer) with data set #137
 [x] Tests from plugins (Quick renderer) with data set #138
 [x] Tests from plugins (Quick renderer) with data set #139
 [x] Tests from plugins (Quick renderer) with data set #140
 [x] Tests from plugins (Quick renderer) with data set #141
 [x] Tests from plugins (Quick renderer) with data set #142
 [x] Tests from plugins (Quick renderer) with data set #143
 [x] Tests from plugins (Quick renderer) with data set #144
 [x] Tests from plugins (Quick renderer) with data set #145
 [x] Tests from plugins (Quick renderer) with data set #146
 [x] Tests from plugins (Quick renderer) with data set #147
 [x] Tests from plugins (Quick renderer) with data set #148
 [x] Tests from plugins (Quick renderer) with data set #149
 [x] Tests from plugins (Quick renderer) with data set #150
 [x] Tests from plugins (Quick renderer) with data set #151
 [x] Tests from plugins (Quick renderer) with data set #152
 [x] Tests from plugins (Quick renderer) with data set #153
 [x] Tests from plugins (Quick renderer) with data set #154
 [x] Tests from plugins (Quick renderer) with data set #155
 [x] Tests from plugins (Quick renderer) with data set #156
 [x] Tests from plugins (Quick renderer) with data set #157
 [x] Tests from plugins (Quick renderer) with data set #158
 [x] Tests from plugins (Quick renderer) with data set #159
 [x] Tests from plugins (Quick renderer) with data set #160
 [x] Tests from plugins (Quick renderer) with data set #161
 [x] Tests from plugins (Quick renderer) with data set #162
 [x] Tests from plugins (Quick renderer) with data set #163
 [x] Tests from plugins (Quick renderer) with data set #164
 [x] Tests from plugins (Quick renderer) with data set #165
 [x] Tests from plugins (Quick renderer) with data set #166
 [x] Tests from plugins (Quick renderer) with data set #167
 [x] Tests from plugins (Quick renderer) with data set #168
 [x] Tests from plugins (Quick renderer) with data set #169
 [x] Tests from plugins (Quick renderer) with data set #170
 [x] Tests from plugins (Quick renderer) with data set #171
 [x] Tests from plugins (Quick renderer) with data set #172
 [x] Tests from plugins (Quick renderer) with data set #173
 [x] Tests from plugins (Quick renderer) with data set #174
 [x] Tests from plugins (Quick renderer) with data set #175
 [x] Tests from plugins (Quick renderer) with data set #176
 [x] Tests from plugins (Quick renderer) with data set #177
 [x] Tests from plugins (Quick renderer) with data set #178
 [x] Tests from plugins (Quick renderer) with data set #179
 [x] Tests from plugins (Quick renderer) with data set #180
 [x] Tests from plugins (Quick renderer) with data set #181
 [x] Tests from plugins (Quick renderer) with data set #182
 [x] Tests from plugins (Quick renderer) with data set #183
 [x] Tests from plugins (Quick renderer) with data set #184
 [x] Tests from plugins (Quick renderer) with data set #185
 [x] Tests from plugins (Quick renderer) with data set #186
 [x] Tests from plugins (Quick renderer) with data set #187
 [x] Tests from plugins (Quick renderer) with data set #188
 [x] Tests from plugins (Quick renderer) with data set #189
 [x] Tests from plugins (Quick renderer) with data set #190
 [x] Tests from plugins (Quick renderer) with data set #191
 [x] Tests from plugins (Quick renderer) with data set #192
 [x] Tests from plugins (Quick renderer) with data set #193
 [x] Tests from plugins (Quick renderer) with data set #194
 [x] Tests from plugins (Quick renderer) with data set #195
 [x] Tests from plugins (Quick renderer) with data set #196
 [x] Tests from plugins (Quick renderer) with data set #197
 [x] Tests from plugins (Quick renderer) with data set #198
 [x] Tests from plugins (Quick renderer) with data set #199
 [x] Tests from plugins (Quick renderer) with data set #200
 [x] Tests from plugins (Quick renderer) with data set #201
 [x] Tests from plugins (Quick renderer) with data set #202
 [x] Tests from plugins (Quick renderer) with data set #203
 [x] Tests from plugins (Quick renderer) with data set #204
 [x] Tests from plugins (Quick renderer) with data set #205
 [x] Tests from plugins (Quick renderer) with data set #206
 [x] Tests from plugins (Quick renderer) with data set #207
 [x] Tests from plugins (Quick renderer) with data set #208
 [x] Tests from plugins (Quick renderer) with data set #209
 [x] Tests from plugins (Quick renderer) with data set #210
 [x] Tests from plugins (Quick renderer) with data set #211
 [x] Tests from plugins (Quick renderer) with data set #212
 [x] Tests from plugins (Quick renderer) with data set #213
 [x] Tests from plugins (Quick renderer) with data set #214
 [x] Tests from plugins (Quick renderer) with data set #215
 [x] Tests from plugins (Quick renderer) with data set #216
 [x] Tests from plugins (Quick renderer) with data set #217
 [x] Tests from plugins (Quick renderer) with data set #218
 [x] Tests from plugins (Quick renderer) with data set #219
 [x] Tests from plugins (Quick renderer) with data set #220
 [x] Tests from plugins (Quick renderer) with data set #221
 [x] Tests from plugins (Quick renderer) with data set #222
 [x] Tests from plugins (Quick renderer) with data set #223
 [x] Tests from plugins (Quick renderer) with data set #224
 [x] Tests from plugins (Quick renderer) with data set #225
 [x] Tests from plugins (Quick renderer) with data set #226
 [x] Tests from plugins (Quick renderer) with data set #227
 [x] Tests from plugins (Quick renderer) with data set #228
 [x] Tests from plugins (Quick renderer) with data set #229
 [x] Tests from plugins (Quick renderer) with data set #230
 [x] Tests from plugins (Quick renderer) with data set #231
 [x] Tests from plugins (Quick renderer) with data set #232
 [x] Tests from plugins (Quick renderer) with data set #233
 [x] Tests from plugins (Quick renderer) with data set #234
 [x] Tests from plugins (Quick renderer) with data set #235
 [x] Tests from plugins (Quick renderer) with data set #236
 [x] Tests from plugins (Quick renderer) with data set #237
 [x] Tests from plugins (Quick renderer) with data set #238
 [x] Tests from plugins (Quick renderer) with data set #239
 [x] Tests from plugins (Quick renderer) with data set #240
 [x] Tests from plugins (Quick renderer) with data set #241
 [x] Tests from plugins (Quick renderer) with data set #242
 [x] Tests from plugins (Quick renderer) with data set #243
 [x] Tests from plugins (Quick renderer) with data set #244
 [x] Tests from plugins (Quick renderer) with data set #245
 [x] Tests from plugins (Quick renderer) with data set #246
 [x] Tests from plugins (Quick renderer) with data set #247
 [x] Tests from plugins (Quick renderer) with data set #248
 [x] Tests from plugins (Quick renderer) with data set #249
 [x] Tests from plugins (Quick renderer) with data set #250
 [x] Tests from plugins (Quick renderer) with data set #251
 [x] Tests from plugins (Quick renderer) with data set #252
 [x] Tests from plugins (Quick renderer) with data set #253
 [x] Tests from plugins (Quick renderer) with data set #254
 [x] Tests from plugins (Quick renderer) with data set #255
 [x] Tests from plugins (Quick renderer) with data set #256
 [x] Tests from plugins (Quick renderer) with data set #257
 [x] Tests from plugins (Quick renderer) with data set #258
 [x] Tests from plugins (Quick renderer) with data set #259
 [x] Tests from plugins (Quick renderer) with data set #260
 [x] Tests from plugins (Quick renderer) with data set #261
 [x] Tests from plugins (Quick renderer) with data set #262
 [x] Tests from plugins (Quick renderer) with data set #263
 [x] Tests from plugins (Quick renderer) with data set #264
 [x] Tests from plugins (Quick renderer) with data set #265
 [x] Tests from plugins (Quick renderer) with data set #266
 [x] Tests from plugins (Quick renderer) with data set #267
 [x] Tests from plugins (Quick renderer) with data set #268
 [x] Tests from plugins (Quick renderer) with data set #269
 [x] Tests from plugins (Quick renderer) with data set #270
 [x] Tests from plugins (Quick renderer) with data set #271
 [x] Tests from plugins (Quick renderer) with data set #272
 [x] Tests from plugins (Quick renderer) with data set #273
 [x] Tests from plugins (Quick renderer) with data set #274
 [x] Tests from plugins (Quick renderer) with data set #275
 [x] Tests from plugins (Quick renderer) with data set #276
 [x] Tests from plugins (Quick renderer) with data set #277
 [x] Tests from plugins (Quick renderer) with data set #278
 [x] Tests from plugins (Quick renderer) with data set #279
 [x] Tests from plugins (Quick renderer) with data set #280
 [x] Tests from plugins (Quick renderer) with data set #281
 [x] Tests from plugins (Quick renderer) with data set #282
 [x] Tests from plugins (Quick renderer) with data set #283
 [x] Tests from plugins (Quick renderer) with data set #284
 [x] Tests from plugins (Quick renderer) with data set #285
 [x] Tests from plugins (Quick renderer) with data set #286
 [x] Tests from plugins (Quick renderer) with data set #287
 [x] Tests from plugins (Quick renderer) with data set #288
 [x] Tests from plugins (Quick renderer) with data set #289
 [x] Tests from plugins (Quick renderer) with data set #290
 [x] Tests from plugins (Quick renderer) with data set #291
 [x] Tests from plugins (Quick renderer) with data set #292
 [x] Tests from plugins (Quick renderer) with data set #293
 [x] Tests from plugins (Quick renderer) with data set #294
 [x] Tests from plugins (Quick renderer) with data set #295
 [x] Tests from plugins (Quick renderer) with data set #296
 [x] Tests from plugins (Quick renderer) with data set #297
 [x] Tests from plugins (Quick renderer) with data set #298
 [x] Tests from plugins (Quick renderer) with data set #299
 [x] Tests from plugins (Quick renderer) with data set #300
 [x] Tests from plugins (Quick renderer) with data set #301
 [x] Tests from plugins (Quick renderer) with data set #302
 [x] Tests from plugins (Quick renderer) with data set #303
 [x] Creates a Quick renderer if $enableQuickRenderer is true
 [x] Does not create a Quick renderer if $enableQuickRenderer is false

Unformatted (s9e\TextFormatter\Tests\Configurator\RendererGenerators\Unformatted)
 [x] Returns an instance of Renderer

XSLT (s9e\TextFormatter\Tests\Configurator\RendererGenerators\XSLT)
 [x] Returns an instance of Renderer
 [x] Merges duplicate templates
 [x] Represents empty templates with a self-closing element
 [x] Generates the namespace declarations necessary for prefixed tags
 [x] Generates an exclude-result-prefixes directive for all the declared prefixes
 [x] Includes parameters in the stylesheet
 [x] Includes a parameter's default value in the stylesheet
 [x] escapes a parameter's default value
 [x] Merges simple templates together
 [x] Optimizes each template
 [x] Removes live preview attributes

Rendering (s9e\TextFormatter\Tests\Configurator\Rendering)
 [x] Default engine is XSLT
 [x] setEngine('PHP') sets the engine to a new instance of s9e\TextFormatter\Configurator\RendererGenerators\PHP
 [x] setEngine('PHP', '/tmp') creates a new instance of s9e\TextFormatter\Configurator\RendererGenerators\PHP passing '/tmp' to its constructor
 [x] setEngine() returns the new instance of RendererGenerator
 [x] getRenderer() invokes $this->engine->getRenderer()
 [x] getAllParameters() returns parameters that were formally defined
 [x] getAllParameters() returns parameters that are inferred from the templates
 [x] getAllParameters() returns parameters that were formally defined over those that are inferred from the templates
 [x] getTemplates() returns default templates for br and p and empty templates for i, e, s
 [x] getTemplates() returns templates gathered from tags

Rules Generator (s9e\TextFormatter\Tests\Configurator\RulesGenerator)
 [x] Implements ArrayAccess
 [x] Implements Iterator
 [x] Default rules with data set #0
 [x] Default rules with data set #1
 [x] Default rules with data set #2
 [x] Default rules with data set #3
 [x] Default rules with data set #4

Allow All (s9e\TextFormatter\Tests\Configurator\RulesGenerators\AllowAll)
 [x] <b> has a allowChild rule and a allowDescendant rule for <div>

Auto Close If Void (s9e\TextFormatter\Tests\Configurator\RulesGenerators\AutoCloseIfVoid)
 [x] Generates an autoClose rule for <hr/>
 [x] Does not generate an autoClose rule for <span>

Auto Reopen Formatting Elements (s9e\TextFormatter\Tests\Configurator\RulesGenerators\AutoReopenFormattingElements)
 [x] Generates an autoReopen rule for <b>
 [x] Does not generate an autoReopen rule for <div>
 [x] Does not generate an autoReopen rule for <div><b>

Block Elements Close Formatting Elements (s9e\TextFormatter\Tests\Configurator\RulesGenerators\BlockElementsCloseFormattingElements)
 [x] <div> has a closeParent rule for <b>
 [x] <div> does not have a closeParent rule for <div>
 [x] <b> does not have a closeParent rule for <b>

Block Elements Foster Formatting Elements (s9e\TextFormatter\Tests\Configurator\RulesGenerators\BlockElementsFosterFormattingElements)
 [x] <div> has a fosterParent rule for <b>
 [x] <div> does not have a fosterParent rule for <div>
 [x] <b> does not have a fosterParent rule for <b>
 [x] <div><br></div> does not have a fosterParent rule for <b>
 [x] <div><iframe></div> does not have a fosterParent rule for <b>

Disable Auto Line Breaks If New Lines Are Preserved (s9e\TextFormatter\Tests\Configurator\RulesGenerators\DisableAutoLineBreaksIfNewLinesArePreserved)
 [x] Does not generate a disableAutoLineBreaks rule for <ol>
 [x] Generates a disableAutoLineBreaks rule for <pre>

Enforce Content Models (s9e\TextFormatter\Tests\Configurator\RulesGenerators\EnforceContentModels)
 [x] <div> has an allowChild rule and an allowDescendant rule for <b>
 [x] <a> has no rules for <a>
 [x] <ol> has an allowDescendant rule and no allowChild rule for <div>
 [x] Generates an isTransparent rule for <a>
 [x] Generates an isTransparent rule for a template composed entirely of <xsl:apply-templates/>
 [x] Does not generate any boolean rules for <b>
 [x] Generates a disableAutoLineBreaks rule, a preventLineBreaks rule and a suspendAutoLineBreaks rule for <style>
 [x] Generates a breakParagraph, preventLineBreaks and suspendAutoLineBreaks rule for <ul>
 [x] <script> has no rules for <a>
 [x] A mixed inline/block template has no allowChild rule for <div>
 [x] A mixed inline/block template has an allowChild rule and an allowDescendant rule for <span>

Enforce Optional End Tags (s9e\TextFormatter\Tests\Configurator\RulesGenerators\EnforceOptionalEndTags)
 [x] <li> closes parent <li>
 [x] <ul> closes parent <p>
 [x] <p> does not close parent <li>

Ignore Tags In Code (s9e\TextFormatter\Tests\Configurator\RulesGenerators\IgnoreTagsInCode)
 [x] Generates an ignoreTags rule for <code><xsl:apply-templates/></code>
 [x] Generates an ignoreTags rule for <pre><code><xsl:apply-templates/></code></pre>
 [x] Does not generate an ignoreTags rule if <code> does not have an xsl:apply-templates descendant
 [x] Does not generate an ignoreTags rule for <b>

Ignore Text If Disallowed (s9e\TextFormatter\Tests\Configurator\RulesGenerators\IgnoreTextIfDisallowed)
 [x] Generates an ignoreText rule for <ul>
 [x] Does not generate an ignoreText rule for <b>

Ignore Whitespace Around Block Elements (s9e\TextFormatter\Tests\Configurator\RulesGenerators\IgnoreWhitespaceAroundBlockElements)
 [x] Generates a ignoreSurroundingWhitespace rule for <div>
 [x] Does not generate a ignoreSurroundingWhitespace rule for <span>

Manage Paragraphs (s9e\TextFormatter\Tests\Configurator\RulesGenerators\ManageParagraphs)
 [x] Generates a breakParagraph rule for <ol>
 [x] Does not generate any rules for <b>
 [x] Generates a breakParagraph and a createParagraphs rule for <blockquote>
 [x] Generates a breakParagraph rule but no createParagraphs rule for <p>

Trim First Line In Code Blocks (s9e\TextFormatter\Tests\Configurator\RulesGenerators\TrimFirstLineInCodeBlocks)
 [x] Generates a trimFirstLine rule for <pre><code><xsl:apply-templates/></code></pre>
 [x] Does not generate any rules for <pre><xsl:apply-templates/></pre>
 [x] Does not generate any rules for <pre><code></code></pre>

Template Checker (s9e\TextFormatter\Tests\Configurator\TemplateChecker)
 [x] Implements ArrayAccess
 [x] Implements Iterator
 [x] Disallows attribute sets by default
 [x] Disallows <xsl:copy/> by default
 [x] Disallows disabling output escaping by default
 [x] Disallows dynamic attribute names by default
 [x] Disallows dynamic element names by default
 [x] Disallows dynamic object param names by default
 [x] Disallows PHP tags by default
 [x] Disallows outputing PHP tags by default
 [x] Disallows potentially unsafe <xsl:copy-of/> by default
 [x] Disallows potentially unsafe dynamic CSS by default
 [x] Disallows potentially unsafe dynamic JS by default
 [x] Disallows potentially unsafe dynamic URLs by default
 [x] Disallows document() in XPath by default
 [x] Restricts Flash's allowScriptAccess to "sameDomain" (or lower) by default, in objects that use dynamic values
 [x] Disallows <sax:output/> by default
 [x] checkTag() doesn't do anything if the template is safe
 [x] checkTag() doesn't check templates that are marked as unsafe
 [x] Can be reset and reconfigured with different checks
 [x] disable() disables all checks
 [x] enable() re-enables all checks

Disallow Attribute Sets (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowAttributeSets)
 [x] Disallowed: <b use-attribute-sets="foo"/>
 [x] Allowed: <b>...</b>

Disallow Copy (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowCopy)
 [x] Disallowed: <b><xsl:copy/></b>
 [x] Allowed: <b>...</b>

Disallow Disable Output Escaping (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowDisableOutputEscaping)
 [x] Disallowed: <b disable-output-escaping="1"/>
 [x] Allowed: <b>...</b>

Disallow Dynamic Attribute Names (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowDynamicAttributeNames)
 [x] Disallowed: <b><xsl:attribute name="{@foo}"/></b>
 [x] Allowed: <b><xsl:attribute name="title"/></b>

Disallow Dynamic Element Names (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowDynamicElementNames)
 [x] Disallowed: <xsl:element name="{s}"/>
 [x] Allowed: <xsl:element name="b"/>

Disallow Element NS (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowElementNS)
 [x] DisallowElementNS('http://www.w3.org/2000/svg', 'svg') disallows <svg:svg xmlns:svg="http://www.w3.org/2000/svg"/>
 [x] DisallowElementNS('http://www.w3.org/2000/svg', 'svg') disallows <svg xmlns="http://www.w3.org/2000/svg"/>
 [x] DisallowElementNS('urn:foo', 'script') allows <b><script/></b>

Disallow Element (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowElement)
 [x] DisallowElement('script') disallows <b><script/></b>
 [x] DisallowElement('svg') disallows <svg:svg xmlns:svg="http://www.w3.org/2000/svg"/>
 [x] DisallowElement('script') allows <b><span/></b>
 [x] DisallowElement('script') disallows <b><SCRIPT/></b>
 [x] DisallowElement('script') disallows <b><xsl:element name="script"/></b>

Disallow Flash Full Screen (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowFlashFullScreen)
 [x] Disallows <embed allowFullScreen="true"/>
 [x] Allows <embed allowFullScreen="false"/>
 [x] Allows <embed/>
 [x] Disallows <embed allowFullScreen="unknown"/>
 [x] Disallows <embed allowFullScreen="{@foo}"/>
 [x] Disallows <embed allowFullScreen="false"><xsl:attribute name="allowFullScreen"/></embed>
 [x] Disallows <object><param name="allowFullScreen" value="true"/></object>
 [x] Allows <object><param name="allowFullScreen" value="false"/></object>
 [x] Allows <object/>
 [x] Disallows <object><param name="allowFullScreen" value="unknown"/></object>
 [x] Disallows <object><param name="allowFullScreen" value="{@foo}"/></object>
 [x] Disallows <object><param name="allowFullScreen" value="false"><xsl:attribute name="value">true</xsl:attribute></param></object>
 [x] DisallowFlashFullScreen(true) allows <embed allowFullScreen="true" src="http://example.com/example.swf"/>
 [x] DisallowFlashFullScreen(false) disallows <embed allowFullScreen="true" src="http://example.com/example.swf"/>
 [x] DisallowFlashFullScreen(true) disallows <embed allowFullScreen="true" src="{@url}"/>
 [x] DisallowFlashFullScreen(true) disallows <embed allowFullScreen="true"><xsl:copy-of select="@src"/></embed>
 [x] DisallowFlashFullScreen(true) allows <object><param name="allowFullScreen" value="true"/><param name="movie" value="http://example.com/example.swf"/></object>
 [x] DisallowFlashFullScreen(false) disallows <object><param name="allowFullScreen" value="true"/><param name="movie" value="http://example.com/example.swf"/></object>
 [x] DisallowFlashFullScreen(true) disallows <object><param name="allowFullScreen" value="true"/><param name="movie" value="{@url}"/></object>
 [x] DisallowFlashFullScreen(true) disallows <embed allowFullScreen="true"><xsl:apply-templates/></embed>

Disallow Node By XPath (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowNodeByXPath)
 [x] '//script[@src]' disallows <div><script src=""/></div>
 [x] '//script[@src]' allows <div><script/></div>

Disallow Object Params With Generated Name (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowObjectParamsWithGeneratedName)
 [x] Allowed: <object><param name="foo"/></object>
 [x] Disallowed: <object><param name="{@foo"/></object>
 [x] Disallowed: <object><param name="{@foo"/></object>

Disallow PHPTags (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowPHPTags)
 [x] Disallowed: <b><?php ?></b>
 [x] Disallowed: <b><?PHP ?></b>
 [x] Disallowed: <b><xsl:processing-instruction name="php"/></b>
 [x] Disallowed: <b><xsl:processing-instruction name="PHP"/></b>
 [x] Disallowed: <b><xsl:processing-instruction name="{@foo}"/></b>
 [x] Allowed: <b><?foo ?></b>
 [x] Allowed: <b><xsl:processing-instruction name="foo"/></b>
 [x] Allowed: <script>echo "sup";</script>
 [x] Disallowed: <script language="php">echo "sup";</script>
 [x] Disallowed: <script language="PHP">echo "sup";</script>

Disallow Uncompilable XSL (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowUncompilableXSL)
 [x] Allowed: <b>...</b>
 [x] Disallowed: <xsl:variable name="foo"/>
 [x] Allowed: <xsl:copy-of select="@foo"/>
 [x] Disallowed: <xsl:copy-of select="foo"/>
 [x] Allowed: <xsl:value-of select="string-length(@foo)"/>
 [x] Disallowed: <xsl:value-of select="document()"/>
 [x] Disallowed: <hr title="{foo()}"/>

Disallow Unsafe Copy Of (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowUnsafeCopyOf)
 [x] Allowed: <b><xsl:copy-of select="@title"/></b>
 [x] Allowed: <b><xsl:copy-of select="@data-title"/></b>
 [x] Allowed: <b><xsl:copy-of select="@data-title|@title"/></b>
 [x] Disallowed: <b><xsl:copy-of select="FOO"/></b>

Disallow Unsafe Dynamic CSS (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowUnsafeDynamicCSS)
 [x] Allowed: <style>.important { color:red }</style>
 [x] Allowed: <b style="color:red">...</b>
 [x] Allowed if #color: <b style="color:{@foo}">...</b>
 [x] Disallowed if unknown: <b style="color:{@foo}">...</b>
 [x] Disallowed if unfiltered: <b style="color:{@foo}">...</b>
 [x] Disallowed: <b style="color:{.}">...</b>
 [x] Allowed if #color: <b><xsl:copy-of select="@style"/>...</b>
 [x] Disallowed if unknown: <b><xsl:copy-of select="@style"/>...</b>
 [x] Disallowed if unfiltered: <b><xsl:copy-of select="@style"/>...</b>
 [x] Allowed if #color: <b><xsl:attribute name="style"><xsl:value-of select="@foo"/></xsl:attribute>...</b>
 [x] Disallowed if unknown: <b><xsl:attribute name="style"><xsl:value-of select="@foo"/></xsl:attribute>...</b>
 [x] Disallowed if unfiltered: <b><xsl:attribute name="style"><xsl:value-of select="@foo"/></xsl:attribute>...</b>
 [x] Disallowed if unfiltered: <b><xsl:attribute name="style"><xsl:value-of select="."/></xsl:attribute>...</b>
 [x] Disallowed: <b><xsl:attribute name="style"><xsl:apply-templates/></xsl:attribute>...</b>
 [x] Disallowed: <b><xsl:attribute name="style"><xsl:for-each select="//*"><xsl:value-of select="@foo"/></xsl:for-each></xsl:attribute>...</b>
 [x] Allowed: <b style="width:{0+@foo}px">...</b>

Disallow Unsafe Dynamic JS (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowUnsafeDynamicJS)
 [x] Allowed: <script>.important { alert(1) }</script>
 [x] Allowed: <b onclick="alert(1)">...</b>
 [x] Allowed if #number: <b onclick="alert({@foo})">...</b>
 [x] Disallowed if unknown: <b onclick="alert({@foo})">...</b>
 [x] Disallowed if unfiltered: <b onclick="alert({@foo})">...</b>
 [x] Disallowed: <b onclick="alert({.})">...</b>
 [x] Allowed if #number: <b><xsl:copy-of select="@onclick"/>...</b>
 [x] Disallowed if unknown: <b><xsl:copy-of select="@onclick"/>...</b>
 [x] Disallowed if unfiltered: <b><xsl:copy-of select="@onclick"/>...</b>
 [x] Allowed if #number: <b><xsl:attribute name="onclick"><xsl:value-of select="@foo"/></xsl:attribute>...</b>
 [x] Disallowed if unknown: <b><xsl:attribute name="onclick"><xsl:value-of select="@foo"/></xsl:attribute>...</b>
 [x] Disallowed if unfiltered: <b><xsl:attribute name="onclick"><xsl:value-of select="@foo"/></xsl:attribute>...</b>
 [x] Disallowed if unfiltered: <b><xsl:attribute name="onclick"><xsl:value-of select="."/></xsl:attribute>...</b>
 [x] Disallowed: <b><xsl:attribute name="onclick"><xsl:apply-templates/></xsl:attribute>...</b>
 [x] Disallowed: <b><xsl:attribute name="onclick"><xsl:for-each select="//*"><xsl:value-of select="@foo"/></xsl:for-each></xsl:attribute>...</b>
 [x] Allowed: <b onclick="this.style.width={0+@foo}">...</b>

Disallow Unsafe Dynamic URL (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowUnsafeDynamicURL)
 [x] Allowed: <a href="http://example.org">...</a>
 [x] Allowed if #url: <a href="{@foo}">...</a>
 [x] Allowed even if unknown: <a href="http://{@foo}">...</a>
 [x] Allowed even if unknown: <a href="//{@foo}">...</a>
 [x] Allowed even if unknown: <a href="user/{@foo}">...</a>
 [x] Allowed even if unknown: <a href="#{@foo}">...</a>
 [x] Allowed even if unknown: <a href="foo#{@foo}">...</a>
 [x] Allowed even if unknown: <a href="foo?{@foo}">...</a>
 [x] Disallowed if unknown: <a href="{@foo}">...</a>
 [x] Disallowed if unfiltered: <a href="{@foo}">...</a>
 [x] Disallowed if unfiltered: <a href="javascript:{@foo}">...</a>
 [x] Disallowed if unfiltered: <a href="JAVASCRIPT:{@foo}">...</a>
 [x] Disallowed if unfiltered: <a href="<TAB>javascript:{@foo}">...</a>
 [x] Disallowed if unfiltered: <a href="vbscript:{@foo}">...</a>
 [x] Disallowed if unfiltered: <a href="data:{@foo}">...</a>
 [x] Disallowed: <a href="{.}">...</a>
 [x] Allowed if #url: <a><xsl:copy-of select="@href"/>...</a>
 [x] Disallowed if unknown: <a><xsl:copy-of select="@href"/>...</a>
 [x] Disallowed if unfiltered: <a><xsl:copy-of select="@href"/>...</a>
 [x] Allowed if #url: <a><xsl:attribute name="href"><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Disallowed if unknown: <a><xsl:attribute name="href"><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Allowed even if unknown: <a><xsl:attribute name="href">http://<xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Disallowed if unknown: <a><xsl:attribute name="href"><xsl:choose><xsl:when test="@x">http://</xsl:when><xsl:otherwise>java</xsl:otherwise></xsl:choose><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Disallowed if unknown: <a><xsl:attribute name="href"><xsl:choose><xsl:when test="@x">http://</xsl:when></xsl:choose><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Allowed even if unknown: <a><xsl:attribute name="href"><xsl:choose><xsl:when test="@x">http://</xsl:when><xsl:otherwise>/</xsl:otherwise></xsl:choose><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Disallowed if unknown: <a><xsl:attribute name="href"><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Disallowed if unfiltered: <a><xsl:attribute name="href"><xsl:value-of select="@foo"/></xsl:attribute>...</a>
 [x] Disallowed if unfiltered: <a><xsl:attribute name="href"><xsl:value-of select="."/></xsl:attribute>...</a>
 [x] Disallowed: <a><xsl:attribute name="href"><xsl:apply-templates/></xsl:attribute>...</a>
 [x] Disallowed: <a><xsl:attribute name="href"><xsl:for-each select="//*"><xsl:value-of select="@foo"/></xsl:for-each></xsl:attribute>...</a>

Disallow Unsupported XSL (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowUnsupportedXSL)
 [x] Allowed: <b>...</b>
 [x] Disallowed: <xsl:message>..</xsl:message>
 [x] Allowed: <xsl:apply-templates/>
 [x] Disallowed: <xsl:apply-templates mode="unsupported"/>
 [x] Allowed: <xsl:copy-of select="@foo"/>
 [x] Disallowed: <xsl:copy-of/>
 [x] Allowed: <xsl:if test="@foo"/>
 [x] Disallowed: <xsl:if/>
 [x] Allowed: <xsl:value-of select="@foo"/>
 [x] Disallowed: <xsl:value-of/>
 [x] Allowed: <xsl:variable name="foo"/>
 [x] Disallowed: <xsl:variable/>
 [x] Allowed: <xsl:when test="@foo"/>
 [x] Disallowed: <xsl:when/>
 [x] Allowed: <xsl:value-of select="substring-after('foo()', &quot;bar()&quot;)"/>
 [x] Allowed: <xsl:value-of select="1-number(@foo)"/>
 [x] Disallowed: <xsl:value-of select="foo('bar')"/>
 [x] Disallowed: <hr title="{foo()}"/>
 [x] Allowed: <xsl:element name="{string(@name)}"/>
 [x] Disallowed: <xsl:element name="{foo(@name)}"/>
 [x] Allowed: <xsl:element name="x-div"/>
 [x] Allowed: <xsl:element name="x:div"/>
 [x] Disallowed: <xsl:element name="x div"/>
 [x] Disallowed: <xsl:element/>
 [x] Allowed: <b><xsl:attribute name="data-123foo"/></b>
 [x] Allowed: <b><xsl:attribute name="{@name}"/></b>
 [x] Disallowed: <b><xsl:attribute name="data foo"/></b>
 [x] Disallowed: <b><xsl:attribute name="12foo"/></b>
 [x] Disallowed: <xsl:attribute/>
 [x] Allowed: <xsl:if test="foo and (bar or (baz mod (1 + 1)))"/>

Disallow XPath Function (s9e\TextFormatter\Tests\Configurator\TemplateChecks\DisallowXPathFunction)
 [x] Disallowed: <xsl:value-of select="document(@foo)"/>
 [x] Disallowed: <xsl:value-of select="php:function()"/>
 [x] Disallowed: <xsl:value-of select="php : function()"/>
 [x] Disallowed: <b title="...{document()}"/>
 [x] Disallowed: <b title="...{ document () }"/>
 [x] Disallowed: <b title="...{ doc&#117;ment () }"/>
 [x] Disallowed: <b title="{concat(\'}\',document())}"/>
 [x] Allowed: <b title="document()"/>
 [x] Allowed: <b title="{&quot;document()&quot;}"/>

Restrict Flash Networking (s9e\TextFormatter\Tests\Configurator\TemplateChecks\RestrictFlashNetworking)
 [x] 'internal' disallows <embed allowNetworking="all"/>
 [x] 'internal' allows <embed allowNetworking="internal"/>
 [x] 'internal' allows <embed allowNetworking="none"/>
 [x] 'internal' disallows <embed/>
 [x] 'internal' disallows <embed allowNetworking="unknown"/>
 [x] 'internal' disallows <embed allowNetworking="{@foo}"/>
 [x] 'none' disallows <embed allowNetworking="all"/>
 [x] 'none' disallows <embed allowNetworking="internal"/>
 [x] 'none' allows <embed allowNetworking="none"/>
 [x] 'none' disallows <embed/>
 [x] 'internal' disallows <embed allowNetworking="internal"><xsl:attribute name="allowNetworking"/></embed>
 [x] 'internal' disallows <object><param name="allowNetworking" value="all"/></object>
 [x] 'internal' allows <object><param name="allowNetworking" value="all"/></object> if onlyIfDynamic is TRUE
 [x] 'internal' allows <object><param name="allowNetworking" value="internal"/></object>
 [x] 'internal' allows <object><param name="allowNetworking" value="none"/></object>
 [x] 'internal' disallows <object/>
 [x] 'internal' disallows <object><param name="allowNetworking" value="unknown"/></object>
 [x] 'internal' disallows <object><param name="allowNetworking" value="{@foo}"/></object>
 [x] 'internal' disallows <object><param name="allowNetworking" value="all"/></object>
 [x] 'internal' allows <object><param name="allowNetworking" value="internal"/></object>
 [x] 'internal' allows <object><param name="allowNetworking" value="none"/></object>
 [x] 'internal' disallows <object><param name="allowNetworking" value="unknown"/></object>
 [x] 'none' disallows <object><xsl:if><param name="allowNetworking" value="none"/></xsl:if></object>
 [x] 'none' disallows <object><param name="allowNetworking" value="none"><xsl:attribute name="value">all</xsl:attribute></param></object>
 [x] 'none',true allows <embed src="http://example.com/example.swf"/>
 [x] 'none',false disallows <embed src="http://example.com/example.swf"/>
 [x] 'none',true disallows <embed src="{@url}"/>
 [x] 'none',true disallows <embed><xsl:copy-of select="@src"/></embed>
 [x] 'none',true allows <object><param name="movie" value="http://example.com/example.swf"/></object>
 [x] 'none',false disallows <object><param name="movie" value="http://example.com/example.swf"/></object>
 [x] 'none',true disallows <object><param name="movie" value="{@url}"/></object>
 [x] 'none',true disallows <embed><xsl:apply-templates/></embed>

Restrict Flash Script Access (s9e\TextFormatter\Tests\Configurator\TemplateChecks\RestrictFlashScriptAccess)
 [x] 'sameDomain' disallows <embed allowScriptAccess="always"/>
 [x] 'sameDomain' allows <embed allowScriptAccess="sameDomain"/>
 [x] 'sameDomain' allows <embed allowScriptAccess="never"/>
 [x] 'sameDomain' allows <embed/>
 [x] 'sameDomain' disallows <embed allowScriptAccess="unknown"/>
 [x] 'sameDomain' disallows <embed allowScriptAccess="{@foo}"/>
 [x] 'never' disallows <embed allowScriptAccess="always"/>
 [x] 'never' disallows <embed allowScriptAccess="sameDomain"/>
 [x] 'never' allows <embed allowScriptAccess="never"/>
 [x] 'never' disallows <embed/>
 [x] Disallows <embed><xsl:attribute name="allowScriptAccess"/></embed>
 [x] 'sameDomain' disallows <object><param name="allowScriptAccess" value="always"/></object>
 [x] 'sameDomain' allows <object><param name="allowScriptAccess" value="sameDomain"/></object>
 [x] 'sameDomain' allows <object><param name="allowScriptAccess" value="never"/></object>
 [x] 'sameDomain' allows <object/>
 [x] 'sameDomain' disallows <object><param name="allowScriptAccess" value="unknown"/></object>
 [x] 'sameDomain' disallows <object><param name="allowScriptAccess" value="{@foo}"/></object>
 [x] 'sameDomain' disallows <object><param name="allowScriptAccess" value="always"/></object>
 [x] 'sameDomain' allows <object><param name="allowScriptAccess" value="sameDomain"/></object>
 [x] 'sameDomain' allows <object><param name="allowScriptAccess" value="never"/></object>
 [x] 'sameDomain' allows <object/>
 [x] 'sameDomain' disallows <object><param name="allowScriptAccess" value="unknown"/></object>
 [x] 'never' disallows <object><xsl:if><param name="allowScriptAccess" value="never"/></xsl:if></object>
 [x] 'never' disallows <object><param name="allowScriptAccess" value="never"><xsl:attribute name="value">always</xsl:attribute></param></object>
 [x] 'never',true allows <embed src="http://example.com/example.swf"/>
 [x] 'never',false disallows <embed src="http://example.com/example.swf"/>
 [x] 'never',true disallows <embed src="{@url}"/>
 [x] 'never',true disallows <embed><xsl:copy-of select="@src"/></embed>
 [x] 'never',true allows <object><param name="movie" value="http://example.com/example.swf"/></object>
 [x] 'never',false disallows <object><param name="movie" value="http://example.com/example.swf"/></object>
 [x] 'never',true disallows <object><param name="movie" value="{@url}"/></object>
 [x] 'never',true disallows <embed><xsl:apply-templates/></embed>

Abstract Normalization (s9e\TextFormatter\Tests\Configurator\AbstractNormalization)
 [x] Nothing happens if the normalization doesn't override any method or set any query
 [x] Nothing happens if the normalization doesn't override any method but set an element query
 [x] Nothing happens if the normalization doesn't override any method but set an attribute query
 [x] Nothing happens if the normalization doesn't override any method but selects a CData node
 [x] Nothing happens if the normalization doesn't override any method but selects a comment node
 [x] Calls normalizeAttribute() if an XPath query returns an attribute
 [x] Calls normalizeAttribute() if an XPath query returns a CDATA node
 [x] Calls normalizeComment() if an XPath query returns a comment node
 [x] Calls normalizeElement() if an XPath query returns an element
 [x] Nodes removed during normalization are not processed further
 [x] Can create text nodes
 [x] isXsl() differentiates between XSL elements and others
 [x] lowercase() works

Add Attribute Value To Elements (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\AddAttributeValueToElements)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4

Convert Curly Expressions In Text (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\ConvertCurlyExpressionsInText)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4

Custom (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\Custom)
 [x] normalize() calls the user-defined callback with a DOMElement as argument

Deoptimize If (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\DeoptimizeIf)
 [x] Works with data set #0

Enforce HTMLOmitted End Tags (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\EnforceHTMLOmittedEndTags)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6

Fix Unescaped Curly Braces In Html Attributes (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\FixUnescapedCurlyBracesInHtmlAttributes)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17
 [x] Works with data set #18
 [x] Works with data set #19
 [x] Works with data set #20

Fold Arithmetic Constants (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\FoldArithmeticConstants)
 [x] Ignores locale
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17
 [x] Works with data set #18
 [x] Works with data set #19
 [x] Works with data set #20
 [x] Works with data set #21
 [x] Works with data set #22
 [x] Works with data set #23
 [x] Works with data set #24
 [x] Works with data set #25
 [x] Works with data set #26
 [x] Works with data set #27
 [x] Works with data set #28
 [x] Works with data set #29
 [x] Works with data set #30
 [x] Works with data set #31
 [x] Works with data set #32

Fold Constant XPath Expressions (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\FoldConstantXPathExpressions)
 [x] Ignores locale
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17
 [x] Works with data set #18
 [x] Works with data set #19
 [x] Works with data set #20
 [x] Works with data set #21
 [x] Works with data set #22
 [x] Works with data set #23
 [x] Works with data set #24
 [x] Works with data set #25
 [x] Works with data set #26
 [x] Works with data set #27
 [x] Works with data set #28
 [x] Works with data set #29
 [x] Works with data set #30
 [x] Works with data set #31
 [x] Works with data set #32
 [x] Works with data set #33
 [x] Works with data set #34

Inline Attributes (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\InlineAttributes)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6

Inline CDATA (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\InlineCDATA)
 [x] Works with data set #0
 [x] Works with data set #1

Inline Elements (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\InlineElements)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3

Inline Inferred Values (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\InlineInferredValues)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4

Inline Text Elements (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\InlineTextElements)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8

Inline XPath Literals (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\InlineXPathLiterals)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11

Merge Consecutive Copy Of (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\MergeConsecutiveCopyOf)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4

Merge Identical Conditional Branches (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\MergeIdenticalConditionalBranches)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6

Minify Inline CSS (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\MinifyInlineCSS)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8

Minify XPath Expressions (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\MinifyXPathExpressions)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12

Normalize Attribute Names (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\NormalizeAttributeNames)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2

Normalize Element Names (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\NormalizeElementNames)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6

Normalize Urls (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\NormalizeUrls)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7

Optimize Choose Attributes (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeChooseAttributes)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6

Optimize Choose Dead Branches (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeChooseDeadBranches)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8

Optimize Choose (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeChoose)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17

Optimize Choose Text (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeChooseText)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8

Optimize Conditional Attributes (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeConditionalAttributes)
 [x] Works with data set #0
 [x] Works with data set #1

Optimize Conditional Value Of (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeConditionalValueOf)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4

Optimize Nested Conditionals (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\OptimizeNestedConditionals)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2

Preserve Single Spaces (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\PreserveSingleSpaces)
 [x] Works with data set #0
 [x] Works with data set #1

Remove Comments (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\RemoveComments)
 [x] Works with data set #0

Remove Inter Element Whitespace (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\RemoveInterElementWhitespace)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2

Remove Live Preview Attributes (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\RemoveLivePreviewAttributes)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5

Rename Live Preview Event (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\RenameLivePreviewEvent)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3

Set Attribute On Elements (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\SetAttributeOnElements)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4

Set Rel Noreferrer On Targeted Links (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\SetRelNoreferrerOnTargetedLinks)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6

Sort Attributes By Name (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\SortAttributesByName)
 [x] Works with data set #0

Transpose Comments (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\TransposeComments)
 [x] Works with data set #0
 [x] Works with data set #1

Uninline Attributes (s9e\TextFormatter\Tests\Configurator\TemplateNormalizations\UninlineAttributes)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9

Template Normalizer (s9e\TextFormatter\Tests\Configurator\TemplateNormalizer)
 [x] Implements ArrayAccess
 [x] Implements Iterator
 [x] Initializes the default list of normalizations if no argument is passed to the constructor
 [x] Uses the list of normalizations passed to the constructor
 [x] normalizeTag() calls each of the tag's template's normalize() method with itself as argument
 [x] normalizeTag() does not call normalize() if the template was already normalized
 [x] Default normalization rules with data set #0
 [x] Default normalization rules with data set #1
 [x] Default normalization rules with data set #2
 [x] Default normalization rules with data set #3
 [x] Default normalization rules with data set #4
 [x] Default normalization rules with data set #5
 [x] Default normalization rules with data set #6
 [x] Default normalization rules with data set #7
 [x] Default normalization rules with data set #8
 [x] Default normalization rules with data set #9
 [x] Default normalization rules with data set #10
 [x] Default normalization rules with data set #11
 [x] Default normalization rules with data set #12
 [x] Default normalization rules with data set #13
 [x] Default normalization rules with data set #14
 [x] Default normalization rules with data set #15
 [x] Default normalization rules with data set #16
 [x] Default normalization rules with data set #17
 [x] Default normalization rules with data set #18
 [x] Default normalization rules with data set #19
 [x] Default normalization rules with data set #20
 [x] Default normalization rules with data set #21
 [x] Default normalization rules with data set #22
 [x] Default normalization rules with data set #23
 [x] Default normalization rules with data set #24
 [x] Default normalization rules with data set #25
 [x] Default normalization rules with data set #26
 [x] Default normalization rules with data set #27
 [x] Default normalization rules with data set #28
 [x] Default normalization rules with data set #29
 [x] Default normalization rules with data set #30

Collection Proxy (s9e\TextFormatter\Tests\Configurator\Traits\CollectionProxy)
 [x] $proxy->add() gets forwarded to $proxy->collection->add() with all arguments
 [x] $proxy->add() returns the value returned by $proxy->collection->add()
 [x] $proxy->exists() gets forwarded to $proxy->collection->exists() with all arguments
 [x] $proxy->delete() gets forwarded to $proxy->collection->delete() with all arguments
 [x] $proxy->get() gets forwarded to $proxy->collection->get() with all arguments
 [x] $proxy->get() returns the value returned by $proxy->collection->get()
 [x] $proxy->set() gets forwarded to $proxy->collection->set() with all arguments
 [x] $proxy->set() returns the value returned by $proxy->collection->set()
 [x] $proxy['foo'] returns $proxy->collection['foo']
 [x] $proxy['foo'] = 42 sets $proxy->collection['foo'] = 42
 [x] isset($proxy['foo']) returns isset($proxy->collection['foo'])
 [x] unset($proxy['foo']) calls unset($proxy->collection['foo'])
 [x] count($proxy) returns count($proxy->collection)
 [x] A collection proxy is iterable with foreach

Configurable (s9e\TextFormatter\Tests\Configurator\Traits\Configurable)
 [x] __get('foo') calls getFoo() if it exists
 [x] __get($k) returns the property if it exists
 [x] __get() throws a RuntimeException if the property does not exist
 [x] __get($k) returns null if the property is null
 [x] __set('foo', 'bar') calls setFoo('bar') if it exists
 [x] __set() can create new properties
 [x] __set() can replace an instance of Foo with another instance of Foo
 [x] __set() can replace an instance of Foo with an instance of FooPlus, which extends Foo
 [x] __set() throws an exception if an instance of Foo would be replaced by an instance of Bar
 [x] __set() can replace a scalar value with a value of the same type
 [x] __set() can replace a scalar value with another scalar value if it can be losslessly cast to the same type
 [x] __set() can replace a boolean value by changing the string "true" to boolean true
 [x] __set() can replace a boolean value by changing the string "false" to boolean false
 [x] __set() throws an exception if a scalar value would be overwritten by a scalar value that cannot be losslessly cast to the same type
 [x] __set() will clear and repopulate a NormalizedCollection rather than overwrite it
 [x] __set() throws an exception if a NormalizedCollection would be overwritten by a non-array, non-Traversable value
 [x] __isset('foo') calls issetFoo() if it exists
 [x] __isset($k) returns true if the property exists
 [x] __unset('foo') calls unsetFoo() if it exists
 [x] __unset('foo') calls unsetFoo() even if the property does not exist
 [x] __unset('foo') calls $this->foo->clear() if it's an instance of Collection
 [x] __unset('foo') has no effect unsetFoo() does not exist and the the property is not set
 [x] __unset('foo') throws an exception if unsetFoo() does not exist and the property is set

Template Safeness (s9e\TextFormatter\Tests\Configurator\Traits\TemplateSafeness)
 [x] isSafeAsURL() returns false by default
 [x] isSafeAsURL() returns true if markAsSafeAsURL() was called
 [x] isSafeInCSS() returns false by default
 [x] isSafeInCSS() returns true if markAsSafeInCSS() was called
 [x] isSafeInJS() returns false by default
 [x] isSafeInJS() returns true if markAsSafeInJS() was called
 [x] markAsSafeAsURL() is chainable
 [x] markAsSafeInCSS() is chainable
 [x] markAsSafeInJS() is chainable
 [x] resetSafeness() resets the contexts marked as safe
 [x] resetSafeness() is chainable

Url Config (s9e\TextFormatter\Tests\Configurator\UrlConfig)
 [x] asConfig() returns a Regexp instance for disallowedHosts
 [x] Disallowed IDNs are punycoded
 [x] disallowHost('example.org') disallows "example.org"
 [x] disallowHost('example.org') disallows "EXAMPLE.ORG"
 [x] disallowHost('example.org') disallows "www.example.org"
 [x] disallowHost('example.org') does not disallow "myexample.org"
 [x] disallowHost('example.org', false) does not disallow "www.example.org"
 [x] disallowHost('*.example.org') disallows "www.example.org"
 [x] disallowHost('*.example.org') disallows "www.xxx.example.org"
 [x] disallowHost('*.example.org') does not disallow "example.org"
 [x] disallowHost('*.example.org') does not disallow "example.org.org"
 [x] disallowHost('*xxx*') disallows "xxx.com"
 [x] disallowHost('*xxx*') disallows "foo.xxx"
 [x] disallowHost('*xxx*') disallows "myxxxsite.com"
 [x] restrictHost('example.org') allows "www.example.org"
 [x] restrictHost('example.org', false) does not allow "www.example.org"
 [x] "http" is an allowed scheme by default
 [x] "https" is an allowed scheme by default
 [x] "HTTPS" is an allowed scheme by default
 [x] "ftp" is not an allowed scheme by default
 [x] getAllowedSchemes() returns an array containing all the allowed schemes
 [x] disallowScheme() removes a scheme from the list of allowed schemes
 [x] allowScheme('ftp') allows "ftp" as scheme
 [x] allowScheme('<invalid>') throws an exception
 [x] allowScheme('javascript') throws an exception
 [x] allowScheme('javaScript') throws an exception

Attribute Name (s9e\TextFormatter\Tests\Configurator\Validators\AttributeName)
 [x] normalize() throws an InvalidArgumentException if the name is invalid
 [x] "url" is normalized to "url"
 [x] "URL" is normalized to "url"
 [x] "_url" is normalized to "_url"
 [x] "md5" is normalized to "md5"
 [x] "5md" is invalid (name must start with a letter or an underscore)
 [x] "" is invalid (name must start with a letter or an underscore)
 [x] "xmlns" is invalid ('xmlns' is reserved)
 [x] "data-src" is normalized to "data-src"
 [x] "foo:bar" is invalid (no colons allowed)
 [x] "foo\n" is invalid (no newlines allowed)

Tag Name (s9e\TextFormatter\Tests\Configurator\Validators\TagName)
 [x] normalize() throws an InvalidArgumentException if the name is invalid
 [x] "b" is normalized to "B"
 [x] "B" is normalized to "B"
 [x] "_b" is normalized to "_B"
 [x] "H1" is normalized to "H1"
 [x] "-H" is invalid (name must start with a letter or an underscore)
 [x] "1H" is invalid (name must start with a letter or an underscore)
 [x] "" is invalid (name must start with a letter or an underscore)
 [x] "foo-bar" is normalized to "FOO-BAR"
 [x] "foo#bar" is invalid (no pound sign allowed)
 [x] "foo:bar" is normalized to "foo:bar"
 [x] ":bar" is invalid (empty prefix)
 [x] "_foo:bar" is normalized to "_foo:bar"
 [x] "Foo:bar" is normalized to "Foo:bar"
 [x] "f00:b4r" is normalized to "f00:b4r"
 [x] "foo_bar:baz" is normalized to "foo_bar:baz"
 [x] "7up:foo" is invalid (prefix must start with a letter)
 [x] "foo:bar:baz" is invalid (only one colon allowed)
 [x] "xmlns:foo" is invalid ('xmlns' prefix is reserved)
 [x] "xsl:foo" is invalid ('xsl' prefix is reserved)
 [x] "s9e:foo" is invalid ('s9e' prefix is reserved)
 [x] "B\n" is invalid (no newlines allowed)

Template Parameter Name (s9e\TextFormatter\Tests\Configurator\Validators\TemplateParameterName)
 [x] normalize() throws an InvalidArgumentException if the name is invalid
 [x] "foo" is normalized to "foo"
 [x] "Foo" is normalized to "Foo"
 [x] "*" is invalid (name must start with a letter or an underscore)
 [x] "foo:bar" is invalid (name can only contain letters, digits, dashes and underscores)
 [x] "foo\n" is invalid (no newlines allowed)

Configurator (s9e\TextFormatter\Tests\Configurator)
 [x] $configurator->attributeFilters is an instance of AttributeFilterCollection
 [x] $configurator->bundleGenerator is an instance of BundleGenerator
 [x] $configurator->javascript unset by default
 [x] $configurator->enableJavaScript() creates an instance of JavaScript stored in $configurator->javascript
 [x] $configurator->enableJavaScript() does not overwrite the current instance of the JavaScript object
 [x] $configurator->plugins is an instance of PluginCollection
 [x] $configurator->registeredVars is a publicly accessible array
 [x] $configurator->rendering is an instance of Rendering
 [x] $configurator->rootRules is an instance of Ruleset
 [x] $configurator->rulesGenerator is an instance of RulesGenerator
 [x] $configurator->tags is an instance of TagCollection
 [x] $configurator->templateChecker is an instance of TemplateChecker
 [x] $configurator->templateNormalizer is an instance of TemplateNormalizer
 [x] asConfig() does not call finalize() before retrieving the plugins' config
 [x] asConfig() returns an array with a rootContext element
 [x] asConfig() returns an array with a registeredVars element that contains urlConfig
 [x] asConfig() returns all registeredVars including empty arrays
 [x] asConfig() adds regexpLimit to the plugin's configuration if it's not specified and the plugin has a regexp
 [x] asConfig() removes regexpLimit from the plugin's configuration if it does not have a regexp
 [x] asConfig() adds quickMatch to the plugin's configuration if available
 [x] asConfig() omits a plugin's quickMatch if it's false
 [x] asConfig() adds allowedChildren and allowedDescendants bitfields to each tag
 [x] Removes JavaScript-specific data from tag filters
 [x] Removes JavaScript-specific data from attribute filters
 [x] $configurator->BBCodes returns an instance of the BBCodes plugin's configurator, and loads it if applicable
 [x] isset($configurator->BBCodes) returns whether the BBCodes plugin is loaded
 [x] unset($configurator->BBCodes) unloads the BBCodes plugin
 [x] Setting $configurator->Foo adds Foo to the plugins collection
 [x] isset($configurator->foo) returns false if the var "foo" is not registered
 [x] isset($configurator->foo) returns true if $configurator->registeredVars['foo'] exists
 [x] $configurator->foo returns $configurator->registeredVars['foo'] if it exists
 [x] $configurator->foo throws an exception if $configurator->registeredVars['foo'] does not exist
 [x] unset($configurator->foo) unsets $configurator->registeredVars['foo']
 [x] Setting $configurator->foo sets $this->configurator->registeredVars['foo']
 [x] finalize() adds root rules
 [x] finalize() adds tag rules
 [x] finalize() does not overwrite boolean tag rules
 [x] loadBundle('../Invalid') throws an exception
 [x] loadBundle('Forum') adds the Forum bundle's configuration
 [x] saveBundle('Foo', '/tmp/foo') saves a bundle Foo to /tmp/foo
 [x] saveBundle() returns true on success
 [x] saveBundle() returns false on failure
 [x] finalize() returns a parser and a renderer
 [x] finalize() does not return a JS parser by default
 [x] finalize() returns a JS parser if JavaScript was enabled
 [x] finalize() calls each plugin's finalize()
 [x] finalize() calls each plugin's finalize() once, even if JavaScript is enabled

Alnum Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\AlnumFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4

Color Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\ColorFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] Filter with data set #6
 [x] Filter with data set #7
 [x] Filter with data set #8
 [x] Filter with data set #9
 [x] Filter with data set #10
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5
 [x] J s filter with data set #6
 [x] J s filter with data set #7
 [x] J s filter with data set #8
 [x] J s filter with data set #9
 [x] J s filter with data set #10

Email Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\EmailFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] J s filter with data set #0
 [x] J s filter with data set #1

False Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\FalseFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] J s filter with data set #0
 [x] J s filter with data set #1

Fontfamily Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\FontfamilyFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] Filter with data set #6
 [x] Filter with data set #7
 [x] Filter with data set #8
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5
 [x] J s filter with data set #6
 [x] J s filter with data set #7
 [x] J s filter with data set #8

Hashmap Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\HashmapFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3

Identifier Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\IdentifierFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2

Map Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\MapFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2

Network Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\NetworkFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] Filter with data set #6
 [x] Filter with data set #7
 [x] Filter with data set #8
 [x] Filter with data set #9
 [x] Filter with data set #10
 [x] Filter with data set #11
 [x] Filter with data set #12
 [x] Filter with data set #13
 [x] Filter with data set #14
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5
 [x] J s filter with data set #6
 [x] J s filter with data set #7
 [x] J s filter with data set #8
 [x] J s filter with data set #9
 [x] J s filter with data set #10
 [x] J s filter with data set #11
 [x] J s filter with data set #12
 [x] J s filter with data set #13
 [x] J s filter with data set #14

Numeric Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\NumericFilter)
 [x] Regression tests with data set #0
 [x] Regression tests with data set #1
 [x] Regression tests with data set #2
 [x] Regression tests with data set #3
 [x] Regression tests with data set #4
 [x] Regression tests with data set #5
 [x] Regression tests with data set #6
 [x] Regression tests with data set #7
 [x] Regression tests with data set #8
 [x] Regression tests with data set #9
 [x] Regression tests with data set #10
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] Filter with data set #6
 [x] Filter with data set #7
 [x] Filter with data set #8
 [x] Filter with data set #9
 [x] Filter with data set #10
 [x] Filter with data set #11
 [x] Filter with data set #12
 [x] Filter with data set #13
 [x] Filter with data set #14
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5
 [x] J s filter with data set #6
 [x] J s filter with data set #7
 [x] J s filter with data set #8
 [x] J s filter with data set #9
 [x] J s filter with data set #10
 [x] J s filter with data set #11
 [x] J s filter with data set #12
 [x] J s filter with data set #13
 [x] J s filter with data set #14

Range Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\RangeFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5

Regexp Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\RegexpFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] J s filter with data set #0
 [x] J s filter with data set #1

Simpletext Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\SimpletextFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2

Timestamp Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\TimestampFilter)
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] Filter with data set #6
 [x] Filter with data set #7
 [x] Filter with data set #8
 [x] Filter with data set #9
 [x] Filter with data set #10
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5
 [x] J s filter with data set #6
 [x] J s filter with data set #7
 [x] J s filter with data set #8
 [x] J s filter with data set #9
 [x] J s filter with data set #10

Url Filter (s9e\TextFormatter\Tests\Parser\AttributeFilters\UrlFilter)
 [x] filterUrl() can be called without a logger
 [x] sanitizeUrl() tests with data set #0
 [x] sanitizeUrl() tests with data set #1
 [x] sanitizeUrl() tests with data set #2
 [x] sanitizeUrl() tests with data set #3
 [x] sanitizeUrl() tests with data set #4
 [x] sanitizeUrl() tests with data set #5
 [x] sanitizeUrl() tests with data set #6
 [x] sanitizeUrl() tests with data set #7
 [x] sanitizeUrl() tests with data set #8
 [x] sanitizeUrl() tests with data set #9
 [x] sanitizeUrl() tests with data set #10
 [x] sanitizeUrl() tests with data set #11
 [x] sanitizeUrl() tests with data set #12
 [x] sanitizeUrl() tests with data set #13
 [x] sanitizeUrl() tests with data set #14
 [x] sanitizeUrl() tests with data set #15
 [x] sanitizeUrl() tests with data set #16
 [x] Filter with data set #0
 [x] Filter with data set #1
 [x] Filter with data set #2
 [x] Filter with data set #3
 [x] Filter with data set #4
 [x] Filter with data set #5
 [x] Filter with data set #6
 [x] Filter with data set #7
 [x] Filter with data set #8
 [x] Filter with data set #9
 [x] Filter with data set #10
 [x] Filter with data set #11
 [x] Filter with data set #12
 [x] Filter with data set #13
 [x] Filter with data set #14
 [x] Filter with data set #15
 [x] Filter with data set #16
 [x] Filter with data set #17
 [x] Filter with data set #18
 [x] Filter with data set #19
 [x] Filter with data set #20
 [x] Filter with data set #21
 [x] Filter with data set #22
 [x] Filter with data set #23
 [x] Filter with data set #24
 [x] Filter with data set #25
 [x] Filter with data set #26
 [x] Filter with data set #27
 [x] Filter with data set #28
 [x] Filter with data set #29
 [x] Filter with data set #30
 [x] Filter with data set #31
 [x] Filter with data set #32
 [x] Filter with data set #33
 [x] Filter with data set #34
 [x] Filter with data set #35
 [x] Filter with data set #36
 [x] Filter with data set #37
 [x] Filter with data set #38
 [x] Filter with data set #39
 [x] Filter with data set #40
 [x] Filter with data set #41
 [x] Filter with data set #42
 [x] Filter with data set #43
 [x] Filter with data set #44
 [x] Filter with data set #45
 [x] Filter with data set #46
 [x] Filter with data set #47
 [x] Filter with data set #48
 [x] Filter with data set #49
 [x] Filter with data set #50
 [x] Filter with data set #51
 [x] Filter with data set #52
 [x] Filter with data set #53
 [x] Filter with data set #54
 [x] Filter with data set #55
 [x] Filter with data set #56
 [x] Filter with data set #57
 [x] Filter with data set #58
 [x] Filter with data set #59
 [x] Filter with data set #60
 [x] Filter with data set #61
 [x] Filter with data set #62
 [x] J s filter with data set #0
 [x] J s filter with data set #1
 [x] J s filter with data set #2
 [x] J s filter with data set #3
 [x] J s filter with data set #4
 [x] J s filter with data set #5
 [x] J s filter with data set #6
 [x] J s filter with data set #7
 [x] J s filter with data set #8
 [x] J s filter with data set #9
 [x] J s filter with data set #10
 [x] J s filter with data set #11
 [x] J s filter with data set #12
 [x] J s filter with data set #13
 [x] J s filter with data set #14
 [x] J s filter with data set #15
 [x] J s filter with data set #16
 [x] J s filter with data set #17
 [x] J s filter with data set #18
 [x] J s filter with data set #19
 [x] J s filter with data set #20
 [x] J s filter with data set #21
 [x] J s filter with data set #22
 [x] J s filter with data set #23
 [x] J s filter with data set #24
 [x] J s filter with data set #25
 [x] J s filter with data set #26
 [x] J s filter with data set #27
 [x] J s filter with data set #28
 [x] J s filter with data set #29
 [x] J s filter with data set #30
 [x] J s filter with data set #31
 [x] J s filter with data set #32
 [x] J s filter with data set #33
 [x] J s filter with data set #34
 [x] J s filter with data set #35
 [x] J s filter with data set #36
 [x] J s filter with data set #37
 [x] J s filter with data set #38
 [x] J s filter with data set #39
 [x] J s filter with data set #40
 [x] J s filter with data set #41
 [x] J s filter with data set #42
 [x] J s filter with data set #43
 [x] J s filter with data set #44
 [x] J s filter with data set #45
 [x] J s filter with data set #46
 [x] J s filter with data set #47
 [x] J s filter with data set #48
 [x] J s filter with data set #49
 [x] J s filter with data set #50
 [x] J s filter with data set #51
 [x] J s filter with data set #52
 [x] J s filter with data set #53
 [x] J s filter with data set #54
 [x] J s filter with data set #55
 [x] J s filter with data set #56
 [x] J s filter with data set #57
 [x] J s filter with data set #58
 [x] J s filter with data set #59
 [x] J s filter with data set #60
 [x] J s filter with data set #61
 [x] J s filter with data set #62

Filter Processing (s9e\TextFormatter\Tests\Parser\FilterProcessing)
 [x] executeAttributePreprocessors() sets captured attributes on match
 [x] executeAttributePreprocessors() does not overwrite attributes that were already set
 [x] executeAttributePreprocessors() does not unset the source attribute on match
 [x] executeAttributePreprocessors() can overwrite the source attribute on match
 [x] executeAttributePreprocessors() does not unset the source attribute if there's no match
 [x] executeAttributePreprocessors() returns TRUE even if no source attribute was present
 [x] executeAttributePreprocessors() does nothing if none were set
 [x] executeFilter() correctly passes a value to the callback
 [x] executeFilter() correctly passes a named var to the callback
 [x] executeFilter() correctly passes a var passed through registeredVars to the callback
 [x] executeFilter() passes NULL to the callback if a variable is missing
 [x] filterTag() executes the tag's filterChain
 [x] filterTag() stops executing the tag's filterChain if a filter invalidates the tag
 [x] filterTag() calls the logger's setTag() and unsetTag() methods
 [x] filterTag() passes the Parser instance to tag filters via the 'parser' parameter
 [x] filterTag() can pass the list of open tags to tag filters via the 'openTags' parameter
 [x] filterTag() can pass the text being parsed via the 'text' parameter
 [x] filterTag() passes computed values innerText, outerText and tagText
 [x] filterAttributes() removes the tag's attributes if none were configured
 [x] filterAttributes() removes undefined attributes
 [x] filterAttributes() executes every filter of an attribute's filterChain and returns the value
 [x] filterAttributes() stops executing the attribute's filterChain and invalidates the tag if a an attribute filter returns FALSE
 [x] filterAttributes() removes invalid attributes
 [x] filterAttributes() replaces invalid attributes with their defaultValue if applicable
 [x] filterAttributes() adds missing attributes with their defaultValue if applicable
 [x] filterAttributes() calls the logger's setAttribute() and unsetAttribute() methods for each attribute with a filterChain

Functional (s9e\TextFormatter\Tests\Parser\Functional)
 [x] Functional tests with data set #0
 [x] Functional tests with data set #1
 [x] Functional tests (JavaScript) with data set #0
 [x] Functional tests (JavaScript) with data set #1

Logger (s9e\TextFormatter\Tests\Parser\Logger)
 [x] debug() generates a "debug" entry in the logs
 [x] err() generates a "err" entry in the logs
 [x] info() generates a "info" entry in the logs
 [x] warn() generates a "warn" entry in the logs
 [x] The attribute name set by setAttribute() is added to the context if no 'attrName' element is provided
 [x] The attribute name set by setAttribute() is not added to the context if an 'attrName' element is provided
 [x] unsetAttribute() unsets the value stored by setAttribute()
 [x] The tag set by setTag() is added to the context if no 'tag' element is provided
 [x] The tag set by setTag() is not added to the context if a 'tag' element is provided
 [x] unsetTag() unsets the value stored by setTag()
 [x] clear() empties the logs

Output Handling (s9e\TextFormatter\Tests\Parser\OutputHandling)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17
 [x] Works with data set #18
 [x] Works with data set #19
 [x] Works with data set #20
 [x] Works with data set #21
 [x] Works with data set #22
 [x] Works with data set #23
 [x] Works with data set #24
 [x] Works with data set #25
 [x] Works with data set #26
 [x] Works with data set #27
 [x] Works with data set #28
 [x] Works with data set #29
 [x] Works with data set #30
 [x] Works with data set #31
 [x] Works with data set #32
 [x] Works with data set #33
 [x] Works with data set #34
 [x] Works with data set #35
 [x] Works with data set #36
 [x] Works with data set #37
 [x] Works with data set #38

Plugins Handling (s9e\TextFormatter\Tests\Parser\PluginsHandling)
 [x] disablePlugin() disables given plugin
 [x] disablePlugin() does not have side-effects due to references
 [x] enablePlugin() re-enables a disabled plugin
 [x] Nothing happens if disablePlugin() is called for an inexistent plugin
 [x] Nothing happens if enablePlugin() is called for an inexistent plugin
 [x] executePluginParsers() executes plugins' parse() method
 [x] executePluginParsers() does not execute disabled plugins
 [x] executePluginParsers() executes a plugin if its quickMatch test passes
 [x] executePluginParsers() does not execute a plugin if its quickMatch test fails
 [x] executePluginParsers() executes a plugin if its regexp test passes
 [x] executePluginParsers() does not execute a plugin if its regexp test fails
 [x] executePluginParsers() passes the text and the matches to the plugin's parser
 [x] executePluginParsers() executes a plugin with the first regexpLimit number of matches if the number of matches exceeds regexpLimit
 [x] executePluginParsers() creates an instance of the class name stored in className if present
 [x] registerParser() can register a callback that replaces the parser of an existing plugin
 [x] registerParser() can register a callback that acts as the parser of a new plugin
 [x] registerParser() throws an exception if its second argument is not callable
 [x] registerParser() accepts a regexp
 [x] registerParser() accepts a limit

Rules Handling (s9e\TextFormatter\Tests\Parser\RulesHandling)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17
 [x] Works with data set #18
 [x] Works with data set #19
 [x] Works with data set #20
 [x] Works with data set #21
 [x] Works with data set #22
 [x] Works with data set #23
 [x] Works with data set #24
 [x] Works with data set #25
 [x] Works with data set #26

Tag Processing (s9e\TextFormatter\Tests\Parser\TagProcessing)
 [x] Works with data set #0
 [x] Works with data set #1
 [x] Works with data set #2
 [x] Works with data set #3
 [x] Works with data set #4
 [x] Works with data set #5
 [x] Works with data set #6
 [x] Works with data set #7
 [x] Works with data set #8
 [x] Works with data set #9
 [x] Works with data set #10
 [x] Works with data set #11
 [x] Works with data set #12
 [x] Works with data set #13
 [x] Works with data set #14
 [x] Works with data set #15
 [x] Works with data set #16
 [x] Works with data set #17
 [x] Works with data set #18
 [x] Works with data set #19
 [x] Works with data set #20
 [x] Works with data set #21
 [x] Works with data set #22
 [x] Works with data set #23
 [x] Works with data set #24
 [x] Works with data set #25
 [x] Works with data set #26
 [x] Works with data set #27
 [x] Works with data set #28
 [x] Works with data set #29
 [x] Works with data set #30
 [x] Works with data set #31
 [x] Works with data set #32
 [x] Works with data set #33
 [x] Works with data set #34
 [x] Works with data set #35
 [x] Works with data set #36
 [x] Works with data set #37
 [x] Works with data set #38
 [x] Works with data set #39
 [x] Works with data set #40
 [x] Works with data set #41
 [x] Works with data set #42
 [x] Works with data set #43
 [x] Works with data set #44
 [x] Works with data set #45
 [x] Works with data set #46
 [x] Works with data set #47
 [x] Works with data set #48
 [x] Works with data set #49
 [x] Works with data set #50
 [x] Works with data set #51
 [x] Works with data set #52
 [x] Works with data set #53
 [x] Works with data set #54
 [x] Works with data set #55
 [x] Works with data set #56
 [x] Works with data set #57
 [x] Works with data set #58
 [x] Works with data set #59
 [x] Works with data set #60
 [x] Works with data set #61
 [x] Works with data set #62
 [x] Works with data set #63
 [x] Works with data set #64
 [x] Works with data set #65
 [x] Works with data set #66
 [x] Works with data set #67
 [x] Works with data set #68
 [x] Works with data set #69
 [x] Works with data set #70
 [x] Works with data set #71
 [x] Works with data set #72
 [x] Works with data set #73
 [x] Works with data set #74
 [x] Works with data set #75
 [x] Works with data set #76
 [x] Works with data set #77
 [x] Works with data set #78
 [x] Works with data set #79
 [x] Works with data set #80
 [x] Works with data set #81
 [x] Works with data set #82
 [x] Works with data set #83
 [x] Works with data set #84
 [x] Works with data set #85
 [x] Works with data set #86
 [x] Works with data set #87
 [x] JavaScript tests with data set #0
 [x] JavaScript tests with data set #1

Tag Stack (s9e\TextFormatter\Tests\Parser\TagStack)
 [x] addStartTag() adds a start tag to the stack
 [x] addEndTag() adds an end tag to the stack
 [x] addSelfClosingTag() adds a self-closing tag to the stack
 [x] addStartTag() returns the newly added tag
 [x] addStartTag() does not add anything to the stack if the tag name does not exist but it returns an invalidated tag
 [x] addStartTag() does not add the created tag to the stack if the tag has been disabled
 [x] addStartTag() does not add anything to the stack if the position is negative but it returns an invalidated tag
 [x] addStartTag() does not add anything to the stack if the length is negative but it returns an invalidated tag
 [x] addTagPair() creates both a start tag and an end tag of the same name, paired together
 [x] addTagPair() returns the newly-created start tag
 [x] addBrTag() adds a zero-width, self-closing "br" tag to the stack then returns it
 [x] addIgnoreTag() adds a self-closing "i" tag to the stack then returns it
 [x] addParagraphBreak() adds a zero-width, self-closing "pb" tag to the stack then returns it
 [x] addCopyTag() adds a copy of given tag at given position and given length
 [x] addCopyTag() copies the original tag's attributes
 [x] addCopyTag() copies the original tag's sort priority
 [x] addCopyTag() can set a different sort priority
 [x] sortTags() sorts tags by position descending (tags processed in text order)
 [x] sortTags() tiebreaker sorts tag that start at the same position by sortPriority descending (-10 is processed before 10)
 [x] sortTags() tiebreaker sorts zero-width tags after longer tags at the same position with the same priority (zero-width tags are processed first)
 [x] sortTags() tiebreaker sorts zero-width end tags after zero width start tag (end tags get the opportunity to close their parent before a new tag is open)
 [x] sortTags() tiebreaker sorts zero-width self-closing tags between zero-width start tags and zero-width end tags (attempting to keep them outside of tag pairs)
 [x] sortTags() tiebreaker sorts tags by length ascending (longer tags processed first)
 [x] sortTags() last tiebreaker keeps tags in FIFO order
 [x] Tags occupying the same position are properly sorted regardless of the order they've been added
 [x] addBrTag() sets the tag's priority
 [x] addEndTag() sets the tag's priority
 [x] addIgnoreTag() sets the tag's priority
 [x] addParagraphBreak() sets the tag's priority
 [x] addSelfClosingTag() sets the tag's priority
 [x] addStartTag() sets the tag's priority
 [x] addTagPair() sets the start tag's priority to given value
 [x] addTagPair() sets the end tag's priority to minus the given value
 [x] addVerbatim() sets the tag's priority

Tag (s9e\TextFormatter\Tests\Parser\Tag)
 [x] getAttributes() returns the tag's attributes as an array
 [x] getEndTag() returns NULL if the tag has no end tag set
 [x] getPos() returns the tag's length (amount of text consumed)
 [x] getName() returns the tag's name
 [x] getPos() returns the tag's position
 [x] getSortPriority() returns the tag's sortPriority
 [x] getStartTag() returns NULL if the tag has no start tag set
 [x] getType() returns the tag's type
 [x] isInvalid() returns false by default
 [x] isBrTag() returns true if the tag's name is "br"
 [x] isBrTag() returns false by default
 [x] isIgnoreTag() returns true if the tag's name is "i"
 [x] isIgnoreTag() returns false by default
 [x] isParagraphBreak() returns true if the tag's name is "pb"
 [x] isParagraphBreak() returns false by default
 [x] isStartTag() returns true if the tag's type is Tag::START_TAG
 [x] isStartTag() returns true if the tag's type is Tag::END_TAG
 [x] isStartTag() returns true if the tag's type is Tag::SELF_CLOSING_TAG
 [x] isEndTag() returns false if the tag's type is Tag::START_TAG
 [x] isEndTag() returns true if the tag's type is Tag::END_TAG
 [x] isEndTag() returns true if the tag's type is Tag::SELF_CLOSING_TAG
 [x] isSelfClosingTag() returns false if the tag's type is Tag::START_TAG
 [x] isSelfClosingTag() returns false if the tag's type is Tag::END_TAG
 [x] isSelfClosingTag() returns true if the tag's type is Tag::SELF_CLOSING_TAG
 [x] isSystemTag() returns false by default
 [x] isSystemTag() returns true if the tag's name is "i"
 [x] isSystemTag() returns true if the tag's name is "br"
 [x] isSystemTag() returns true if the tag's name is "pb"
 [x] isVerbatim() returns true if the tag's name is "v"
 [x] isVerbatim() returns false by default
 [x] invalidate() makes isInvalid() return true
 [x] $tag1->cascadeInvalidationTo($tag2) causes $tag1->invalidate() to call $tag2->invalidate()
 [x] $tag1->cascadeInvalidationTo($tag2) does not cause $tag2->invalidate() to call $tag1->invalidate()
 [x] $tag1->cascadeInvalidationTo($tag2) immediately calls $tag2->invalidate() if $tag1 is invalid
 [x] Mutual invalidation doesn't cause an infinite loop
 [x] Invalidating a start tag automatically cascades to its paired tag
 [x] $tag1->pairWith($tag2) does not do anything if the tags have different names
 [x] $startTag->pairWith($endTag) does not do anything if $startTag's position is greater than $endTag's
 [x] $startTag->pairWith($endTag) sets $endTag->startTag if they share the same position
 [x] $startTag->pairWith($endTag) sets $endTag->startTag if $endTag's position is greater than $startTag's
 [x] $startTag->pairWith($endTag) sets $startTag->endTag if they share the same position
 [x] $startTag->pairWith($endTag) sets $startTag->endTag if $endTag's position is greater than $startTag's
 [x] $endTag->pairWith($startTag) sets $endTag->startTag if they share the same position
 [x] $endTag->pairWith($startTag) sets $endTag->startTag if $endTag's position is greater than $startTag's
 [x] $endTag->pairWith($startTag) sets $startTag->endTag if they share the same position
 [x] $endTag->pairWith($startTag) sets $startTag->endTag if $endTag's position is greater than $startTag's
 [x] Tag's sortPriority can be set in the constructor
 [x] setAttribute('foo', 'bar') sets attribute 'foo' to 'bar'
 [x] setAttribute() overwrites existing attributes
 [x] setAttributes() sets multiple attributes at once
 [x] setAttributes() removes all other attributes
 [x] getAttribute('foo') returns the value of attribute 'foo'
 [x] hasAttribute('foo') returns false if attribute 'foo' is not set
 [x] hasAttribute('foo') returns true if attribute 'foo' is set
 [x] removeAttribute('foo') unsets attribute 'foo'
 [x] canClose() returns FALSE if this tag is invalid
 [x] canClose() returns FALSE if the tag names don't match
 [x] canClose() returns FALSE if given tag is a self-closing tag
 [x] canClose() returns FALSE if given tag is an end tag
 [x] canClose() returns FALSE if this tag is a self-closing tag
 [x] canClose() returns FALSE if this tag is a start tag
 [x] canClose() returns FALSE if this tag's position is before given tag's
 [x] canClose() returns TRUE if this tag's position is the same as given tag's
 [x] canClose() returns TRUE if this tag's position is after given tag's
 [x] canClose() returns FALSE if given tag is paired with another tag
 [x] canClose() returns FALSE if this tag is paired with another tag
 [x] canClose() returns TRUE if the tags are paired together
 [x] setFlags() sets the tag's flags
 [x] getFlags() returns the tag's flags
 [x] addFlags() adds given flags to the tag's
 [x] removeFlags() removes given flags from the tag's
 [x] removeFlags() can be called on flags that haven't been set

Parser (s9e\TextFormatter\Tests\Parser)
 [x] Parser is serializable
 [x] Parser can be unserialized
 [x] getLogger() returns an instance of Logger
 [x] The logger is cleared before parsing a new text
 [x] getText() returns the last text that's been parsed
 [x] getText() returns the text, normalized
 [x] parse() returns the intermediate representation
 [x] parse() can be called multiple times in succession
 [x] parse() normalizes \r to \n
 [x] parse() normalizes \r\n to \n
 [x] parse() removes control characters that aren't allowed in XML from the input
 [x] parse() removes U+FFFE and U+FFFF from the input
 [x] parse() removes control characters that aren't allowed in XML from attribute values
 [x] parse() removes U+FFFE and U+FFFF from the attribute values
 [x] parse() throws an exception if the input isn't valid UTF-8
 [x] disableTag('FOO') disables tag 'FOO'
 [x] disableTag() does not have side-effects due to references
 [x] enableTag('FOO') re-enables tag 'FOO'
 [x] parse() throws an exception if the parser is reset during its execution
 [x] setTagLimit('X', 7) set tag X's tagLimit to 7 if it exists
 [x] setTagLimit() does not have side-effects due to references
 [x] setNestingLimit('X', 7) set tag X's tagLimit to 7 if it exists
 [x] setNestingLimit() does not have side-effects due to references
 [x] Characters outside Unicode's BMP are encoded
 [x] Attribute preprocessors are properly run with default config

Configurator (s9e\TextFormatter\Tests\Plugins\Autoemail\Configurator)
 [x] Automatically creates an "EMAIL" tag with an "email" attribute with a "#email" filter
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] Has a quickMatch
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] getTag() returns the tag that is associated with this plugin

Parser (s9e\TextFormatter\Tests\Plugins\Autoemail\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2

Configurator (s9e\TextFormatter\Tests\Plugins\Autoimage\Configurator)
 [x] Automatically creates an "IMG" tag with a "src" attribute with a "#url" filter
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] Has a quickMatch
 [x] The config array contains a regexp
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] getTag() returns the tag that is associated with this plugin
 [x] The JS parser contains both parser files

Parser (s9e\TextFormatter\Tests\Plugins\Autoimage\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2

Configurator (s9e\TextFormatter\Tests\Plugins\Autolink\Configurator)
 [x] Automatically creates an "URL" tag with an "url" attribute with a "#url" filter
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] The matchWww can be read
 [x] The matchWww can be written
 [x] Has a quickMatch if matchWww is disabled
 [x] Does not have a quickMatch if matchWww is enabled
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] The regexp matches the URL in 'foo http://www.bar.com baz'
 [x] The regexp matches the URL in 'FOO HTTP://WWW.BAR.COM BAZ'
 [x] The regexp matches the URL in 'foo http://www.bar.com/index.php?arr[foo]=1 baz'
 [x] The regexp matches the URL in 'foo [http://www.bar.com/index.php?foo=1] baz'
 [x] The regexp matches the URL in 'foo [http://www.bar.com/index.php?arr[foo]=1] baz'
 [x] getTag() returns the tag that is associated with this plugin

Parser (s9e\TextFormatter\Tests\Plugins\Autolink\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3

Configurator (s9e\TextFormatter\Tests\Plugins\Autovideo\Configurator)
 [x] Automatically creates a "VIDEO" tag with a "src" attribute with a "#url" filter
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] Has a quickMatch
 [x] The config array contains a regexp
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] getTag() returns the tag that is associated with this plugin
 [x] File extensions are configurable

Parser (s9e\TextFormatter\Tests\Plugins\Autovideo\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2

BBCodes (s9e\TextFormatter\Tests\Plugins\BBCodes\BBCodes)
 [x] Examples from BBCodeMonkey.md with data set #0
 [x] Examples from BBCodeMonkey.md with data set #1
 [x] Examples from BBCodeMonkey.md with data set #2
 [x] Examples from BBCodeMonkey.md with data set #3
 [x] Examples from BBCodeMonkey.md with data set #4
 [x] Examples from BBCodeMonkey.md with data set #5
 [x] BBCodes from repository.xml render nicely with data set #0
 [x] BBCodes from repository.xml render nicely with data set #1
 [x] BBCodes from repository.xml render nicely with data set #2
 [x] BBCodes from repository.xml render nicely with data set #3
 [x] BBCodes from repository.xml render nicely with data set #4
 [x] BBCodes from repository.xml render nicely with data set #5
 [x] BBCodes from repository.xml render nicely with data set #6
 [x] BBCodes from repository.xml render nicely with data set #7
 [x] BBCodes from repository.xml render nicely with data set #8
 [x] BBCodes from repository.xml render nicely with data set #9
 [x] BBCodes from repository.xml render nicely with data set #10
 [x] BBCodes from repository.xml render nicely with data set #11
 [x] BBCodes from repository.xml render nicely with data set #12
 [x] BBCodes from repository.xml render nicely with data set #13
 [x] BBCodes from repository.xml render nicely with data set #14
 [x] BBCodes from repository.xml render nicely with data set #15
 [x] BBCodes from repository.xml render nicely with data set #16
 [x] BBCodes from repository.xml render nicely with data set #17
 [x] BBCodes from repository.xml render nicely with data set #18
 [x] BBCodes from repository.xml render nicely with data set #19
 [x] BBCodes from repository.xml render nicely with data set #20
 [x] BBCodes from repository.xml render nicely with data set #21
 [x] BBCodes from repository.xml render nicely with data set #22
 [x] BBCodes from repository.xml render nicely with data set #23
 [x] BBCodes from repository.xml render nicely with data set #24
 [x] BBCodes from repository.xml render nicely with data set #25
 [x] BBCodes from repository.xml render nicely with data set #26
 [x] BBCodes from repository.xml render nicely with data set #27
 [x] BBCodes from repository.xml render nicely with data set #28
 [x] BBCodes from repository.xml render nicely with data set #29
 [x] BBCodes from repository.xml render nicely with data set #30
 [x] BBCodes from repository.xml render nicely with data set #31
 [x] BBCodes from repository.xml render nicely with data set #32
 [x] BBCodes from repository.xml render nicely with data set #33
 [x] BBCodes from repository.xml render nicely with data set #34
 [x] BBCodes from repository.xml render nicely with data set #35
 [x] BBCodes from repository.xml render nicely with data set #36
 [x] BBCodes from repository.xml render nicely with data set #37
 [x] BBCodes from repository.xml render nicely with data set #38
 [x] BBCodes from repository.xml render nicely with data set #39
 [x] BBCodes from repository.xml render nicely with data set #40
 [x] BBCodes from repository.xml render nicely with data set #41
 [x] BBCodes from repository.xml render nicely with data set #42
 [x] BBCodes from repository.xml render nicely with data set #43
 [x] BBCodes from repository.xml render nicely with data set #44
 [x] BBCodes from repository.xml render nicely with data set #45
 [x] BBCodes from repository.xml render nicely with data set #46
 [x] BBCodes from repository.xml render nicely with data set #47
 [x] BBCodes from repository.xml render nicely with data set #48
 [x] BBCodes from repository.xml render nicely with data set #49
 [x] BBCodes from repository.xml render nicely with data set #50
 [x] BBCodes from repository.xml render nicely with data set #51
 [x] BBCodes from repository.xml render nicely with data set #52
 [x] BBCodes from repository.xml render nicely with data set #53
 [x] BBCodes from repository.xml render nicely with data set #54
 [x] BBCodes from repository.xml render nicely with data set #55
 [x] BBCodes from repository.xml render nicely with data set #56
 [x] BBCodes from repository.xml render nicely with data set #57
 [x] BBCodes from repository.xml render nicely with data set #58
 [x] BBCodes from repository.xml render nicely with data set #59
 [x] BBCodes from repository.xml render nicely with data set #60
 [x] BBCodes from repository.xml render nicely with data set #61
 [x] BBCodes from repository.xml render nicely with data set #62
 [x] BBCodes from repository.xml render nicely with data set #63
 [x] BBCodes from repository.xml render nicely with data set #64
 [x] BBCodes from repository.xml render nicely with data set #65
 [x] BBCodes from repository.xml render nicely with data set #66
 [x] BBCodes from repository.xml render nicely with data set #67
 [x] BBCodes from repository.xml render nicely with data set #68
 [x] BBCodes from repository.xml render nicely with data set #69
 [x] BBCodes from repository.xml render nicely with data set #70
 [x] BBCodes from repository.xml render nicely with data set #71
 [x] BBCodes from repository.xml render nicely with data set #72
 [x] BBCodes from repository.xml render nicely with data set #73
 [x] BBCodes from repository.xml render nicely with data set #74
 [x] BBCodes from repository.xml render nicely with data set #75
 [x] BBCodes from repository.xml render nicely with data set #76
 [x] BBCodes from repository.xml render nicely with data set #77
 [x] BBCodes from repository.xml render nicely with data set #78
 [x] BBCodes from repository.xml render nicely with data set #79
 [x] BBCodes from repository.xml render nicely with data set #80
 [x] BBCodes from repository.xml render nicely with data set #81
 [x] BBCodes from repository.xml render nicely with data set #82
 [x] BBCodes from repository.xml render nicely with data set #83
 [x] BBCodes from repository.xml render nicely with data set #84
 [x] BBCodes from repository.xml render nicely with data set #85
 [x] BBCodes from repository.xml render nicely with data set #86
 [x] BBCodes from repository.xml render nicely with data set #87
 [x] BBCodes from repository.xml render nicely with data set #88
 [x] BBCodes from repository.xml render nicely with data set #89
 [x] BBCodes from repository.xml render nicely with data set #90
 [x] BBCodes from repository.xml render nicely with data set #91
 [x] BBCodes from repository.xml render nicely with data set #92
 [x] BBCodes from repository.xml render nicely with data set #93
 [x] BBCodes from repository.xml render nicely with data set #94
 [x] BBCodes from repository.xml render nicely with data set #95
 [x] BBCodes from repository.xml render nicely with data set #96
 [x] BBCodes from repository.xml render nicely with data set #97
 [x] BBCodes from repository.xml render nicely with data set #98
 [x] BBCodes from repository.xml render nicely with data set #99
 [x] BBCodes from repository.xml render nicely with data set #100
 [x] BBCodes from repository.xml render nicely with data set #101
 [x] BBCodes from repository.xml render nicely with data set #102
 [x] BBCodes from repository.xml render nicely with data set #103
 [x] BBCodes from repository.xml render nicely with data set #104
 [x] BBCodes from repository.xml render nicely with data set #105
 [x] BBCodes from repository.xml render nicely with data set #106
 [x] BBCodes from repository.xml render nicely with data set #107
 [x] BBCodes from repository.xml render nicely with data set #108
 [x] BBCodes from repository.xml render nicely with data set #109
 [x] BBCodes from repository.xml render nicely with data set #110
 [x] BBCodes from repository.xml render nicely with data set #111
 [x] BBCodes from repository.xml render nicely with data set #112
 [x] BBCodes from repository.xml render nicely with data set #113
 [x] BBCodes from repository.xml render nicely with data set #114
 [x] BBCodes from repository.xml render nicely with data set #115
 [x] BBCodes from repository.xml render nicely with data set #116
 [x] BBCodes from repository.xml render nicely with data set #117
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #0
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #1
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #2
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #3
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #4
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #5
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #6
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #7
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #8
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #9
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #10
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #11
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #12
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #13
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #14
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #15
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #16
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #17
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #18
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #19
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #20
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #21
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #22
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #23
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #24
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #25
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #26
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #27
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #28
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #29
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #30
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #31
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #32
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #33
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #34
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #35
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #36
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #37
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #38
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #39
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #40
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #41
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #42
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #43
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #44
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #45
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #46
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #47
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #48
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #49
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #50
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #51
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #52
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #53
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #54
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #55
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #56
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #57
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #58
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #59
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #60
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #61
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #62
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #63
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #64
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #65
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #66
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #67
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #68
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #69
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #70
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #71
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #72
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #73
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #74
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #75
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #76
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #77
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #78
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #79
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #80
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #81
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #82
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #83
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #84
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #85
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #86
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #87
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #88
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #89
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #90
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #91
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #92
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #93
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #94
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #95
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #96
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #97
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #98
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #99
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #100
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #101
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #102
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #103
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #104
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #105
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #106
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #107
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #108
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #109
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #110
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #111
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #112
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #113
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #114
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #115
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #116
 [x] BBCodes from repository.xml are parsed identically by the JavaScript parser with data set #117

BBCode Collection (s9e\TextFormatter\Tests\Plugins\BBCodes\Configurator\BBCodeCollection)
 [x] add() returns an instance of s9e\TextFormatter\Plugins\BBCodes\Configurator\BBCode
 [x] Instances of s9e\TextFormatter\Plugins\BBCodes\Configurator\BBCode are added as-is
 [x] add() normalizes the BBCode's name
 [x] delete() normalizes the BBCode's name
 [x] exists() normalizes the BBCode's name
 [x] get() normalizes the BBCode's name
 [x] set() normalizes the BBCode's name
 [x] asConfig() returns a Dictionary
 [x] asConfig() removes the defaultAttribute value of BBCodes where it is the same as the BBCode's name
 [x] asConfig() removes the tagName value of BBCodes where it is the same as the BBCode's name
 [x] Replaces duplicates by default
 [x] Throws an meaningful exception message when creating a BBCode that already exists
 [x] Throws an exception when accessing a BBCode that does not exist

BBCode Monkey (s9e\TextFormatter\Tests\Plugins\BBCodes\Configurator\BBCodeMonkey)
 [x] $bbcodeMonkey->allowedFilters is a publicly-accessible list of callbacks
 [x] create() creates and return a BBCode, its name and its tag
 [x] create() accepts an instance of UnsafeTemplate as second argument
 [x] create() tests with data set #0
 [x] create() tests with data set #1
 [x] create() tests with data set #2
 [x] create() tests with data set #3
 [x] create() tests with data set #4
 [x] create() tests with data set #5
 [x] create() tests with data set #6
 [x] create() tests with data set #7
 [x] create() tests with data set #8
 [x] create() tests with data set #9
 [x] create() tests with data set #10
 [x] create() tests with data set #11
 [x] create() tests with data set #12
 [x] create() tests with data set #13
 [x] create() tests with data set #14
 [x] create() tests with data set #15
 [x] create() tests with data set #16
 [x] create() tests with data set #17
 [x] create() tests with data set #18
 [x] create() tests with data set #19
 [x] create() tests with data set #20
 [x] create() tests with data set #21
 [x] create() tests with data set #22
 [x] create() tests with data set #23
 [x] create() tests with data set #24
 [x] create() tests with data set #25
 [x] create() tests with data set #26
 [x] create() tests with data set #27
 [x] create() tests with data set #28
 [x] create() tests with data set #29
 [x] create() tests with data set #30
 [x] create() tests with data set #31
 [x] create() tests with data set #32
 [x] create() tests with data set #33
 [x] create() tests with data set #34
 [x] create() tests with data set #35
 [x] create() tests with data set #36
 [x] create() tests with data set #37
 [x] create() tests with data set #38
 [x] create() tests with data set #39
 [x] create() tests with data set #40
 [x] create() tests with data set #41
 [x] create() tests with data set #42
 [x] create() tests with data set #43
 [x] create() tests with data set #44
 [x] create() tests with data set #45
 [x] create() tests with data set #46
 [x] create() tests with data set #47
 [x] create() tests with data set #48
 [x] create() tests with data set #49
 [x] create() tests with data set #50
 [x] create() tests with data set #51
 [x] create() tests with data set #52
 [x] create() tests with data set #53
 [x] create() tests with data set #54
 [x] create() tests with data set #55
 [x] create() tests with data set #56
 [x] create() tests with data set #57
 [x] create() tests with data set #58
 [x] create() tests with data set #59
 [x] create() tests with data set #60
 [x] create() tests with data set #61
 [x] create() tests with data set #62
 [x] create() tests with data set #63
 [x] create() tests with data set #64
 [x] create() tests with data set #65
 [x] create() tests with data set #66
 [x] create() tests with data set #67
 [x] create() tests with data set #68
 [x] create() tests with data set #69
 [x] create() tests with data set #70
 [x] create() tests with data set #71
 [x] create() tests with data set #72
 [x] create() tests with data set #73
 [x] create() tests with data set #74
 [x] create() tests with data set #75
 [x] create() tests with data set #76
 [x] create() tests with data set #77
 [x] create() tests with data set #78
 [x] create() tests with data set #79
 [x] create() tests with data set #80
 [x] create() tests with data set #81
 [x] create() tests with data set #82
 [x] create() tests with data set #83
 [x] create() tests with data set #84
 [x] create() tests with data set #85
 [x] create() tests with data set #86
 [x] create() tests with data set #87
 [x] create() tests with data set #88
 [x] create() tests with data set #89
 [x] create() tests with data set #90
 [x] create() tests with data set #91
 [x] create() tests with data set #92
 [x] create() tests with data set #93
 [x] create() tests with data set #94

BBCode (s9e\TextFormatter\Tests\Plugins\BBCodes\Configurator\BBCode)
 [x] An array of options can be passed to the constructor
 [x] BBCode::normalizeName('*') returns '*'
 [x] BBCode::normalizeName('foo') returns 'FOO'
 [x] BBCode::normalizeName('*invalid*') throws an exception
 [x] BBCode::normalizeName('a:b') throws an exception
 [x] defaultAttribute accepts an attribute name and normalizes it accordingly
 [x] tagName accepts a tag name and normalizes it accordingly
 [x] $bbcode->contentAttributes is an instance of AttributeList
 [x] asConfig() returns its set properties
 [x] asConfig() omits forceLookahead is it's FALSE

Repository Collection (s9e\TextFormatter\Tests\Plugins\BBCodes\Configurator\RepositoryCollection)
 [x] Instances of Repository are added as-is
 [x] Anything else gets a new instance of Repository to be created

Repository (s9e\TextFormatter\Tests\Plugins\BBCodes\Configurator\Repository)
 [x] __construct() accepts the path to an XML file as argument
 [x] __construct() accepts a DOMDocument as argument
 [x] __construct() throws an exception if passed anything else
 [x] __construct() throws an exception if passed the path to a file that is not valid XML
 [x] get() throws an exception if the BBCode is not in repository
 [x] get() normalizes the name before retrieval
 [x] Variables in <usage/> are replaced
 [x] Variables in <template/> are replaced
 [x] Multiple variables can be replaced
 [x] Variables that are not replaced are left intact
 [x] Variables are only replaced for current invocation
 [x] Custom tagName is correctly set
 [x] Rules targetting tags are correctly set
 [x] Boolean rules are set to their default value

Configurator (s9e\TextFormatter\Tests\Plugins\BBCodes\Configurator)
 [x] $plugin->bbcodeMonkey is a publicly-accessible instance of s9e\TextFormatter\Plugins\BBCodes\Configurator\BBCodeMonkey
 [x] Automatically loads its default BBCode repository
 [x] addFromRepository('B') adds BBCode B and its tag from the default repository
 [x] addFromRepository('MYBOLD', 'foo') adds BBCode B and its tag from the 'foo' repository
 [x] addFromRepository('B', 'foo', ['title' => 'bar']) adds BBCode B and its tag from the 'foo' repository with variable 'title' replaced with content 'bar'
 [x] addFromRepository('B', 'foo') throws an exception if repository 'foo' does not exist
 [x] addFromRepository() replaces the BBCode if it already exists
 [x] addFromRepository() replaces the tag if it already exists
 [x] addFromRepository() respects onDuplicate() setting on tags
 [x] addFromRepository() normalizes the tag's templates
 [x] addFromRepository() checks that the tag is safe before adding it
 [x] addFromRepository() returns the newly-created BBCode
 [x] addCustom() returns the newly-created BBCode
 [x] addCustom() accepts a single string as its second argument, representing the default template
 [x] addCustom() normalizes the tag's template
 [x] addCustom() checks that the tag is safe before adding it
 [x] addCustom() accepts a custom "tagName" in options
 [x] addCustom() accepts custom "rules" in options
 [x] asConfig() returns NULL if no BBCodes were created
 [x] Has a quickMatch
 [x] Generates a regexp for its config array
 [x] asConfig() returns BBCodes in a Dictionary

Parser (s9e\TextFormatter\Tests\Plugins\BBCodes\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests with data set #38
 [x] Parsing tests with data set #39
 [x] Parsing tests with data set #40
 [x] Parsing tests with data set #41
 [x] Parsing tests with data set #42
 [x] Parsing tests with data set #43
 [x] Parsing tests with data set #44
 [x] Parsing tests with data set #45
 [x] Parsing tests with data set #46
 [x] Parsing tests with data set #47
 [x] Parsing tests with data set #48
 [x] Parsing tests with data set #49
 [x] Parsing tests with data set #50
 [x] Parsing tests with data set #51
 [x] Parsing tests with data set #52
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing tests (JavaScript) with data set #38
 [x] Parsing tests (JavaScript) with data set #39
 [x] Parsing tests (JavaScript) with data set #40
 [x] Parsing tests (JavaScript) with data set #41
 [x] Parsing tests (JavaScript) with data set #42
 [x] Parsing tests (JavaScript) with data set #43
 [x] Parsing tests (JavaScript) with data set #44
 [x] Parsing tests (JavaScript) with data set #45
 [x] Parsing tests (JavaScript) with data set #46
 [x] Parsing tests (JavaScript) with data set #47
 [x] Parsing tests (JavaScript) with data set #48
 [x] Parsing tests (JavaScript) with data set #49
 [x] Parsing tests (JavaScript) with data set #50
 [x] Parsing tests (JavaScript) with data set #51
 [x] Parsing tests (JavaScript) with data set #52

Configurator (s9e\TextFormatter\Tests\Plugins\Censor\Configurator)
 [x] Automatically creates a "CENSOR" tag
 [x] Automatically creates a "with" attribute with required=false
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] asConfig() returns NULL if no words were added
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] Returns the replacements in its config in the form [[regexp, replacement]]
 [x] Words sharing the same replacement share a common regexp
 [x] Words using the default replacement do not appear in the replacements
 [x] asConfig() creates a Regexp object for the plugin's regexp
 [x] The JavaScript regexp does not contain atomic grouping
 [x] asConfig() creates Regexp objects for the regexps used in replacements
 [x] getTag() returns the tag that is associated with this plugin
 [x] getHelper() returns a configured instance of Helper
 [x] getHelper() returns an instance of Helper even if no words were added
 [x] add() does not throw an exception on duplicates
 [x] asConfig() does not return an entry for "allowed" by default
 [x] asConfig() returns an entry for "allowed" if any word was allowed with allow()
 [x] asConfig() returns NULL if all censored words are also on the allowed list
 [x] getJSHints() returns ['CENSOR_HAS_ALLOWED' => false] by default
 [x] getJSHints() returns ['CENSOR_HAS_ALLOWED' => true] if any replacement is set
 [x] getJSHints() returns ['CENSOR_HAS_REPLACEMENTS' => false] by default
 [x] getJSHints() returns ['CENSOR_HAS_REPLACEMENTS' => true] if any replacement is set

Helper (s9e\TextFormatter\Tests\Plugins\Censor\Helper)
 [x] censorHtml() censors text nodes in HTML
 [x] censorHtml() uses custom replacements
 [x] censorHtml() escapes custom replacements
 [x] censorHtml() does not replace HTML tag names
 [x] censorHtml() does not replace HTML tags
 [x] censorHtml() does not replace HTML attribute names
 [x] censorHtml() does not replace HTML attribute values by default
 [x] censorHtml() replaces HTML attribute values if its second argument is true
 [x] censorHtml() replaces text in quotes in text nodes and in attribute values
 [x] censorHtml() replaces text in quotes in text nodes without replacing attribute values
 [x] censorHtml() does not replace HTML entities
 [x] censorHtml() does not replace HTML numeric entities
 [x] censorHtml() censors special characters
 [x] censorHtml() censors special characters with the correct replacement
 [x] censorHtml() ignores words on the allowed list
 [x] censorText() censors plain text
 [x] censorText() uses custom replacements
 [x] censorText() ignores words on the allowed list
 [x] isCensored('word') returns TRUE if '*or*' is censored
 [x] isCensored('word') returns FALSE if '*xx*' is censored
 [x] isCensored('word') returns FALSE if '*or*' is censored and 'word' is allowed

Parser (s9e\TextFormatter\Tests\Plugins\Censor\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3

Configurator Base (s9e\TextFormatter\Tests\Plugins\ConfiguratorBase)
 [x] Constructor overwrites properties with values passed as second argument
 [x] Constructor calls setFoo() if 'foo' is being set
 [x] Constructor calls setUp()
 [x] Constructor calls setUp() after overwriting properties
 [x] An exception is thrown if an unknown property is being set by the constructor
 [x] Constructor normalizes custom attribute names
 [x] Constructor normalizes custom tag names
 [x] Constructor throws an exception if we attempt to set an attribute name but the property does not exist
 [x] Constructor throws an exception if we attempt to set a tag name but the property does not exist
 [x] getBaseProperties() returns the values of quickMatch and regexpLimit
 [x] getBaseProperties() returns a className value derived from the configurator's class
 [x] getBaseProperties() does not include a "js" element if getJSParser() returns null
 [x] getBaseProperties() includes a "js" element if getJSParser() returns a non-null value
 [x] setQuickMatch() sets the quickMatch property
 [x] setQuickMatch() throws an exception on non-strings
 [x] disableQuickMatch() sets the quickMatch property to false
 [x] setRegexpLimit() sets the regexpLimit property
 [x] setRegexpLimit() throws an exception on invalid values
 [x] Offers a default asConfig() implementation that leaves out the configurator instance
 [x] Has a default finalize() method that doesn't do anything
 [x] getJSParser() returns NULL for custom plugins
 [x] getJSParser() returns the content of Parser.js for stock plugins
 [x] getJSParser() returns NULL if there's no Parser.js for a stock plugin
 [x] getTag() returns the tag that is associated with this plugin
 [x] getTag() throws an exception if the plugin does not have a tagName property set
 [x] getJSHints() returns an empty array by default

Configurator (s9e\TextFormatter\Tests\Plugins\Emoji\Configurator)
 [x] Automatically creates an "EMOJI" tag
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The config array contains the name of the tag
 [x] The config array contains no entry for custom aliases if there are none
 [x] A variable named Emoji.aliases is registered and contains aliases
 [x] The config array contains a regexp for custom aliases if applicable
 [x] The custom aliases regexp handles aliases as bytes
 [x] The config array contains a quickMatch for custom aliases if applicable
 [x] The config array does not contain a quickMatch for aliases if impossible
 [x] Uses Twemoji by default
 [x] getJSHints() returns ['EMOJI_HAS_CUSTOM_REGEXP' => false] by default
 [x] getJSHints() returns ['EMOJI_HAS_CUSTOM_REGEXP' => true] if a custom regexp exists
 [x] getJSHints() returns ['EMOJI_HAS_CUSTOM_QUICKMATCH' => false] by default
 [x] getJSHints() returns ['EMOJI_HAS_CUSTOM_QUICKMATCH' => true] if an alias quick match exists

Parser (s9e\TextFormatter\Tests\Plugins\Emoji\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2

Emoticon Collection (s9e\TextFormatter\Tests\Plugins\Emoticons\Configurator\EmoticonCollection)
 [x] Normalizes HTML templates
 [x] Throws an exception when an invalid template is set
 [x] Replaces duplicates by default
 [x] Throws an meaningful exception message when creating an emoticon that already exists
 [x] Has a customized exception message on uninitialized access

Configurator (s9e\TextFormatter\Tests\Plugins\Emoticons\Configurator)
 [x] Automatically creates an "E" tag
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] set(':)', '<img src="e.png"/>') creates a :) emoticon that maps to <img src="e.png"/>
 [x] set(':)', '<img src="e.png">') creates a :) emoticon that maps to <img src="e.png"/>
 [x] Emoticons can contain single quotes
 [x] Emoticons can contain double quotes
 [x] Emoticons can contain both quotes at once
 [x] asConfig() returns NULL if no emoticons were set
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] asConfig() generates a quickMatch if applicable
 [x] $plugin->notAfter can be changed
 [x] The plugin's modified JavaScript regexp is correctly converted
 [x] The JavaScript regexp used for notAfter is correctly converted
 [x] $plugin->notBefore can be changed
 [x] $plugin->notAfter is removed from the JavaScript regexp and added separately to the config
 [x] The regexp has the Unicode modifier if notAfter contains a Unicode property
 [x] The regexp has the Unicode modifier if notBefore contains a Unicode property
 [x] finalize() sets the tag's template
 [x] getTag() returns the tag that is associated with this plugin
 [x] notIfCondition appears first in the template
 [x] getJSHints() returns ['EMOTICONS_NOT_AFTER' => 0] by default
 [x] getJSHints() returns ['EMOTICONS_NOT_AFTER' => 1] if notAfter is set

Parser (s9e\TextFormatter\Tests\Plugins\Emoticons\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4

Configurator (s9e\TextFormatter\Tests\Plugins\Escaper\Configurator)
 [x] By default only escapes the characters !#()*+-.:@[\]^_`{|}~
 [x] $plugin->escapeAll() makes it escape any Unicode character
 [x] $plugin->escapeAll(false) reverts to default escape list
 [x] Automatically creates an "ESC" tag
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] Has a quickMatch
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] getTag() returns the tag that is associated with this plugin

Parser (s9e\TextFormatter\Tests\Plugins\Escaper\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3

Configurator (s9e\TextFormatter\Tests\Plugins\FancyPants\Configurator)
 [x] Automatically creates a "FP" tag
 [x] Does not attempt to create a tag if it already exists
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] getTag() returns the tag that is associated with this plugin
 [x] The config array does not contain a disableQuotes value by default
 [x] The config array contains a disableQuotes value if the quote pass is disabled
 [x] The config array does not contain a disableQuotes value if the quote pass is re-enabled

Parser (s9e\TextFormatter\Tests\Plugins\FancyPants\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests with data set #38
 [x] Parsing tests with data set #39
 [x] Parsing tests with data set #40
 [x] Parsing tests with data set #41
 [x] Parsing tests with data set #42
 [x] Parsing tests with data set #43
 [x] Parsing tests with data set #44
 [x] Parsing tests with data set #45
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing tests (JavaScript) with data set #38
 [x] Parsing tests (JavaScript) with data set #39
 [x] Parsing tests (JavaScript) with data set #40
 [x] Parsing tests (JavaScript) with data set #41
 [x] Parsing tests (JavaScript) with data set #42
 [x] Parsing tests (JavaScript) with data set #43
 [x] Parsing tests (JavaScript) with data set #44
 [x] Parsing tests (JavaScript) with data set #45
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4
 [x] Parsing+rendering tests with data set #5
 [x] Parsing+rendering tests with data set #6
 [x] Parsing+rendering tests with data set #7
 [x] Parsing+rendering tests with data set #8
 [x] Parsing+rendering tests with data set #9
 [x] Parsing+rendering tests with data set #10
 [x] Parsing+rendering tests with data set #11
 [x] Parsing+rendering tests with data set #12
 [x] Parsing+rendering tests with data set #13
 [x] Parsing+rendering tests with data set #14
 [x] Parsing+rendering tests with data set #15
 [x] Parsing+rendering tests with data set #16
 [x] Parsing+rendering tests with data set #17
 [x] Parsing+rendering tests with data set #18
 [x] Parsing+rendering tests with data set #19
 [x] Parsing+rendering tests with data set #20
 [x] Parsing+rendering tests with data set #21
 [x] Parsing+rendering tests with data set #22
 [x] Parsing+rendering tests with data set #23
 [x] Parsing+rendering tests with data set #24
 [x] Parsing+rendering tests with data set #25
 [x] Parsing+rendering tests with data set #26
 [x] Parsing+rendering tests with data set #27
 [x] Parsing+rendering tests with data set #28
 [x] Parsing+rendering tests with data set #29
 [x] Parsing+rendering tests with data set #30
 [x] Parsing+rendering tests with data set #31

Configurator (s9e\TextFormatter\Tests\Plugins\HTMLComments\Configurator)
 [x] Automatically creates an "HC" tag
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] Has a quickMatch
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] getTag() returns the tag that is associated with this plugin

Parser (s9e\TextFormatter\Tests\Plugins\HTMLComments\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4
 [x] Parsing+rendering tests with data set #5
 [x] Parsing+rendering tests with data set #6
 [x] Parsing+rendering tests with data set #7

Configurator (s9e\TextFormatter\Tests\Plugins\HTMLElements\Configurator)
 [x] aliasElement('A', 'url') creates an alias for HTML element "a" to tag "URL"
 [x] aliasAttribute('A', 'HREF', 'URL') creates an alias for HTML attribute "href" in HTML element "a" to attribute "url"
 [x] allowElement('b') creates a tag named 'html:b'
 [x] allowElement('B') creates a tag named 'html:b'
 [x] allowElement() returns an instance of Tag
 [x] allowElement() can be called multiple times with the same element
 [x] The prefix can be customized at loading time through the 'prefix' property
 [x] allowElement('script') throws an exception
 [x] allowUnsafeElement('script') allows the 'script' element
 [x] allowUnsafeElement() returns an instance of Tag
 [x] allowAttribute('b', 'title') creates an attribute 'title' on tag 'html:b'
 [x] allowAttribute() returns an instance of Attribute
 [x] Attributes created by allowAttribute() are considered optional
 [x] Attributes that are known to expect an URL are created with the '#url' filter
 [x] allowAttribute('b', 'title') throws an exception if 'b' was not explicitly allowed
 [x] allowAttribute('span', 'onmouseover') throws an exception
 [x] allowAttribute('span', 'style') throws an exception
 [x] allowUnsafeAttribute('span', 'onmouseover') allows the 'onmouseover' attribute on 'span' elements
 [x] allowUnsafeAttribute() returns an instance of Attribute
 [x] allowElement('*invalid*') throws an exception
 [x] allowAttribute('span', 'data-title') allows the 'data-title' attribute on 'span' elements
 [x] allowAttribute('b', '*invalid*') throws an exception
 [x] asConfig() returns NULL if no elements were allowed
 [x] Has a quickMatch
 [x] Generates a regexp for its config array
 [x] asConfig() preserves aliased elements' keys in a JS variant
 [x] asConfig() preserves aliased attributes' keys in a JS variant
 [x] getJSHints() returns ['HTMLELEMENTS_HAS_ALIASES' => 0] by default
 [x] getJSHints() returns ['HTMLELEMENTS_HAS_ALIASES' => 1] if any alias is set

Parser (s9e\TextFormatter\Tests\Plugins\HTMLElements\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4

Configurator (s9e\TextFormatter\Tests\Plugins\HTMLEntities\Configurator)
 [x] Automatically creates an "HE" tag
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] Has a quickMatch
 [x] Generates a regexp for its config array
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] getTag() returns the tag that is associated with this plugin

Parser (s9e\TextFormatter\Tests\Plugins\HTMLEntities\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4
 [x] Parsing+rendering tests with data set #5

Configurator (s9e\TextFormatter\Tests\Plugins\Keywords\Configurator)
 [x] Automatically creates a "KEYWORD" tag
 [x] The name of the tag used can be changed through the "tagName" constructor option
 [x] The name of the attribute used can be changed through the "attrName" constructor option
 [x] asConfig() returns NULL if no keyword was added
 [x] The config array contains the name of the tag
 [x] The config array contains the name of the attribute
 [x] The config array contains an array of regexps
 [x] Keywords are split in groups to generate regexps smaller than ~32KB
 [x] Regexps are case-insensitive if $plugin->caseSensitive is false
 [x] Regexps that contain a non-ASCII character use Unicode mode
 [x] asConfig() does not return an entry for onlyFirst by default
 [x] asConfig() has an entry for onlyFirst if it's true
 [x] asConfig() does not return an entry for onlyFirst if it's false

Parser (s9e\TextFormatter\Tests\Plugins\Keywords\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5

Configurator (s9e\TextFormatter\Tests\Plugins\Litedown\Configurator)
 [x] Turns on automatic paragraph management
 [x] Automatically creates a "URL" tag
 [x] Does not overwrite the "URL" tag if it already exists
 [x] addHeadersId() create a slug attribute for H1 to H6
 [x] addHeadersId() adds a conditional "id" attribute to H1 to H6 templates
 [x] addHeadersId('foo-') adds a "foo-" prefix to the id attribute
 [x] addHeadersId() can be called multiple times
 [x] asConfig() returns an array
 [x] asConfig() returns decodeHtmlEntities is saved as a boolean
 [x] getJSHints() returns ['LITEDOWN_DECODE_HTML_ENTITIES' => 0] by default
 [x] getJSHints() returns ['LITEDOWN_DECODE_HTML_ENTITIES' => 1] if decodeHtmlEntities is true
 [x] getJSParser() returns a parser

Blocks (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Blocks)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests with data set #38
 [x] Parsing tests with data set #39
 [x] Parsing tests with data set #40
 [x] Parsing tests with data set #41
 [x] Parsing tests with data set #42
 [x] Parsing tests with data set #43
 [x] Parsing tests with data set #44
 [x] Parsing tests with data set #45
 [x] Parsing tests with data set #46
 [x] Parsing tests with data set #47
 [x] Parsing tests with data set #48
 [x] Parsing tests with data set #49
 [x] Parsing tests with data set #50
 [x] Parsing tests with data set #51
 [x] Parsing tests with data set #52
 [x] Parsing tests with data set #53
 [x] Parsing tests with data set #54
 [x] Parsing tests with data set #55
 [x] Parsing tests with data set #56
 [x] Parsing tests with data set #57
 [x] Parsing tests with data set #58
 [x] Parsing tests with data set #59
 [x] Parsing tests with data set #60
 [x] Parsing tests with data set #61
 [x] Parsing tests with data set #62
 [x] Parsing tests with data set #63
 [x] Parsing tests with data set #64
 [x] Parsing tests with data set #65
 [x] Parsing tests with data set #66
 [x] Parsing tests with data set #67
 [x] Parsing tests with data set #68
 [x] Parsing tests with data set #69
 [x] Parsing tests with data set #70
 [x] Parsing tests with data set #71
 [x] Parsing tests with data set #72
 [x] Parsing tests with data set #73
 [x] Parsing tests with data set #74
 [x] Parsing tests with data set #75
 [x] Parsing tests with data set #76
 [x] Parsing tests with data set #77
 [x] Parsing tests with data set #78
 [x] Parsing tests with data set #79
 [x] Parsing tests with data set #80
 [x] Parsing tests with data set #81
 [x] Parsing tests with data set #82
 [x] Parsing tests with data set #83
 [x] Parsing tests with data set #84
 [x] Parsing tests with data set #85
 [x] Parsing tests with data set #86
 [x] Parsing tests with data set #87
 [x] Parsing tests with data set #88
 [x] Parsing tests with data set #89
 [x] Parsing tests with data set #90
 [x] Parsing tests with data set #91
 [x] Parsing tests with data set #92
 [x] Parsing tests with data set #93
 [x] Parsing tests with data set #94
 [x] Parsing tests with data set #95
 [x] Parsing tests with data set #96
 [x] Parsing tests with data set #97
 [x] Parsing tests with data set #98
 [x] Parsing tests with data set #99
 [x] Parsing tests with data set #100
 [x] Parsing tests with data set #101
 [x] Parsing tests with data set #102
 [x] Parsing tests with data set #103
 [x] Parsing tests with data set #104
 [x] Parsing tests with data set #105
 [x] Parsing tests with data set #106
 [x] Parsing tests with data set #107
 [x] Parsing tests with data set #108
 [x] Parsing tests with data set #109
 [x] Parsing tests with data set #110
 [x] Parsing tests with data set #111
 [x] Parsing tests with data set #112
 [x] Parsing tests with data set #113
 [x] Parsing tests with data set #114
 [x] Parsing tests with data set #115
 [x] Parsing tests with data set #116
 [x] Parsing tests with data set #117
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing tests (JavaScript) with data set #38
 [x] Parsing tests (JavaScript) with data set #39
 [x] Parsing tests (JavaScript) with data set #40
 [x] Parsing tests (JavaScript) with data set #41
 [x] Parsing tests (JavaScript) with data set #42
 [x] Parsing tests (JavaScript) with data set #43
 [x] Parsing tests (JavaScript) with data set #44
 [x] Parsing tests (JavaScript) with data set #45
 [x] Parsing tests (JavaScript) with data set #46
 [x] Parsing tests (JavaScript) with data set #47
 [x] Parsing tests (JavaScript) with data set #48
 [x] Parsing tests (JavaScript) with data set #49
 [x] Parsing tests (JavaScript) with data set #50
 [x] Parsing tests (JavaScript) with data set #51
 [x] Parsing tests (JavaScript) with data set #52
 [x] Parsing tests (JavaScript) with data set #53
 [x] Parsing tests (JavaScript) with data set #54
 [x] Parsing tests (JavaScript) with data set #55
 [x] Parsing tests (JavaScript) with data set #56
 [x] Parsing tests (JavaScript) with data set #57
 [x] Parsing tests (JavaScript) with data set #58
 [x] Parsing tests (JavaScript) with data set #59
 [x] Parsing tests (JavaScript) with data set #60
 [x] Parsing tests (JavaScript) with data set #61
 [x] Parsing tests (JavaScript) with data set #62
 [x] Parsing tests (JavaScript) with data set #63
 [x] Parsing tests (JavaScript) with data set #64
 [x] Parsing tests (JavaScript) with data set #65
 [x] Parsing tests (JavaScript) with data set #66
 [x] Parsing tests (JavaScript) with data set #67
 [x] Parsing tests (JavaScript) with data set #68
 [x] Parsing tests (JavaScript) with data set #69
 [x] Parsing tests (JavaScript) with data set #70
 [x] Parsing tests (JavaScript) with data set #71
 [x] Parsing tests (JavaScript) with data set #72
 [x] Parsing tests (JavaScript) with data set #73
 [x] Parsing tests (JavaScript) with data set #74
 [x] Parsing tests (JavaScript) with data set #75
 [x] Parsing tests (JavaScript) with data set #76
 [x] Parsing tests (JavaScript) with data set #77
 [x] Parsing tests (JavaScript) with data set #78
 [x] Parsing tests (JavaScript) with data set #79
 [x] Parsing tests (JavaScript) with data set #80
 [x] Parsing tests (JavaScript) with data set #81
 [x] Parsing tests (JavaScript) with data set #82
 [x] Parsing tests (JavaScript) with data set #83
 [x] Parsing tests (JavaScript) with data set #84
 [x] Parsing tests (JavaScript) with data set #85
 [x] Parsing tests (JavaScript) with data set #86
 [x] Parsing tests (JavaScript) with data set #87
 [x] Parsing tests (JavaScript) with data set #88
 [x] Parsing tests (JavaScript) with data set #89
 [x] Parsing tests (JavaScript) with data set #90
 [x] Parsing tests (JavaScript) with data set #91
 [x] Parsing tests (JavaScript) with data set #92
 [x] Parsing tests (JavaScript) with data set #93
 [x] Parsing tests (JavaScript) with data set #94
 [x] Parsing tests (JavaScript) with data set #95
 [x] Parsing tests (JavaScript) with data set #96
 [x] Parsing tests (JavaScript) with data set #97
 [x] Parsing tests (JavaScript) with data set #98
 [x] Parsing tests (JavaScript) with data set #99
 [x] Parsing tests (JavaScript) with data set #100
 [x] Parsing tests (JavaScript) with data set #101
 [x] Parsing tests (JavaScript) with data set #102
 [x] Parsing tests (JavaScript) with data set #103
 [x] Parsing tests (JavaScript) with data set #104
 [x] Parsing tests (JavaScript) with data set #105
 [x] Parsing tests (JavaScript) with data set #106
 [x] Parsing tests (JavaScript) with data set #107
 [x] Parsing tests (JavaScript) with data set #108
 [x] Parsing tests (JavaScript) with data set #109
 [x] Parsing tests (JavaScript) with data set #110
 [x] Parsing tests (JavaScript) with data set #111
 [x] Parsing tests (JavaScript) with data set #112
 [x] Parsing tests (JavaScript) with data set #113
 [x] Parsing tests (JavaScript) with data set #114
 [x] Parsing tests (JavaScript) with data set #115
 [x] Parsing tests (JavaScript) with data set #116
 [x] Parsing tests (JavaScript) with data set #117
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4
 [x] Parsing+rendering tests with data set #5
 [x] Parsing+rendering tests with data set #6
 [x] Parsing+rendering tests with data set #7
 [x] Parsing+rendering tests with data set #8
 [x] Parsing+rendering tests with data set #9
 [x] Parsing+rendering tests with data set #10

Emphasis (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Emphasis)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests with data set #38
 [x] Parsing tests with data set #39
 [x] Parsing tests with data set #40
 [x] Parsing tests with data set #41
 [x] Parsing tests with data set #42
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing tests (JavaScript) with data set #38
 [x] Parsing tests (JavaScript) with data set #39
 [x] Parsing tests (JavaScript) with data set #40
 [x] Parsing tests (JavaScript) with data set #41
 [x] Parsing tests (JavaScript) with data set #42
 [x] Parsing+rendering tests with data set #0

Forced Line Breaks (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\ForcedLineBreaks)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing+rendering tests with data set #0

Images (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Images)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing+rendering tests with data set #0

Inline Code (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\InlineCode)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing+rendering tests with data set #0

Inline Spoiler (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\InlineSpoiler)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing+rendering tests with data set #0

Links (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Links)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests with data set #38
 [x] Parsing tests with data set #39
 [x] Parsing tests with data set #40
 [x] Parsing tests with data set #41
 [x] Parsing tests with data set #42
 [x] Parsing tests with data set #43
 [x] Parsing tests with data set #44
 [x] Parsing tests with data set #45
 [x] Parsing tests with data set #46
 [x] Parsing tests with data set #47
 [x] Parsing tests with data set #48
 [x] Parsing tests with data set #49
 [x] Parsing tests with data set #50
 [x] Parsing tests with data set #51
 [x] Parsing tests with data set #52
 [x] Parsing tests with data set #53
 [x] Parsing tests with data set #54
 [x] Parsing tests with data set #55
 [x] Parsing tests with data set #56
 [x] Parsing tests with data set #57
 [x] Parsing tests with data set #58
 [x] Parsing tests with data set #59
 [x] Parsing tests with data set #60
 [x] Parsing tests with data set #61
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing tests (JavaScript) with data set #38
 [x] Parsing tests (JavaScript) with data set #39
 [x] Parsing tests (JavaScript) with data set #40
 [x] Parsing tests (JavaScript) with data set #41
 [x] Parsing tests (JavaScript) with data set #42
 [x] Parsing tests (JavaScript) with data set #43
 [x] Parsing tests (JavaScript) with data set #44
 [x] Parsing tests (JavaScript) with data set #45
 [x] Parsing tests (JavaScript) with data set #46
 [x] Parsing tests (JavaScript) with data set #47
 [x] Parsing tests (JavaScript) with data set #48
 [x] Parsing tests (JavaScript) with data set #49
 [x] Parsing tests (JavaScript) with data set #50
 [x] Parsing tests (JavaScript) with data set #51
 [x] Parsing tests (JavaScript) with data set #52
 [x] Parsing tests (JavaScript) with data set #53
 [x] Parsing tests (JavaScript) with data set #54
 [x] Parsing tests (JavaScript) with data set #55
 [x] Parsing tests (JavaScript) with data set #56
 [x] Parsing tests (JavaScript) with data set #57
 [x] Parsing tests (JavaScript) with data set #58
 [x] Parsing tests (JavaScript) with data set #59
 [x] Parsing tests (JavaScript) with data set #60
 [x] Parsing tests (JavaScript) with data set #61
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2

Strikethrough (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Strikethrough)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing+rendering tests with data set #0

Subscript (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Subscript)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing+rendering tests with data set #0

Superscript (s9e\TextFormatter\Tests\Plugins\Litedown\Parser\Passes\Superscript)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing+rendering tests with data set #0

Parser (s9e\TextFormatter\Tests\Plugins\Litedown\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests (JavaScript) with data set #0

Cached Definition Collection (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\Collections\CachedDefinitionCollection)
 [x] isset('youtube') returns TRUE
 [x] isset('unknown') returns FALSE
 [x] Is iterable
 [x] get('youtube') returns a configuration
 [x] get('unknown') returns FALSE
 [x] Site definitions contain the site's name
 [x] Site definitions contain the site's tags

Site Definition Collection (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\Collections\SiteDefinitionCollection)
 [x] Can set and retrieve definitions
 [x] get() throws a meaningful exception if the site ID does not exist
 [x] Throws an exception if the site ID is not valid
 [x] set() throws an exception if the site config is not an array
 [x] set() throws an exception if the site config does not contain a host
 [x] add() throws a meaningful exception if the site ID already exists
 [x] Converts the extract field to an array if it's a string
 [x] Converts the filterChain field to an array if it's a string
 [x] Preserves the extract field if it's an array
 [x] Normalizes the scrape config

Xml File Definition Collection (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\Collections\XmlFileDefinitionCollection)
 [x] isset() returns TRUE if the site config exists
 [x] isset('unknown') returns FALSE
 [x] Works if libxml2 entity loader is disabled
 [x] Is iterable
 [x] get('foo') returns a configuration if foo.xml exists
 [x] get('unknown') throws an exception
 [x] The constructor throws an exception if the dir does not exist
 [x] get() correctly interprets multiple nodes of the same name in XML
 [x] Properly reads child elements with no whitespace
 [x] Properly reads CDATA
 [x] Iframe dimensions are cast to integer
 [x] Default attribute values are cast to integer if they are made of digits
 [x] Default attribute values can be 0
 [x] Other default attribute values are left as strings
 [x] Attributes' "required" property is cast to bool

Bluesky Helper (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\SiteHelpers\BlueskyHelper)
 [x] addHost() normalizes the host
 [x] addHost() adds the Bluesky media site if it's not enabled yet
 [x] addHost() updates the embedded regexp

Mastodon Helper (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\SiteHelpers\MastodonHelper)
 [x] addHost() normalizes the host
 [x] addHost() adds the Mastodon media site if it's not enabled yet
 [x] setHosts() resets previously allowed hosts
 [x] getHosts() returns a numerically-indexed array of allowed hosts

Xen Foro Helper (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\SiteHelpers\XenForoHelper)
 [x] addHost() adds the XenForo media site if it's not enabled yet

Template Builder (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\TemplateBuilder)
 [x] getTemplate() returns an empty string by default
 [x] Supports Flash objects
 [x] Supports iframes
 [x] Supports multiple choice templates
 [x] build() adds the data-s9e-mediaembed attribute on the wrapper if applicable
 [x] build() does not add the data-s9e-mediaembed attribute on XSL elements

Choose (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\TemplateGenerators\Choose)
 [x] getTemplate() with one when / one otherwise
 [x] getTemplate() with two when / one otherwise

Flash (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\TemplateGenerators\Flash)
 [x] getTemplate() tests with data set #0
 [x] getTemplate() tests with data set #1

Iframe (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator\TemplateGenerators\Iframe)
 [x] getTemplate() tests with data set #0
 [x] getTemplate() tests with data set #1
 [x] getTemplate() tests with data set #2
 [x] getTemplate() tests with data set #3
 [x] getTemplate() tests with data set #4
 [x] getTemplate() tests with data set #5
 [x] getTemplate() tests with data set #6
 [x] getTemplate() tests with data set #7
 [x] getTemplate() tests with data set #8

Configurator (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Configurator)
 [x] MediaEmbed.hosts and MediaEmbed.sites are registered on instantiation
 [x] Creates a [media] BBCode by default
 [x] Does not create a [media] BBCode if createMediaBBCode is false
 [x] add('youtube') does not create a [youtube] BBCode by default
 [x] add('inexistent') throws an exception
 [x] add() returns a tag
 [x] add() accepts an array as second argument
 [x] add() creates an attribute for every named subpattern in extract
 [x] add() creates an attribute for every named subpattern in scrape/extract
 [x] add() accepts multiple "host" elements
 [x] add() sets the tag's default template to the iframe defined in the "iframe" element if available
 [x] add() sets the tag's default template to the object defined in the "flash" element if available
 [x] add() sets an empty template if none is specified
 [x] add() handles multiple-choice templates
 [x] add() handles multiple-choice templates with more than 2 branches
 [x] add() checks the tag's safety before adding it
 [x] add() uses explicit attribute declarations
 [x] add() throws a RuntimeException if a filter is not allowed
 [x] add() processes the optional defaultValue in attribute declarations
 [x] add() throws an InvalidArgumentException if the site ID is not entirely made of alphanumeric characters
 [x] getSites() returns the configured sites
 [x] asConfig() returns NULL if no site was added
 [x] asConfig() returns a an array containing a "regexp" element by default, if any site was added
 [x] asConfig() creates a regexp if a site has a "host"
 [x] asConfig() returns '://' as quickMatch
 [x] getSiteHelper('mastodon') returns the Mastodon helper

Parser (s9e\TextFormatter\Tests\Plugins\MediaEmbed\Parser)
 [x] The MEDIA tag can be effectively disabled
 [x] Abstract tests (not tied to bundled sites) with data set #0
 [x] Abstract tests (not tied to bundled sites) with data set #1
 [x] Abstract tests (not tied to bundled sites) with data set #2
 [x] Abstract tests (not tied to bundled sites) with data set #3
 [x] Abstract tests (not tied to bundled sites) with data set #4
 [x] Abstract tests (not tied to bundled sites) with data set #5
 [x] Abstract tests (not tied to bundled sites) with data set #6
 [x] Abstract tests (not tied to bundled sites) with data set #7
 [x] Abstract tests (not tied to bundled sites) with data set #8
 [x] Abstract tests (not tied to bundled sites) with data set #9
 [x] Abstract tests (not tied to bundled sites) with data set #10
 [x] Abstract tests (not tied to bundled sites) with data set #11
 [x] Abstract tests (not tied to bundled sites) with data set #12
 [x] Abstract tests (not tied to bundled sites) with data set #13
 [x] Abstract tests (not tied to bundled sites) with data set #14
 [x] Abstract tests (not tied to bundled sites) with data set #15
 [x] Scraping tests with data set #0
 [x] Scraping tests with data set #1
 [x] Scraping tests with data set #2
 [x] Scraping tests with data set #3
 [x] Scraping tests with data set #4
 [x] Scraping tests with data set #5
 [x] Scraping tests with data set #6
 [x] Scraping tests with data set #7
 [x] Scraping tests with data set #8
 [x] Scraping tests with data set #9
 [x] Scraping tests with data set #10
 [x] Scraping tests with data set #11
 [x] Scraping tests with data set #12
 [x] Scraping tests with data set #13
 [x] Scraping tests with data set #14
 [x] Scraping tests with data set #15
 [x] Scraping tests with data set #16
 [x] Scraping tests with data set #17
 [x] Scraping tests with data set #18
 [x] Scraping tests with data set #19
 [x] Scraping tests with data set #20
 [x] Scraping tests with data set #21
 [x] Scraping tests with data set #22
 [x] Scraping tests with data set #23
 [x] Scraping tests with data set #24
 [x] Scraping tests with data set #25
 [x] Scraping tests with data set #26
 [x] Scraping tests with data set #27
 [x] Scraping tests with data set #28
 [x] Scraping tests with data set #29
 [x] Scraping tests with data set #30
 [x] Scraping tests with data set #31
 [x] Scraping tests with data set #32
 [x] Scraping tests with data set #33
 [x] Scraping tests with data set #34
 [x] Scraping tests with data set #35
 [x] Scraping tests with data set #36
 [x] Scraping tests with data set #37
 [x] Scraping tests with data set #38
 [x] Scraping tests with data set #39
 [x] Scraping tests with data set #40
 [x] Scraping tests with data set #41
 [x] Scraping tests with data set #42
 [x] Scraping tests with data set #43
 [x] Scraping tests with data set #44
 [x] Scraping tests with data set #45
 [x] Scraping tests with data set #46
 [x] Scraping tests with data set #47
 [x] Scraping tests with data set #48
 [x] Scraping tests with data set #49
 [x] Scraping tests with data set #50
 [x] Scraping tests with data set #51
 [x] Scraping tests with data set #52
 [x] Scraping tests with data set #53
 [x] Scraping tests with data set #54
 [x] Scraping tests with data set #55
 [x] Scraping tests with data set #56
 [x] Scraping tests with data set #57
 [x] Scraping tests with data set #58
 [x] Scraping+rendering tests with data set #0
 [x] Scraping+rendering tests with data set #1
 [x] Scraping+rendering tests with data set #2
 [x] Scraping+rendering tests with data set #3
 [x] Scraping+rendering tests with data set #4
 [x] Scraping+rendering tests with data set #5
 [x] Scraping+rendering tests with data set #6
 [x] Scraping+rendering tests with data set #7
 [x] Scraping+rendering tests with data set #8
 [x] Legacy rendering tests with data set #0
 [x] Legacy rendering tests with data set #1
 [x] Legacy rendering tests with data set #2
 [x] Legacy rendering tests with data set #3
 [x] Legacy rendering tests with data set #4
 [x] Legacy rendering tests with data set #5
 [x] Legacy rendering tests with data set #6
 [x] Legacy rendering tests with data set #7
 [x] Legacy rendering tests with data set #8
 [x] Legacy rendering tests with data set #9
 [x] Legacy rendering tests with data set #10
 [x] Legacy rendering tests with data set #11
 [x] Legacy rendering tests with data set #12
 [x] Legacy rendering tests with data set #13
 [x] Legacy rendering tests with data set #14
 [x] Legacy rendering tests with data set #15
 [x] Legacy rendering tests with data set #16
 [x] Legacy rendering tests with data set #17
 [x] Legacy rendering tests with data set #18
 [x] AMP rendering tests with data set #0
 [x] AMP rendering tests with data set #1
 [x] AMP rendering tests with data set #2
 [x] AMP rendering tests with data set #3
 [x] AMP rendering tests with data set #4
 [x] AMP rendering tests with data set #5
 [x] AMP rendering tests with data set #6
 [x] AMP rendering tests with data set #7
 [x] AMP rendering tests with data set #8
 [x] AMP rendering tests with data set #9
 [x] AMP rendering tests with data set #10
 [x] AMP rendering tests with data set #11
 [x] AMP rendering tests with data set #12
 [x] AMP rendering tests with data set #13
 [x] AMP rendering tests with data set #14
 [x] AMP rendering tests with data set #15
 [x] AMP rendering tests with data set #16
 [x] AMP rendering tests with data set #17
 [x] AMP rendering tests with data set #18
 [x] AMP rendering tests with data set #19
 [x] AMP rendering tests with data set #20
 [x] AMP rendering tests with data set #21
 [x] AMP rendering tests with data set #22
 [x] AMP rendering tests with data set #23
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests with data set #23
 [x] Parsing tests with data set #24
 [x] Parsing tests with data set #25
 [x] Parsing tests with data set #26
 [x] Parsing tests with data set #27
 [x] Parsing tests with data set #28
 [x] Parsing tests with data set #29
 [x] Parsing tests with data set #30
 [x] Parsing tests with data set #31
 [x] Parsing tests with data set #32
 [x] Parsing tests with data set #33
 [x] Parsing tests with data set #34
 [x] Parsing tests with data set #35
 [x] Parsing tests with data set #36
 [x] Parsing tests with data set #37
 [x] Parsing tests with data set #38
 [x] Parsing tests with data set #39
 [x] Parsing tests with data set #40
 [x] Parsing tests with data set #41
 [x] Parsing tests with data set #42
 [x] Parsing tests with data set #43
 [x] Parsing tests with data set #44
 [x] Parsing tests with data set #45
 [x] Parsing tests with data set #46
 [x] Parsing tests with data set #47
 [x] Parsing tests with data set #48
 [x] Parsing tests with data set #49
 [x] Parsing tests with data set #50
 [x] Parsing tests with data set #51
 [x] Parsing tests with data set #52
 [x] Parsing tests with data set #53
 [x] Parsing tests with data set #54
 [x] Parsing tests with data set #55
 [x] Parsing tests with data set #56
 [x] Parsing tests with data set #57
 [x] Parsing tests with data set #58
 [x] Parsing tests with data set #59
 [x] Parsing tests with data set #60
 [x] Parsing tests with data set #61
 [x] Parsing tests with data set #62
 [x] Parsing tests with data set #63
 [x] Parsing tests with data set #64
 [x] Parsing tests with data set #65
 [x] Parsing tests with data set #66
 [x] Parsing tests with data set #67
 [x] Parsing tests with data set #68
 [x] Parsing tests with data set #69
 [x] Parsing tests with data set #70
 [x] Parsing tests with data set #71
 [x] Parsing tests with data set #72
 [x] Parsing tests with data set #73
 [x] Parsing tests with data set #74
 [x] Parsing tests with data set #75
 [x] Parsing tests with data set #76
 [x] Parsing tests with data set #77
 [x] Parsing tests with data set #78
 [x] Parsing tests with data set #79
 [x] Parsing tests with data set #80
 [x] Parsing tests with data set #81
 [x] Parsing tests with data set #82
 [x] Parsing tests with data set #83
 [x] Parsing tests with data set #84
 [x] Parsing tests with data set #85
 [x] Parsing tests with data set #86
 [x] Parsing tests with data set #87
 [x] Parsing tests with data set #88
 [x] Parsing tests with data set #89
 [x] Parsing tests with data set #90
 [x] Parsing tests with data set #91
 [x] Parsing tests with data set #92
 [x] Parsing tests with data set #93
 [x] Parsing tests with data set #94
 [x] Parsing tests with data set #95
 [x] Parsing tests with data set #96
 [x] Parsing tests with data set #97
 [x] Parsing tests with data set #98
 [x] Parsing tests with data set #99
 [x] Parsing tests with data set #100
 [x] Parsing tests with data set #101
 [x] Parsing tests with data set #102
 [x] Parsing tests with data set #103
 [x] Parsing tests with data set #104
 [x] Parsing tests with data set #105
 [x] Parsing tests with data set #106
 [x] Parsing tests with data set #107
 [x] Parsing tests with data set #108
 [x] Parsing tests with data set #109
 [x] Parsing tests with data set #110
 [x] Parsing tests with data set #111
 [x] Parsing tests with data set #112
 [x] Parsing tests with data set #113
 [x] Parsing tests with data set #114
 [x] Parsing tests with data set #115
 [x] Parsing tests with data set #116
 [x] Parsing tests with data set #117
 [x] Parsing tests with data set #118
 [x] Parsing tests with data set #119
 [x] Parsing tests with data set #120
 [x] Parsing tests with data set #121
 [x] Parsing tests with data set #122
 [x] Parsing tests with data set #123
 [x] Parsing tests with data set #124
 [x] Parsing tests with data set #125
 [x] Parsing tests with data set #126
 [x] Parsing tests with data set #127
 [x] Parsing tests with data set #128
 [x] Parsing tests with data set #129
 [x] Parsing tests with data set #130
 [x] Parsing tests with data set #131
 [x] Parsing tests with data set #132
 [x] Parsing tests with data set #133
 [x] Parsing tests with data set #134
 [x] Parsing tests with data set #135
 [x] Parsing tests with data set #136
 [x] Parsing tests with data set #137
 [x] Parsing tests with data set #138
 [x] Parsing tests with data set #139
 [x] Parsing tests with data set #140
 [x] Parsing tests with data set #141
 [x] Parsing tests with data set #142
 [x] Parsing tests with data set #143
 [x] Parsing tests with data set #144
 [x] Parsing tests with data set #145
 [x] Parsing tests with data set #146
 [x] Parsing tests with data set #147
 [x] Parsing tests with data set #148
 [x] Parsing tests with data set #149
 [x] Parsing tests with data set #150
 [x] Parsing tests with data set #151
 [x] Parsing tests with data set #152
 [x] Parsing tests with data set #153
 [x] Parsing tests with data set #154
 [x] Parsing tests with data set #155
 [x] Parsing tests with data set #156
 [x] Parsing tests with data set #157
 [x] Parsing tests with data set #158
 [x] Parsing tests with data set #159
 [x] Parsing tests with data set #160
 [x] Parsing tests with data set #161
 [x] Parsing tests with data set #162
 [x] Parsing tests with data set #163
 [x] Parsing tests with data set #164
 [x] Parsing tests with data set #165
 [x] Parsing tests with data set #166
 [x] Parsing tests with data set #167
 [x] Parsing tests with data set #168
 [x] Parsing tests with data set #169
 [x] Parsing tests with data set #170
 [x] Parsing tests with data set #171
 [x] Parsing tests with data set #172
 [x] Parsing tests with data set #173
 [x] Parsing tests with data set #174
 [x] Parsing tests with data set #175
 [x] Parsing tests with data set #176
 [x] Parsing tests with data set #177
 [x] Parsing tests with data set #178
 [x] Parsing tests with data set #179
 [x] Parsing tests with data set #180
 [x] Parsing tests with data set #181
 [x] Parsing tests with data set #182
 [x] Parsing tests with data set #183
 [x] Parsing tests with data set #184
 [x] Parsing tests with data set #185
 [x] Parsing tests with data set #186
 [x] Parsing tests with data set #187
 [x] Parsing tests with data set #188
 [x] Parsing tests with data set #189
 [x] Parsing tests with data set #190
 [x] Parsing tests with data set #191
 [x] Parsing tests with data set #192
 [x] Parsing tests with data set #193
 [x] Parsing tests with data set #194
 [x] Parsing tests with data set #195
 [x] Parsing tests with data set #196
 [x] Parsing tests with data set #197
 [x] Parsing tests with data set #198
 [x] Parsing tests with data set #199
 [x] Parsing tests with data set #200
 [x] Parsing tests with data set #201
 [x] Parsing tests with data set #202
 [x] Parsing tests with data set #203
 [x] Parsing tests with data set #204
 [x] Parsing tests with data set #205
 [x] Parsing tests with data set #206
 [x] Parsing tests with data set #207
 [x] Parsing tests with data set #208
 [x] Parsing tests with data set #209
 [x] Parsing tests with data set #210
 [x] Parsing tests with data set #211
 [x] Parsing tests with data set #212
 [x] Parsing tests with data set #213
 [x] Parsing tests with data set #214
 [x] Parsing tests with data set #215
 [x] Parsing tests with data set #216
 [x] Parsing tests with data set #217
 [x] Parsing tests with data set #218
 [x] Parsing tests with data set #219
 [x] Parsing tests with data set #220
 [x] Parsing tests with data set #221
 [x] Parsing tests with data set #222
 [x] Parsing tests with data set #223
 [x] Parsing tests with data set #224
 [x] Parsing tests with data set #225
 [x] Parsing tests with data set #226
 [x] Parsing tests with data set #227
 [x] Parsing tests with data set #228
 [x] Parsing tests with data set #229
 [x] Parsing tests with data set #230
 [x] Parsing tests with data set #231
 [x] Parsing tests with data set #232
 [x] Parsing tests with data set #233
 [x] Parsing tests with data set #234
 [x] Parsing tests with data set #235
 [x] Parsing tests with data set #236
 [x] Parsing tests with data set #237
 [x] Parsing tests with data set #238
 [x] Parsing tests with data set #239
 [x] Parsing tests with data set #240
 [x] Parsing tests with data set #241
 [x] Parsing tests with data set #242
 [x] Parsing tests with data set #243
 [x] Parsing tests with data set #244
 [x] Parsing tests with data set #245
 [x] Parsing tests with data set #246
 [x] Parsing tests with data set #247
 [x] Parsing tests with data set #248
 [x] Parsing tests with data set #249
 [x] Parsing tests with data set #250
 [x] Parsing tests with data set #251
 [x] Parsing tests with data set #252
 [x] Parsing tests with data set #253
 [x] Parsing tests with data set #254
 [x] Parsing tests with data set #255
 [x] Parsing tests with data set #256
 [x] Parsing tests with data set #257
 [x] Parsing tests with data set #258
 [x] Parsing tests with data set #259
 [x] Parsing tests with data set #260
 [x] Parsing tests with data set #261
 [x] Parsing tests with data set #262
 [x] Parsing tests with data set #263
 [x] Parsing tests with data set #264
 [x] Parsing tests with data set #265
 [x] Parsing tests with data set #266
 [x] Parsing tests with data set #267
 [x] Parsing tests with data set #268
 [x] Parsing tests with data set #269
 [x] Parsing tests with data set #270
 [x] Parsing tests with data set #271
 [x] Parsing tests with data set #272
 [x] Parsing tests with data set #273
 [x] Parsing tests with data set #274
 [x] Parsing tests with data set #275
 [x] Parsing tests with data set #276
 [x] Parsing tests with data set #277
 [x] Parsing tests with data set #278
 [x] Parsing tests with data set #279
 [x] Parsing tests with data set #280
 [x] Parsing tests with data set #281
 [x] Parsing tests with data set #282
 [x] Parsing tests with data set #283
 [x] Parsing tests with data set #284
 [x] Parsing tests with data set #285
 [x] Parsing tests with data set #286
 [x] Parsing tests with data set #287
 [x] Parsing tests with data set #288
 [x] Parsing tests with data set #289
 [x] Parsing tests with data set #290
 [x] Parsing tests with data set #291
 [x] Parsing tests with data set #292
 [x] Parsing tests with data set #293
 [x] Parsing tests with data set #294
 [x] Parsing tests with data set #295
 [x] Parsing tests with data set #296
 [x] Parsing tests with data set #297
 [x] Parsing tests with data set #298
 [x] Parsing tests with data set #299
 [x] Parsing tests with data set #300
 [x] Parsing tests with data set #301
 [x] Parsing tests with data set #302
 [x] Parsing tests with data set #303
 [x] Parsing tests with data set #304
 [x] Parsing tests with data set #305
 [x] Parsing tests with data set #306
 [x] Parsing tests with data set #307
 [x] Parsing tests with data set #308
 [x] Parsing tests with data set #309
 [x] Parsing tests with data set #310
 [x] Parsing tests with data set #311
 [x] Parsing tests with data set #312
 [x] Parsing tests with data set #313
 [x] Parsing tests with data set #314
 [x] Parsing tests with data set #315
 [x] Parsing tests with data set #316
 [x] Parsing tests with data set #317
 [x] Parsing tests with data set #318
 [x] Parsing tests with data set #319
 [x] Parsing tests with data set #320
 [x] Parsing tests with data set #321
 [x] Parsing tests with data set #322
 [x] Parsing tests with data set #323
 [x] Parsing tests with data set #324
 [x] Parsing tests with data set #325
 [x] Parsing tests with data set #326
 [x] Parsing tests with data set #327
 [x] Parsing tests with data set #328
 [x] Parsing tests with data set #329
 [x] Parsing tests with data set #330
 [x] Parsing tests with data set #331
 [x] Parsing tests with data set #332
 [x] Parsing tests with data set #333
 [x] Parsing tests with data set #334
 [x] Parsing tests with data set #335
 [x] Parsing tests with data set #336
 [x] Parsing tests with data set #337
 [x] Parsing tests with data set #338
 [x] Parsing tests with data set #339
 [x] Parsing tests with data set #340
 [x] Parsing tests with data set #341
 [x] Parsing tests with data set #342
 [x] Parsing tests with data set #343
 [x] Parsing tests with data set #344
 [x] Parsing tests with data set #345
 [x] Parsing tests with data set #346
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing tests (JavaScript) with data set #23
 [x] Parsing tests (JavaScript) with data set #24
 [x] Parsing tests (JavaScript) with data set #25
 [x] Parsing tests (JavaScript) with data set #26
 [x] Parsing tests (JavaScript) with data set #27
 [x] Parsing tests (JavaScript) with data set #28
 [x] Parsing tests (JavaScript) with data set #29
 [x] Parsing tests (JavaScript) with data set #30
 [x] Parsing tests (JavaScript) with data set #31
 [x] Parsing tests (JavaScript) with data set #32
 [x] Parsing tests (JavaScript) with data set #33
 [x] Parsing tests (JavaScript) with data set #34
 [x] Parsing tests (JavaScript) with data set #35
 [x] Parsing tests (JavaScript) with data set #36
 [x] Parsing tests (JavaScript) with data set #37
 [x] Parsing tests (JavaScript) with data set #38
 [x] Parsing tests (JavaScript) with data set #39
 [x] Parsing tests (JavaScript) with data set #40
 [x] Parsing tests (JavaScript) with data set #41
 [x] Parsing tests (JavaScript) with data set #42
 [x] Parsing tests (JavaScript) with data set #43
 [x] Parsing tests (JavaScript) with data set #44
 [x] Parsing tests (JavaScript) with data set #45
 [x] Parsing tests (JavaScript) with data set #46
 [x] Parsing tests (JavaScript) with data set #47
 [x] Parsing tests (JavaScript) with data set #48
 [x] Parsing tests (JavaScript) with data set #49
 [x] Parsing tests (JavaScript) with data set #50
 [x] Parsing tests (JavaScript) with data set #51
 [x] Parsing tests (JavaScript) with data set #52
 [x] Parsing tests (JavaScript) with data set #53
 [x] Parsing tests (JavaScript) with data set #54
 [x] Parsing tests (JavaScript) with data set #55
 [x] Parsing tests (JavaScript) with data set #56
 [x] Parsing tests (JavaScript) with data set #57
 [x] Parsing tests (JavaScript) with data set #58
 [x] Parsing tests (JavaScript) with data set #59
 [x] Parsing tests (JavaScript) with data set #60
 [x] Parsing tests (JavaScript) with data set #61
 [x] Parsing tests (JavaScript) with data set #62
 [x] Parsing tests (JavaScript) with data set #63
 [x] Parsing tests (JavaScript) with data set #64
 [x] Parsing tests (JavaScript) with data set #65
 [x] Parsing tests (JavaScript) with data set #66
 [x] Parsing tests (JavaScript) with data set #67
 [x] Parsing tests (JavaScript) with data set #68
 [x] Parsing tests (JavaScript) with data set #69
 [x] Parsing tests (JavaScript) with data set #70
 [x] Parsing tests (JavaScript) with data set #71
 [x] Parsing tests (JavaScript) with data set #72
 [x] Parsing tests (JavaScript) with data set #73
 [x] Parsing tests (JavaScript) with data set #74
 [x] Parsing tests (JavaScript) with data set #75
 [x] Parsing tests (JavaScript) with data set #76
 [x] Parsing tests (JavaScript) with data set #77
 [x] Parsing tests (JavaScript) with data set #78
 [x] Parsing tests (JavaScript) with data set #79
 [x] Parsing tests (JavaScript) with data set #80
 [x] Parsing tests (JavaScript) with data set #81
 [x] Parsing tests (JavaScript) with data set #82
 [x] Parsing tests (JavaScript) with data set #83
 [x] Parsing tests (JavaScript) with data set #84
 [x] Parsing tests (JavaScript) with data set #85
 [x] Parsing tests (JavaScript) with data set #86
 [x] Parsing tests (JavaScript) with data set #87
 [x] Parsing tests (JavaScript) with data set #88
 [x] Parsing tests (JavaScript) with data set #89
 [x] Parsing tests (JavaScript) with data set #90
 [x] Parsing tests (JavaScript) with data set #91
 [x] Parsing tests (JavaScript) with data set #92
 [x] Parsing tests (JavaScript) with data set #93
 [x] Parsing tests (JavaScript) with data set #94
 [x] Parsing tests (JavaScript) with data set #95
 [x] Parsing tests (JavaScript) with data set #96
 [x] Parsing tests (JavaScript) with data set #97
 [x] Parsing tests (JavaScript) with data set #98
 [x] Parsing tests (JavaScript) with data set #99
 [x] Parsing tests (JavaScript) with data set #100
 [x] Parsing tests (JavaScript) with data set #101
 [x] Parsing tests (JavaScript) with data set #102
 [x] Parsing tests (JavaScript) with data set #103
 [x] Parsing tests (JavaScript) with data set #104
 [x] Parsing tests (JavaScript) with data set #105
 [x] Parsing tests (JavaScript) with data set #106
 [x] Parsing tests (JavaScript) with data set #107
 [x] Parsing tests (JavaScript) with data set #108
 [x] Parsing tests (JavaScript) with data set #109
 [x] Parsing tests (JavaScript) with data set #110
 [x] Parsing tests (JavaScript) with data set #111
 [x] Parsing tests (JavaScript) with data set #112
 [x] Parsing tests (JavaScript) with data set #113
 [x] Parsing tests (JavaScript) with data set #114
 [x] Parsing tests (JavaScript) with data set #115
 [x] Parsing tests (JavaScript) with data set #116
 [x] Parsing tests (JavaScript) with data set #117
 [x] Parsing tests (JavaScript) with data set #118
 [x] Parsing tests (JavaScript) with data set #119
 [x] Parsing tests (JavaScript) with data set #120
 [x] Parsing tests (JavaScript) with data set #121
 [x] Parsing tests (JavaScript) with data set #122
 [x] Parsing tests (JavaScript) with data set #123
 [x] Parsing tests (JavaScript) with data set #124
 [x] Parsing tests (JavaScript) with data set #125
 [x] Parsing tests (JavaScript) with data set #126
 [x] Parsing tests (JavaScript) with data set #127
 [x] Parsing tests (JavaScript) with data set #128
 [x] Parsing tests (JavaScript) with data set #129
 [x] Parsing tests (JavaScript) with data set #130
 [x] Parsing tests (JavaScript) with data set #131
 [x] Parsing tests (JavaScript) with data set #132
 [x] Parsing tests (JavaScript) with data set #133
 [x] Parsing tests (JavaScript) with data set #134
 [x] Parsing tests (JavaScript) with data set #135
 [x] Parsing tests (JavaScript) with data set #136
 [x] Parsing tests (JavaScript) with data set #137
 [x] Parsing tests (JavaScript) with data set #138
 [x] Parsing tests (JavaScript) with data set #139
 [x] Parsing tests (JavaScript) with data set #140
 [x] Parsing tests (JavaScript) with data set #141
 [x] Parsing tests (JavaScript) with data set #142
 [x] Parsing tests (JavaScript) with data set #143
 [x] Parsing tests (JavaScript) with data set #144
 [x] Parsing tests (JavaScript) with data set #145
 [x] Parsing tests (JavaScript) with data set #146
 [x] Parsing tests (JavaScript) with data set #147
 [x] Parsing tests (JavaScript) with data set #148
 [x] Parsing tests (JavaScript) with data set #149
 [x] Parsing tests (JavaScript) with data set #150
 [x] Parsing tests (JavaScript) with data set #151
 [x] Parsing tests (JavaScript) with data set #152
 [x] Parsing tests (JavaScript) with data set #153
 [x] Parsing tests (JavaScript) with data set #154
 [x] Parsing tests (JavaScript) with data set #155
 [x] Parsing tests (JavaScript) with data set #156
 [x] Parsing tests (JavaScript) with data set #157
 [x] Parsing tests (JavaScript) with data set #158
 [x] Parsing tests (JavaScript) with data set #159
 [x] Parsing tests (JavaScript) with data set #160
 [x] Parsing tests (JavaScript) with data set #161
 [x] Parsing tests (JavaScript) with data set #162
 [x] Parsing tests (JavaScript) with data set #163
 [x] Parsing tests (JavaScript) with data set #164
 [x] Parsing tests (JavaScript) with data set #165
 [x] Parsing tests (JavaScript) with data set #166
 [x] Parsing tests (JavaScript) with data set #167
 [x] Parsing tests (JavaScript) with data set #168
 [x] Parsing tests (JavaScript) with data set #169
 [x] Parsing tests (JavaScript) with data set #170
 [x] Parsing tests (JavaScript) with data set #171
 [x] Parsing tests (JavaScript) with data set #172
 [x] Parsing tests (JavaScript) with data set #173
 [x] Parsing tests (JavaScript) with data set #174
 [x] Parsing tests (JavaScript) with data set #175
 [x] Parsing tests (JavaScript) with data set #176
 [x] Parsing tests (JavaScript) with data set #177
 [x] Parsing tests (JavaScript) with data set #178
 [x] Parsing tests (JavaScript) with data set #179
 [x] Parsing tests (JavaScript) with data set #180
 [x] Parsing tests (JavaScript) with data set #181
 [x] Parsing tests (JavaScript) with data set #182
 [x] Parsing tests (JavaScript) with data set #183
 [x] Parsing tests (JavaScript) with data set #184
 [x] Parsing tests (JavaScript) with data set #185
 [x] Parsing tests (JavaScript) with data set #186
 [x] Parsing tests (JavaScript) with data set #187
 [x] Parsing tests (JavaScript) with data set #188
 [x] Parsing tests (JavaScript) with data set #189
 [x] Parsing tests (JavaScript) with data set #190
 [x] Parsing tests (JavaScript) with data set #191
 [x] Parsing tests (JavaScript) with data set #192
 [x] Parsing tests (JavaScript) with data set #193
 [x] Parsing tests (JavaScript) with data set #194
 [x] Parsing tests (JavaScript) with data set #195
 [x] Parsing tests (JavaScript) with data set #196
 [x] Parsing tests (JavaScript) with data set #197
 [x] Parsing tests (JavaScript) with data set #198
 [x] Parsing tests (JavaScript) with data set #199
 [x] Parsing tests (JavaScript) with data set #200
 [x] Parsing tests (JavaScript) with data set #201
 [x] Parsing tests (JavaScript) with data set #202
 [x] Parsing tests (JavaScript) with data set #203
 [x] Parsing tests (JavaScript) with data set #204
 [x] Parsing tests (JavaScript) with data set #205
 [x] Parsing tests (JavaScript) with data set #206
 [x] Parsing tests (JavaScript) with data set #207
 [x] Parsing tests (JavaScript) with data set #208
 [x] Parsing tests (JavaScript) with data set #209
 [x] Parsing tests (JavaScript) with data set #210
 [x] Parsing tests (JavaScript) with data set #211
 [x] Parsing tests (JavaScript) with data set #212
 [x] Parsing tests (JavaScript) with data set #213
 [x] Parsing tests (JavaScript) with data set #214
 [x] Parsing tests (JavaScript) with data set #215
 [x] Parsing tests (JavaScript) with data set #216
 [x] Parsing tests (JavaScript) with data set #217
 [x] Parsing tests (JavaScript) with data set #218
 [x] Parsing tests (JavaScript) with data set #219
 [x] Parsing tests (JavaScript) with data set #220
 [x] Parsing tests (JavaScript) with data set #221
 [x] Parsing tests (JavaScript) with data set #222
 [x] Parsing tests (JavaScript) with data set #223
 [x] Parsing tests (JavaScript) with data set #224
 [x] Parsing tests (JavaScript) with data set #225
 [x] Parsing tests (JavaScript) with data set #226
 [x] Parsing tests (JavaScript) with data set #227
 [x] Parsing tests (JavaScript) with data set #228
 [x] Parsing tests (JavaScript) with data set #229
 [x] Parsing tests (JavaScript) with data set #230
 [x] Parsing tests (JavaScript) with data set #231
 [x] Parsing tests (JavaScript) with data set #232
 [x] Parsing tests (JavaScript) with data set #233
 [x] Parsing tests (JavaScript) with data set #234
 [x] Parsing tests (JavaScript) with data set #235
 [x] Parsing tests (JavaScript) with data set #236
 [x] Parsing tests (JavaScript) with data set #237
 [x] Parsing tests (JavaScript) with data set #238
 [x] Parsing tests (JavaScript) with data set #239
 [x] Parsing tests (JavaScript) with data set #240
 [x] Parsing tests (JavaScript) with data set #241
 [x] Parsing tests (JavaScript) with data set #242
 [x] Parsing tests (JavaScript) with data set #243
 [x] Parsing tests (JavaScript) with data set #244
 [x] Parsing tests (JavaScript) with data set #245
 [x] Parsing tests (JavaScript) with data set #246
 [x] Parsing tests (JavaScript) with data set #247
 [x] Parsing tests (JavaScript) with data set #248
 [x] Parsing tests (JavaScript) with data set #249
 [x] Parsing tests (JavaScript) with data set #250
 [x] Parsing tests (JavaScript) with data set #251
 [x] Parsing tests (JavaScript) with data set #252
 [x] Parsing tests (JavaScript) with data set #253
 [x] Parsing tests (JavaScript) with data set #254
 [x] Parsing tests (JavaScript) with data set #255
 [x] Parsing tests (JavaScript) with data set #256
 [x] Parsing tests (JavaScript) with data set #257
 [x] Parsing tests (JavaScript) with data set #258
 [x] Parsing tests (JavaScript) with data set #259
 [x] Parsing tests (JavaScript) with data set #260
 [x] Parsing tests (JavaScript) with data set #261
 [x] Parsing tests (JavaScript) with data set #262
 [x] Parsing tests (JavaScript) with data set #263
 [x] Parsing tests (JavaScript) with data set #264
 [x] Parsing tests (JavaScript) with data set #265
 [x] Parsing tests (JavaScript) with data set #266
 [x] Parsing tests (JavaScript) with data set #267
 [x] Parsing tests (JavaScript) with data set #268
 [x] Parsing tests (JavaScript) with data set #269
 [x] Parsing tests (JavaScript) with data set #270
 [x] Parsing tests (JavaScript) with data set #271
 [x] Parsing tests (JavaScript) with data set #272
 [x] Parsing tests (JavaScript) with data set #273
 [x] Parsing tests (JavaScript) with data set #274
 [x] Parsing tests (JavaScript) with data set #275
 [x] Parsing tests (JavaScript) with data set #276
 [x] Parsing tests (JavaScript) with data set #277
 [x] Parsing tests (JavaScript) with data set #278
 [x] Parsing tests (JavaScript) with data set #279
 [x] Parsing tests (JavaScript) with data set #280
 [x] Parsing tests (JavaScript) with data set #281
 [x] Parsing tests (JavaScript) with data set #282
 [x] Parsing tests (JavaScript) with data set #283
 [x] Parsing tests (JavaScript) with data set #284
 [x] Parsing tests (JavaScript) with data set #285
 [x] Parsing tests (JavaScript) with data set #286
 [x] Parsing tests (JavaScript) with data set #287
 [x] Parsing tests (JavaScript) with data set #288
 [x] Parsing tests (JavaScript) with data set #289
 [x] Parsing tests (JavaScript) with data set #290
 [x] Parsing tests (JavaScript) with data set #291
 [x] Parsing tests (JavaScript) with data set #292
 [x] Parsing tests (JavaScript) with data set #293
 [x] Parsing tests (JavaScript) with data set #294
 [x] Parsing tests (JavaScript) with data set #295
 [x] Parsing tests (JavaScript) with data set #296
 [x] Parsing tests (JavaScript) with data set #297
 [x] Parsing tests (JavaScript) with data set #298
 [x] Parsing tests (JavaScript) with data set #299
 [x] Parsing tests (JavaScript) with data set #300
 [x] Parsing tests (JavaScript) with data set #301
 [x] Parsing tests (JavaScript) with data set #302
 [x] Parsing tests (JavaScript) with data set #303
 [x] Parsing tests (JavaScript) with data set #304
 [x] Parsing tests (JavaScript) with data set #305
 [x] Parsing tests (JavaScript) with data set #306
 [x] Parsing tests (JavaScript) with data set #307
 [x] Parsing tests (JavaScript) with data set #308
 [x] Parsing tests (JavaScript) with data set #309
 [x] Parsing tests (JavaScript) with data set #310
 [x] Parsing tests (JavaScript) with data set #311
 [x] Parsing tests (JavaScript) with data set #312
 [x] Parsing tests (JavaScript) with data set #313
 [x] Parsing tests (JavaScript) with data set #314
 [x] Parsing tests (JavaScript) with data set #315
 [x] Parsing tests (JavaScript) with data set #316
 [x] Parsing tests (JavaScript) with data set #317
 [x] Parsing tests (JavaScript) with data set #318
 [x] Parsing tests (JavaScript) with data set #319
 [x] Parsing tests (JavaScript) with data set #320
 [x] Parsing tests (JavaScript) with data set #321
 [x] Parsing tests (JavaScript) with data set #322
 [x] Parsing tests (JavaScript) with data set #323
 [x] Parsing tests (JavaScript) with data set #324
 [x] Parsing tests (JavaScript) with data set #325
 [x] Parsing tests (JavaScript) with data set #326
 [x] Parsing tests (JavaScript) with data set #327
 [x] Parsing tests (JavaScript) with data set #328
 [x] Parsing tests (JavaScript) with data set #329
 [x] Parsing tests (JavaScript) with data set #330
 [x] Parsing tests (JavaScript) with data set #331
 [x] Parsing tests (JavaScript) with data set #332
 [x] Parsing tests (JavaScript) with data set #333
 [x] Parsing tests (JavaScript) with data set #334
 [x] Parsing tests (JavaScript) with data set #335
 [x] Parsing tests (JavaScript) with data set #336
 [x] Parsing tests (JavaScript) with data set #337
 [x] Parsing tests (JavaScript) with data set #338
 [x] Parsing tests (JavaScript) with data set #339
 [x] Parsing tests (JavaScript) with data set #340
 [x] Parsing tests (JavaScript) with data set #341
 [x] Parsing tests (JavaScript) with data set #342
 [x] Parsing tests (JavaScript) with data set #343
 [x] Parsing tests (JavaScript) with data set #344
 [x] Parsing tests (JavaScript) with data set #345
 [x] Parsing tests (JavaScript) with data set #346
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3
 [x] Parsing+rendering tests with data set #4
 [x] Parsing+rendering tests with data set #5
 [x] Parsing+rendering tests with data set #6
 [x] Parsing+rendering tests with data set #7
 [x] Parsing+rendering tests with data set #8
 [x] Parsing+rendering tests with data set #9
 [x] Parsing+rendering tests with data set #10
 [x] Parsing+rendering tests with data set #11
 [x] Parsing+rendering tests with data set #12
 [x] Parsing+rendering tests with data set #13
 [x] Parsing+rendering tests with data set #14
 [x] Parsing+rendering tests with data set #15
 [x] Parsing+rendering tests with data set #16
 [x] Parsing+rendering tests with data set #17
 [x] Parsing+rendering tests with data set #18
 [x] Parsing+rendering tests with data set #19
 [x] Parsing+rendering tests with data set #20
 [x] Parsing+rendering tests with data set #21
 [x] Parsing+rendering tests with data set #22
 [x] Parsing+rendering tests with data set #23
 [x] Parsing+rendering tests with data set #24
 [x] Parsing+rendering tests with data set #25
 [x] Parsing+rendering tests with data set #26
 [x] Parsing+rendering tests with data set #27
 [x] Parsing+rendering tests with data set #28
 [x] Parsing+rendering tests with data set #29
 [x] Parsing+rendering tests with data set #30
 [x] Parsing+rendering tests with data set #31
 [x] Parsing+rendering tests with data set #32
 [x] Parsing+rendering tests with data set #33
 [x] Parsing+rendering tests with data set #34
 [x] Parsing+rendering tests with data set #35
 [x] Parsing+rendering tests with data set #36
 [x] Parsing+rendering tests with data set #37
 [x] Parsing+rendering tests with data set #38
 [x] Parsing+rendering tests with data set #39
 [x] Parsing+rendering tests with data set #40
 [x] Parsing+rendering tests with data set #41
 [x] Parsing+rendering tests with data set #42
 [x] Parsing+rendering tests with data set #43
 [x] Parsing+rendering tests with data set #44
 [x] Parsing+rendering tests with data set #45
 [x] Parsing+rendering tests with data set #46
 [x] Parsing+rendering tests with data set #47
 [x] Parsing+rendering tests with data set #48
 [x] Parsing+rendering tests with data set #49
 [x] Parsing+rendering tests with data set #50
 [x] Parsing+rendering tests with data set #51
 [x] Parsing+rendering tests with data set #52
 [x] Parsing+rendering tests with data set #53
 [x] Parsing+rendering tests with data set #54
 [x] Parsing+rendering tests with data set #55
 [x] Parsing+rendering tests with data set #56
 [x] Parsing+rendering tests with data set #57
 [x] Parsing+rendering tests with data set #58
 [x] Parsing+rendering tests with data set #59
 [x] Parsing+rendering tests with data set #60
 [x] Parsing+rendering tests with data set #61
 [x] Parsing+rendering tests with data set #62
 [x] Parsing+rendering tests with data set #63
 [x] Parsing+rendering tests with data set #64
 [x] Parsing+rendering tests with data set #65
 [x] Parsing+rendering tests with data set #66
 [x] Parsing+rendering tests with data set #67
 [x] Parsing+rendering tests with data set #68
 [x] Parsing+rendering tests with data set #69
 [x] Parsing+rendering tests with data set #70
 [x] Parsing+rendering tests with data set #71
 [x] Parsing+rendering tests with data set #72
 [x] Parsing+rendering tests with data set #73
 [x] Parsing+rendering tests with data set #74
 [x] Parsing+rendering tests with data set #75
 [x] Parsing+rendering tests with data set #76
 [x] Parsing+rendering tests with data set #77
 [x] Parsing+rendering tests with data set #78
 [x] Parsing+rendering tests with data set #79
 [x] Parsing+rendering tests with data set #80
 [x] Parsing+rendering tests with data set #81
 [x] Parsing+rendering tests with data set #82
 [x] Parsing+rendering tests with data set #83
 [x] Parsing+rendering tests with data set #84
 [x] Parsing+rendering tests with data set #85
 [x] Parsing+rendering tests with data set #86
 [x] Parsing+rendering tests with data set #87
 [x] Parsing+rendering tests with data set #88
 [x] Parsing+rendering tests with data set #89
 [x] Parsing+rendering tests with data set #90
 [x] Parsing+rendering tests with data set #91
 [x] Parsing+rendering tests with data set #92
 [x] Parsing+rendering tests with data set #93
 [x] Parsing+rendering tests with data set #94
 [x] Parsing+rendering tests with data set #95

Parser Base (s9e\TextFormatter\Tests\Plugins\ParserBase)
 [x] Has a default empty setUp() method
 [x] Constructor calls setUp()
 [x] Constructor sets up $this->config and $this->parser before calling setUp()

Configurator (s9e\TextFormatter\Tests\Plugins\PipeTables\Configurator)
 [x] Creates TABLE, TBODY, TD, TH, THEAD and TR tags
 [x] Does not attempt to create a tag if it already exists
 [x] asConfig() sets overwriteEscapes to false by default
 [x] asConfig() sets overwriteEscapes to true if the Escaper plugin is loaded
 [x] asConfig() sets overwriteMarkdown to false by default
 [x] asConfig() sets overwriteMarkdown to true if the Litedown plugin is loaded

Parser (s9e\TextFormatter\Tests\Plugins\PipeTables\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests with data set #11
 [x] Parsing tests with data set #12
 [x] Parsing tests with data set #13
 [x] Parsing tests with data set #14
 [x] Parsing tests with data set #15
 [x] Parsing tests with data set #16
 [x] Parsing tests with data set #17
 [x] Parsing tests with data set #18
 [x] Parsing tests with data set #19
 [x] Parsing tests with data set #20
 [x] Parsing tests with data set #21
 [x] Parsing tests with data set #22
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing tests (JavaScript) with data set #11
 [x] Parsing tests (JavaScript) with data set #12
 [x] Parsing tests (JavaScript) with data set #13
 [x] Parsing tests (JavaScript) with data set #14
 [x] Parsing tests (JavaScript) with data set #15
 [x] Parsing tests (JavaScript) with data set #16
 [x] Parsing tests (JavaScript) with data set #17
 [x] Parsing tests (JavaScript) with data set #18
 [x] Parsing tests (JavaScript) with data set #19
 [x] Parsing tests (JavaScript) with data set #20
 [x] Parsing tests (JavaScript) with data set #21
 [x] Parsing tests (JavaScript) with data set #22
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3

Configurator (s9e\TextFormatter\Tests\Plugins\Preg\Configurator)
 [x] replace() generates a tag name automatically
 [x] The name of the tag can be specified
 [x] The name of the tag is normalized
 [x] The name of the tag is validated
 [x] replace() returns the tag it creates
 [x] replace() throws an exception if the regexp is invalid
 [x] replace() accepts duplicate named subpatterns
 [x] replace() creates an attribute for each named subpattern
 [x] replace() creates an attribute for each numeric subpattern in use
 [x] replace() creates a #regexp filter for each attribute created
 [x] replace() appends a #url filter to attributes that are used as a URL
 [x] replace() replaces numeric references in the template with the corresponding attribute value
 [x] replace() replaces numeric references pointing to named subpatterns in the template with the corresponding attribute value
 [x] replace() alters the regexp to give a name to unnamed subpatterns used in the template
 [x] replace() does not give a name to unnamed subpatterns that are not used in the template
 [x] replace() identifies $1 as a numeric reference in the template
 [x] replace() identifies \1 as a numeric reference in the template
 [x] replace() identifies ${1} as a numeric reference in the template
 [x] replace() interprets \\1 in the template as a literal \1
 [x] replace() interprets \\\1 in the template as a literal backslashes followed by a numeric reference
 [x] replace() interprets \$1 in the template as a literal $1
 [x] replace() replaces $0 with the whole match
 [x] replace() interprets a (.*?) capture used in template's text as a passthrough
 [x] replace() interprets a (.*?) capture used in template's text as a passthrough
 [x] replace() doesn't set a passthrough if there are multiple candidates
 [x] A capture used as a URL can also be used as a passthrough, in which case it will used the filtered attribute when used in an attribute, and the normal passthrough when used in text
 [x] Captures from non-existent subpattern are removed from the template
 [x] replace() normalizes the tag's template
 [x] replace() checks the safeness of the tag
 [x] replace() checks the safeness of the tag before adding it to the configurator's collection
 [x] asConfig() returns NULL if no replacements were set
 [x] asConfig() returns the regexps in a "generics" array where each element is in the form [<tagName>,<regexp>,<passthrough index>,<map>]
 [x] asConfig() returns regexp in a Regexp object
 [x] match() uses the last catch-all expression as passthrough
 [x] getJSHints() returns ['PREG_HAS_PASSTHROUGH' => false] by default
 [x] getJSHints() returns ['PREG_HAS_PASSTHROUGH' => true] if any replacement is passthrough

Parser (s9e\TextFormatter\Tests\Plugins\Preg\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests with data set #4
 [x] Parsing tests with data set #5
 [x] Parsing tests with data set #6
 [x] Parsing tests with data set #7
 [x] Parsing tests with data set #8
 [x] Parsing tests with data set #9
 [x] Parsing tests with data set #10
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing tests (JavaScript) with data set #4
 [x] Parsing tests (JavaScript) with data set #5
 [x] Parsing tests (JavaScript) with data set #6
 [x] Parsing tests (JavaScript) with data set #7
 [x] Parsing tests (JavaScript) with data set #8
 [x] Parsing tests (JavaScript) with data set #9
 [x] Parsing tests (JavaScript) with data set #10
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1
 [x] Parsing+rendering tests with data set #2
 [x] Parsing+rendering tests with data set #3

Configurator (s9e\TextFormatter\Tests\Plugins\TaskLists\Configurator)
 [x] Automatically creates an "TASK" tag with an "id" attribute and a "state" attribute
 [x] Returns no config
 [x] Does not modify the LI template twice
 [x] Does not add the LI filter twice
 [x] Rechecks the LI tag when finalized()
 [x] Nothing happens if LI is deleted

Helper (s9e\TextFormatter\Tests\Plugins\TaskLists\Helper)
 [x] Get stats with data set #0
 [x] Get stats with data set #1
 [x] getStats() counts custom states
 [x] Mark task state with data set #0
 [x] Mark task state with data set #1
 [x] Mark task state with data set #2
 [x] Mark task state with data set #3
 [x] Mark task state with data set #4
 [x] Mark task state with data set #5
 [x] Mark task state with data set #6
 [x] Mark task state with data set #7

Parser (s9e\TextFormatter\Tests\Plugins\TaskLists\Parser)
 [x] Parsing tests with data set #0
 [x] Parsing tests with data set #1
 [x] Parsing tests with data set #2
 [x] Parsing tests with data set #3
 [x] Parsing tests (JavaScript) with data set #0
 [x] Parsing tests (JavaScript) with data set #1
 [x] Parsing tests (JavaScript) with data set #2
 [x] Parsing tests (JavaScript) with data set #3
 [x] Parsing+rendering tests with data set #0
 [x] Parsing+rendering tests with data set #1

Renderer (s9e\TextFormatter\Tests\Renderer)
 [x] loadXML() returns a DOMDocument
 [x] render() throws an exception on invalid XML with a "r" root tag
 [x] render() throws an exception on truncated XML with a "t" root tag

PHP (s9e\TextFormatter\Tests\Renderers\PHP)
 [x] Is serializable
 [x] The source of the renderer is omitted for serialization
 [x] The last output of the renderer is omitted for serialization
 [x] Internal objects and resources are unset after rendering
 [x] The abstract renderer has a default implementation for renderQuickTemplate()
 [x] render() throws an exception on invalid XML with a "r" root tag that could be rendered by the Quick renderer
 [x] Renders plain text
 [x] Renders multi-line text
 [x] Renders rich text
 [x] Ignores locale
 [x] getParameter() returns the default value of a parameter
 [x] getParameter() returns the set value of a parameter
 [x] getParameter() returns an empty string for undefined parameters
 [x] getParameters() returns the values of all parameters, defined and set
 [x] setParameter() sets the value of a parameter
 [x] setParameters() sets the values of any number of parameters in an associative array
 [x] setParameter() accepts values that contain both types of quotes
 [x] Custom parameters are properly saved and restored after serialization
 [x] DTDs in the XML representation cause an exception to be thrown
 [x] Comments in the XML representation cause an exception to be thrown
 [x] Processing instructions in the XML representation cause an exception to be thrown
 [x] Is not vulnerable to XXE
 [x] Renders plain text with SMP character
 [x] Renders rich text with SMP character
 [x] Renders rich text with SMP character encoded as hex
 [x] Does not decode special chars in a plain text with a SMP character
 [x] Does not decode special chars in a rich text with a SMP character
 [x] Does not decode special chars encoded as numeric entities in a plain text with a SMP character
 [x] Does not decode special chars encoded as numeric entities in a rich text with a SMP character
 [x] Uses double quotes for attribute values

Unformatted (s9e\TextFormatter\Tests\Renderers\Unformatted)
 [x] Returns unformatted version of rich text
 [x] Converts newlines to <br>
 [x] Keeps HTML's special characters escaped
 [x] Escapes unescaped special characters
 [x] setParameter() doesn't do anything

XSLT (s9e\TextFormatter\Tests\Renderers\XSLT)
 [x] Is serializable
 [x] Does not serialize the XSLTProcessor instance
 [x] Preserves other properties during serialization
 [x] setParameter() accepts values that contain both types of quotes but replaces ASCII character " with Unicode character 0xFF02 because of https://bugs.php.net/64137
 [x] Does not output </embed> end tags
 [x] Does not improperly replace single quotes inside attribute values
 [x] Correctly parses parameters from the stylesheet
 [x] Renders plain text
 [x] Renders multi-line text
 [x] Renders rich text
 [x] Ignores locale
 [x] getParameter() returns the default value of a parameter
 [x] getParameter() returns the set value of a parameter
 [x] getParameter() returns an empty string for undefined parameters
 [x] getParameters() returns the values of all parameters, defined and set
 [x] setParameter() sets the value of a parameter
 [x] setParameters() sets the values of any number of parameters in an associative array
 [x] Custom parameters are properly saved and restored after serialization
 [x] DTDs in the XML representation cause an exception to be thrown
 [x] Comments in the XML representation cause an exception to be thrown
 [x] Processing instructions in the XML representation cause an exception to be thrown
 [x] Is not vulnerable to XXE
 [x] Renders plain text with SMP character
 [x] Renders rich text with SMP character
 [x] Renders rich text with SMP character encoded as hex
 [x] Does not decode special chars in a plain text with a SMP character
 [x] Does not decode special chars in a rich text with a SMP character
 [x] Does not decode special chars encoded as numeric entities in a plain text with a SMP character
 [x] Does not decode special chars encoded as numeric entities in a rich text with a SMP character
 [x] Uses double quotes for attribute values

Unparser (s9e\TextFormatter\Tests\Unparser)
 [x] unparse('<t>Plain text</t>') returns 'Plain text'
 [x] unparse('<t>&lt;Plain text&gt;</t>') returns '<Plain text>'
 [x] unparse("<mt>a<br />\nb</mt>") returns "a\nb"
 [x] unparse('<r><B><s>[b]</s>Rich<e>[/b]</e></B> text <E>:)</E></r>') returns '[b]Rich[/b] text :)'
 [x] Can unparse representations that were over-escaped
 [x] Characters outside Unicode's BMP are decoded

Cached (s9e\TextFormatter\Tests\Utils\Http\Clients\Cached)
 [x] Settings from the proxied client are copied
 [x] Settings from the caching client are copied to the proxied client
 [x] Can work without a cache dir
 [x] Works with a cache
 [x] Uses gzip by default if ext/zlib is availble
 [x] Sends custom headers
 [x] Resets custom headers between requests
 [x] post() sends the request body if set
 [x] post() sends no request body if not set
 [x] post() automatically sets Content-Length if a request body is set
 [x] get() returns the response error
 [x] get() returns headers if returnHeaders is true

Curl (s9e\TextFormatter\Tests\Utils\Http\Clients\Curl)
 [x] Uses gzip by default if ext/zlib is availble
 [x] Sends custom headers
 [x] Resets custom headers between requests
 [x] post() sends the request body if set
 [x] post() sends no request body if not set
 [x] post() automatically sets Content-Length if a request body is set
 [x] get() returns the response error
 [x] get() returns headers if returnHeaders is true

Native (s9e\TextFormatter\Tests\Utils\Http\Clients\Native)
 [x] Does not send "Accept-Encoding: gzip" if gzip is disabled
 [x] Uses gzip by default if ext/zlib is availble
 [x] Sends custom headers
 [x] Resets custom headers between requests
 [x] post() sends the request body if set
 [x] post() sends no request body if not set
 [x] post() automatically sets Content-Length if a request body is set
 [x] get() returns the response error
 [x] get() returns headers if returnHeaders is true

Http (s9e\TextFormatter\Tests\Utils\Http)
 [x] getClient() returns an instance of s9e\TextFormatter\Utils\Http\Client
 [x] getCachingClient() returns an instance of s9e\TextFormatter\Utils\Http\Clients\Cached that implements s9e\TextFormatter\Utils\Http\Client

Document (s9e\TextFormatter\Tests\Utils\ParsedDOM\Document)
 [x] createTagElement('b') normalizes tag name to 'B'
 [x] createTagElement('foo:BAR') creates a namespaced tag
 [x] createTagElement() sets attributes
 [x] createTagElement() normalizes attribute names
 [x] normalizeDocument() normalizes elements
 [x] normalizeDocument() removes superfluous namespaces
 [x] __toString() returns a string without an XML declaration
 [x] __toString() returns "<t></t>" for completely empty content
 [x] __toString() removes empty markup
 [x] __toString() encodes SMP characters

Element (s9e\TextFormatter\Tests\Utils\ParsedDOM\Element)
 [x] normalize() removes empty s elements
 [x] normalize() removes empty e elements
 [x] normalize() removes empty i elements
 [x] normalize() does not remove e/i/s elements that only contain whitespace
 [x] normalize() does not remove empty E elements
 [x] normalize() sorts attributes by name
 [x] normalize() runs recursively
 [x] setMarkupEnd('*') creates an 'e' element
 [x] setMarkupEnd('*') replaces the 'e' element if it exists
 [x] setMarkupEnd('') removes the 'e' element
 [x] setMarkupStart('*') creates an 's' element
 [x] setMarkupStart('*') replaces the 's' element if it exists
 [x] setMarkupStart('') removes the 's' element
 [x] unparse() does not remove any content
 [x] unparse() does not apply recursively
 [x] replaceTag() replaces a tag and its attributes
 [x] replaceTag() normalizes tag names and attribute names

Parsed DOM (s9e\TextFormatter\Tests\Utils\ParsedDOM)
 [x] loadXML() returns an instance of s9e\TextFormatter\Utils\ParsedDOM\Document

XPath (s9e\TextFormatter\Utils\XPath)
 [x] export('foo') returns 'foo'
 [x] export("d'oh") returns "d'oh"
 [x] export("'\"") returns concat("'",'"')
 [x] export('"\'') returns concat('"',"'")
 [x] export(123) returns 123
 [x] export(123.45) returns 123.45
 [x] export(123.45) returns 123.45 regardless of locale
 [x] export(new stdClass) throws an exception
 [x] export(false) returns 'false()'
 [x] export(true) returns 'true()'
 [x] export(INF) throws an exception

Utils (s9e\TextFormatter\Tests\Utils)
 [x] encodeUnicodeSupplementaryCharacters() tests with data set #0
 [x] getAttributeValues() tests with data set #0
 [x] getAttributeValues() tests with data set #1
 [x] getAttributeValues() tests with data set #2
 [x] getAttributeValues() tests with data set #3
 [x] getAttributeValues() tests with data set #4
 [x] getAttributeValues() tests with data set #5
 [x] getAttributeValues() tests with data set #6
 [x] getAttributeValues() tests with data set #7
 [x] removeFormatting() tests with data set #0
 [x] removeFormatting() tests with data set #1
 [x] removeFormatting() tests with data set #2
 [x] removeFormatting() tests with data set #3
 [x] removeFormatting() tests with data set #4
 [x] removeFormatting() tests with data set #5
 [x] removeTag() tests with data set #0
 [x] removeTag() tests with data set #1
 [x] removeTag() tests with data set #2
 [x] removeTag() tests with data set #3
 [x] removeTag() tests with data set #4
 [x] removeTag() tests with data set #5
 [x] removeTag() tests with data set #6
 [x] removeTag() tests with data set #7
 [x] removeTag() tests with data set #8
 [x] removeTag() tests with data set #9
 [x] replaceAttributes() tests with data set #0
 [x] replaceAttributes() tests with data set #1
 [x] replaceAttributes() tests with data set #2
 [x] replaceAttributes() tests with data set #3
 [x] replaceAttributes() tests with data set #4
 [x] replaceAttributes() tests with data set #5
 [x] replaceAttributes() tests with data set #6
 [x] replaceAttributes() tests with data set #7
 [x] replaceAttributes() tests with data set #8
 [x] replaceAttributes() tests with data set #9
 [x] replaceAttributes() tests with data set #10
 [x] replaceAttributes() tests with data set #11

